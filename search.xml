<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>AI答题应用平台_8部署上线</title>
      <link href="/2024/07/22/AI%E7%AD%94%E9%A2%98%E5%BA%94%E7%94%A8%E5%B9%B3%E5%8F%B0_8.%E9%83%A8%E7%BD%B2%E4%B8%8A%E7%BA%BF/"/>
      <url>/2024/07/22/AI%E7%AD%94%E9%A2%98%E5%BA%94%E7%94%A8%E5%B9%B3%E5%8F%B0_8.%E9%83%A8%E7%BD%B2%E4%B8%8A%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="部署规划"><a href="#部署规划" class="headerlink" title="部署规划"></a>部署规划</h1><h2 id="部署方案"><a href="#部署方案" class="headerlink" title="部署方案"></a>部署方案</h2><p>前端采用vercel来部署，后端采用微信云托管平台，以容器的方式来部署。<br><a href="https://vercel.com/">vercel平台</a>可以免费部署前端项目，并且可以和GitHub进行绑定，直接读取GitHub的仓库项目，根据package.json自动安装依赖，以及项目打包构建命令，还会提供测试域名以及正式的HTTPS域名供用户使用，也支持自定义域名、代码变更时自动部署，监控等操作。<br><img src="https://fanzher.xyz/img/1722849090161-bb48305d-c76f-4f4b-8fef-88074a5fa4ea.png" alt="image.png"><br><a href="https://cloud.weixin.qq.com/cloudrun">微信云托管平台</a>以容器的方式来部署，支持读取Github仓库的项目，并根据Dockerfile自动构建容器镜像并启动，还会提供HTTPS的公网域名供用户使用，和vercel类似，它也支持代码变更时自动部署，快速回滚版本、监控等功能。不过需要注意<strong>它是按量付费的</strong>。<br><strong>优点：</strong></p><ul><li>不需要登录服务器输入命令，更方便</li><li>更易于项目的扩展和回滚</li><li>平台内置监控功能，更易于管理项目</li></ul><h2 id="地址规划"><a href="#地址规划" class="headerlink" title="地址规划"></a>地址规划</h2><p>前端：使用vercel生成的域名，访问地址为：http:&#x2F;&#x2F;{域名}<br>后端：使用微信云托管生成的默认域名，访问地址为：htpp:&#x2F;&#x2F;{域名}&#x2F;api，端口为8101<br>数据库：需自行安装，一般为服务器的3306端口<br>Redis：需自行安装，一般为服务器的6379端口</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>由于前后端都是使用平台生成的默认域名，二者不一样，存在跨域的问题，虽然后端已经通过CorsConfig进行了跨域的设置，但是cookie无法跨域设置，可能会导致用户无法登录。</p><h1 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h1><p>本项目中用到了MySQL、Redis、对象存储以及ChatGLM AI。<br>首先自己买一个服务器，不用太高配置，2核2G够用了，可以使用宝塔面板来管理后端服务器</p><p><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722868315393-5071450b-1e70-447d-9f0f-597315aa2e8f.png" alt="image.png"></p><p>在【应用管理】中可以看到面板的管理页地址，在访问该页面前需要在防火墙中放行8888端口。<br>进入宝塔管理页面后，可以在【应用市场】中安装MySql和Redis。之后在【数据库】中添加MySQL和Redis的配置</p><ol><li>MySQL</li></ol><p><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722868243204-dae177da-2761-43b6-bbbb-180458e78cbb.png" alt="image.png"></p><ol start="2"><li>Redis</li></ol><p><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722868552478-9d4a1d87-b26c-416b-af53-8319611ef8ad.png" alt="image.png"><br>Redis中需要配置bind为0.0.0.0，即放行所有ip，这时需要设置Redis的密码。</p><ol start="3"><li>对象存储</li></ol><p>需要在腾讯云的访问控制中获取对象存储的key和secret，同时如果在对象存储中使用了防盗链，那么需要将前端域名添加到访问控制的白名单中，否则图片无法加载。<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722869289022-ea3b0eb3-37a6-449d-bddb-57b8330c6de4.png" alt="image.png"></p><ol start="4"><li>ChatGLM质谱AI</li></ol><p>需要在质谱开放平台中设置APIkey。<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722869402415-ea46c4e5-3310-4296-bfd0-6c2a5b616a7f.png" alt="image.png"></p><h1 id="后端部署"><a href="#后端部署" class="headerlink" title="后端部署"></a>后端部署</h1><h2 id="数据库初始化"><a href="#数据库初始化" class="headerlink" title="数据库初始化"></a>数据库初始化</h2><p>首先利用IDEA自带的数据库管理工具，连接远程数据库<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722869866868-35256313-5086-4e68-b9fd-bc001f99f628.png" alt="image.png"><br>然后执行sql目录下的<code>create_table.sql</code>和<code>init_data.sql</code>来创建库表以及插入初始化数据。<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722870216274-828642d2-10ef-4b68-afe1-61fc9c268285.png" alt="image.png"><br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722870241677-b8637541-418d-4371-a73b-12edb75c6479.png" alt="image.png"><br>执行完之后可以看到表都创建好了。</p><h2 id="项目修改"><a href="#项目修改" class="headerlink" title="项目修改"></a>项目修改</h2><p><strong>配置修改</strong><br>主要是修改application-prod.yml中的数据，包括：数据库、分库分表、Redis、对象存储以及ChatGLM APIkey的配置。<br>还可以设置接口文档的配置，添加用户名和密码，限制访问<br>示例配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 线上配置文件</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8101</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment"># 数据库配置</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://&#123;修改为你的数据库地址&#125;/yudada</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">修改为你的用户名</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">修改为你的密码</span></span><br><span class="line">  <span class="comment"># Redis 配置</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">database:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">修改为你的地址</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">修改为你的密码</span></span><br><span class="line">  <span class="comment"># 分库分表配置（开源代码部署可忽略）</span></span><br><span class="line">  <span class="attr">shardingsphere:</span></span><br><span class="line">    <span class="comment">#数据源配置</span></span><br><span class="line">    <span class="attr">datasource:</span></span><br><span class="line">      <span class="comment"># 多数据源以逗号隔开即可</span></span><br><span class="line">      <span class="attr">names:</span> <span class="string">yudada</span></span><br><span class="line">      <span class="attr">yudada:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">        <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">        <span class="attr">jdbc-url:</span> <span class="string">jdbc:mysql://&#123;修改为你的数据库地址&#125;/yudada</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">修改为你的用户名</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">修改为你的密码</span></span><br><span class="line">    <span class="comment"># 规则配置</span></span><br><span class="line">    <span class="attr">rules:</span></span><br><span class="line">      <span class="attr">sharding:</span></span><br><span class="line">        <span class="comment"># 分片算法配置</span></span><br><span class="line">        <span class="attr">sharding-algorithms:</span></span><br><span class="line">          <span class="comment"># 自定义分片规则名</span></span><br><span class="line">          <span class="attr">answer-table-inline:</span></span><br><span class="line">            <span class="comment">## inline 类型是简单的配置文件里面就能写的类型，其他还有自定义类等等</span></span><br><span class="line">            <span class="attr">type:</span> <span class="string">INLINE</span></span><br><span class="line">            <span class="attr">props:</span></span><br><span class="line">              <span class="attr">algorithm-expression:</span> <span class="string">user_answer_$-&gt;&#123;appId</span> <span class="string">%</span> <span class="number">2</span><span class="string">&#125;</span></span><br><span class="line">        <span class="attr">tables:</span></span><br><span class="line">          <span class="attr">user_answer:</span></span><br><span class="line">            <span class="attr">actual-data-nodes:</span> <span class="string">yudada.user_answer_$-&gt;&#123;0..1&#125;</span></span><br><span class="line">            <span class="comment"># 分表策略</span></span><br><span class="line">            <span class="attr">table-strategy:</span></span><br><span class="line">              <span class="attr">standard:</span></span><br><span class="line">                <span class="attr">sharding-column:</span> <span class="string">appId</span></span><br><span class="line">                <span class="attr">sharding-algorithm-name:</span> <span class="string">answer-table-inline</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="comment"># 生产环境关闭日志</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 接口文档配置</span></span><br><span class="line"><span class="attr">knife4j:</span></span><br><span class="line">  <span class="attr">basic:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">修改为你的用户名</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">修改为你的密码</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改好配置后，把最新的代码提交到GitHub仓库上，不过<strong>需要把仓库设置为private，不要泄露敏感信息。</strong><br><strong>Dockerfile编写</strong><br>Dockerfile类似于一个脚本文件，用来指定我们构建docker镜像的步骤，一般将Dockerfile放在项目的根目录下</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker 镜像构建</span></span><br><span class="line"><span class="comment"># 选择基础镜像</span></span><br><span class="line"><span class="keyword">FROM</span> maven:<span class="number">3.8</span>.<span class="number">1</span>-jdk-<span class="number">8</span>-slim as builder</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决容器时期与真实时间相差 8 小时的问题</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">ln</span> -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; <span class="built_in">echo</span> Asia/Shanghai &gt; /etc/timezone</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制代码到容器内</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> pom.xml .</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> src ./src</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打包构建</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> mvn package -DskipTests</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 容器启动时运行 jar 包</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;java&quot;</span>,<span class="string">&quot;-jar&quot;</span>,<span class="string">&quot;/app/target/yudada-backend-0.0.1-SNAPSHOT.jar&quot;</span>,<span class="string">&quot;--spring.profiles.active=prod&quot;</span>]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>首先进入<a href="https://cloud.weixin.qq.com/cloudrun">微信云托管平台</a>，创建环境并新建服务，注意要打开公网服务。<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722870845692-d6b27808-4ff2-431c-a3fd-1848febd167b.png" alt="image.png"><br>之后需要配置要导入的项目，即GitHub上的项目。<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722870901946-16b3cd2f-8ff2-4da1-aa1d-8f5fa2c6ad2c.png" alt="image.png"><br>注意这里的端口需要和后端服务的端口保持一致。<br>配置完之后点击发布，之后需要一段时间来构建项目。</p><h1 id="前端部署"><a href="#前端部署" class="headerlink" title="前端部署"></a>前端部署</h1><h2 id="项目修改-1"><a href="#项目修改-1" class="headerlink" title="项目修改"></a>项目修改</h2><p>修改request.ts中的代码，区分开发环境和生产环境使用的接口地址，生产环境的接口地址就是上面后端部署得到的公网域名。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 是否是开发环境</span><br><span class="line">export const isDev = process.env.NODE_ENV === &quot;development&quot;;</span><br><span class="line"></span><br><span class="line">// 创建 Axios 实例</span><br><span class="line">const myAxios = axios.create(&#123;</span><br><span class="line">  baseURL: isDev ? &quot;http://localhost:8101&quot; : &quot;改为自己的后端地址&quot;,</span><br><span class="line">  timeout: 60000,</span><br><span class="line">  withCredentials: true,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="部署-1"><a href="#部署-1" class="headerlink" title="部署"></a>部署</h2><p>首先将项目上传到GitHub上，注意仓库设置为私有，防止泄漏敏感信息。<br>直接登录<a href="https://vercel.com/">vercel官网</a>，授权GitHub后，新建项目，选择我们的前端项目<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722872877563-6bfb9680-b30e-4a7f-a17d-3b0d2ecca57b.png" alt="image.png"><br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722872938651-9c498178-85fe-42d6-9313-414a4fd27779.png" alt="image.png"><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722872962586-208ef84a-1a3e-4d85-9886-2baa6c33d0d0.png" alt="image.png"><br>部署完之后，就可以看到vercel给我们提供的域名。可以直接访问<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722873563290-283fa128-bd9f-4d38-ac32-aca33681da05.png" alt="image.png"></p><h1 id="解决Cookie跨域"><a href="#解决Cookie跨域" class="headerlink" title="解决Cookie跨域"></a>解决Cookie跨域</h1><p>虽然访问前端域名，可以打开主页，但是无法登录，这是因为前后端域名不同，产生了跨域问题，<br>通过按F12前端的cookie没有种上，后端无法确认前端用户信息，所以查询不到登录态。<br>要解决这个问题，一种典型的方法是让前端请求相同的域名，使用Nginx通过路径（比如&#x2F;api）转发到真实的后端，<a href="https://www.bilibili.com/video/BV1eT421i7si/?vd_source=8e29c125ac88ed01a9f6cb98fffdd657">参考视频</a><br>但由于我们前端和后端都使用了第三方平台部署，不方便再引入Nginx，怎么办呢？<br>还有一种方式、是修改后端项目设置Cookie的配置，必须同时设置SameSite&#x3D;Nome和Secure&#x3D;true。SameSite&#x3D;None表示Cookie将被发送到跨站请求中，而Secure&#x3D;true确保Cookie只能通过HTTPS的方式发送，从而提高了安全性。<br>修改SpringBoot生产环境配置文件如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8101</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">session:</span></span><br><span class="line">      <span class="attr">cookie:</span></span><br><span class="line">        <span class="comment"># 解决跨域</span></span><br><span class="line">        <span class="attr">same-site:</span> <span class="string">none</span></span><br><span class="line">        <span class="attr">secure:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>然后将修改推送到GitHub上，会自动触发微信云托管平台的流水线部署，稍等片刻再次访问，这个项目的各个操作都能正常访问。<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722875806610-e42979f6-867c-4db4-b6ef-6e1dd241a948.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> AI答题应用平台 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java项目 </tag>
            
            <tag> AI答题应用平台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI答题应用平台_7系统优化</title>
      <link href="/2024/07/19/AI%E7%AD%94%E9%A2%98%E5%BA%94%E7%94%A8%E5%B9%B3%E5%8F%B0_7.%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96/"/>
      <url>/2024/07/19/AI%E7%AD%94%E9%A2%98%E5%BA%94%E7%94%A8%E5%B9%B3%E5%8F%B0_7.%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="幂等设计"><a href="#幂等设计" class="headerlink" title="幂等设计"></a>幂等设计</h1><p>什么是幂等性？<br>在编程场景中：<strong>幂等性指的是使用相同的参数去调用同一个接口，调用多次的结果跟调用单次的结果是一样的。</strong>企业级项目中的一些关键接口，比如支付扣款、发货等接口都需要做幂等性设计。<br>假设一个场景，因为网络原因，我们在支付某个商品的时候，扣款接口超时了，并且没有重试，那么可能给用户发货了，但是没有扣款成功。如果可以重试，那么如果用户第一次就扣款了，只不过是响应结果的接口超时了，这个时候有可能会二次付款。<br>所以幂等性在一些需要业务一致性的场景非常重要，因为这些场景经常需要重试，重试就需要保证幂等。<br>还有一些情况，可能是用户误触的，连续多次点击按钮。<br>虽然前端可以把按钮置灰来防止用户的多次点击，但是这并不能实现完全的幂等性，比如前端调用后端接口超时时，有可能后端已经存储了数据，此时前端可以再次点击按钮，那么就会生成两条数据。</p><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><p>在本项目的答题页面中，如果用户在做完题后，连续多次的点击提交按钮，数据库可能会产生多条相同的答题记录，并且调用多次AI。<br>虽然调用多次AI的问题之前已经通过缓存解决，但是还是要防止用户产生多条答题记录。因此需要对接口进行幂等处理。</p><h2 id="方案选型"><a href="#方案选型" class="headerlink" title="方案选型"></a>方案选型</h2><p>比较主流的幂等性设计主要有以下几种：</p><h3 id="数据库唯一索引"><a href="#数据库唯一索引" class="headerlink" title="数据库唯一索引"></a>数据库唯一索引</h3><p>利用数据库唯一索引的一致性保证幂等性。<br>比如将数据库订单表的订单号设置为唯一索引，用户生成订单会执行insert语句，MySQL根据唯一索引天然阻止相同的订单号的插入。可以catch住报错，让接口正常返回结果。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  insertOrder(&#123;id: xxx&#125;);  </span><br><span class="line">&#125; <span class="keyword">catch</span>(DuplicateKeyException e) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数据库乐观锁"><a href="#数据库乐观锁" class="headerlink" title="数据库乐观锁"></a>数据库乐观锁</h3><p>乐观锁并不是真的加锁，而是给配置表设置一个版本version字段，每次修改需要查看当前的版本号是否和访问该数据前的版本号一致，也即没有被别人同时修改过，才能给版本号加1。<br>如果配置表修改成功，那么通过返回影响的行数（1表示成功、0表示失败）返回结果。</p><h3 id="天然幂等性"><a href="#天然幂等性" class="headerlink" title="天然幂等性"></a>天然幂等性</h3><p>还有一些本身就具备幂等性的操作，比如delete操作，删除一次和多次的结果是一样的。<br>还有一些更新操作</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> sys_config <span class="keyword">set</span> config <span class="operator">=</span> &quot;a&quot; <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h3 id="分布式锁"><a href="#分布式锁" class="headerlink" title="分布式锁"></a>分布式锁</h3><p>导致数据错乱的很多时候，都是由于“并发修改”。<br>很多时候业务场景是这样的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、查找数据</span><br><span class="line"><span class="number">2</span>、<span class="keyword">if</span> (不包含这个数据) &#123;</span><br><span class="line">  <span class="number">3</span>、插入这条数据</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果没有并发的情况下，这样的流程是没有什么问题的，但是在多并发情况下，可能有多个线程同时到达第2步，它们发现不包含这个数据，那么都会执行插入操作，导致重复插入同一条数据。<br>针对这种情况，可以加一把分布式锁来解决。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">分布式锁 &#123;</span><br><span class="line">  <span class="number">1</span>、查找数据</span><br><span class="line">  <span class="number">2</span>、<span class="keyword">if</span> (不包含这个数据) &#123;</span><br><span class="line">    <span class="number">3</span>、插入这条数据</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多个线程当想用插入数据时，首先都会抢占这把锁，同一时间只有一个线程能够进入代码，这样就能保证数据的一致性。<br>可以思考下，用户提交答案的场景可以使用哪些方案？</p><ul><li>数据库唯一索引：合适。本来数据库就支持唯一id，实现成本低</li><li>乐观锁：不合适，因为我们是要插入一条新数据，版本号无从参考，也没法设置版本号字段</li><li>天然幂等性：不合适，因为是插入操作，而不是删除或修改操作</li><li>分布式锁：合适。</li></ul><h2 id="方案设计"><a href="#方案设计" class="headerlink" title="方案设计"></a>方案设计</h2><h3 id="业务流程"><a href="#业务流程" class="headerlink" title="业务流程"></a>业务流程</h3><p>如果使用数据库唯一索引，那么给哪些字段加唯一索引呢？<br>id一般是首要选择，但是因为是插入数据，所以id还没有生成，那怎么解决？<br>自己造一个字段来作为唯一索引就好了</p><ol><li>前端进入答题页面，请求后端返回一个全局唯一id</li><li>用户提交回答时，不仅提交选择，也带上这个唯一id</li><li>后端可以将这个全局唯一id保存到某个唯一索引字段，利用数据库实现幂等性</li></ol><h3 id="唯一id获取"><a href="#唯一id获取" class="headerlink" title="唯一id获取"></a>唯一id获取</h3><p>现在流程有了，那要求后端返回的这个全局唯一id怎么获取呢？并且把这个唯一id存储到哪个字段呢？<br>第一种方案是使用UUID生成随机id，并且在数据库中新增一个列专门用来存放生成的id。<br>但是没有必要来新增一列来存放全局唯一id，因为表中的主键本身就是唯一的，所以可以复用主键来进行唯一性判断。<br>主键的类型是bitint，所以只需要更换唯一id生成的策略，使用雪花算法生成全局唯一id即可。<br>可以使用Hutool工具提供的IdUtil来基于雪花算法生成唯一id</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IdUtil.getSnowflakeNextId()</span><br></pre></td></tr></table></figure><p>雪花算法原理图<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722825272986-7e90534e-9835-4f04-aed4-162bb10b3bde.png" alt="image.png"><br>通过时间戳（毫秒）来保证递增，通过机器id、服务id、递增序号（同一毫秒)来保证唯一性。</p><h2 id="后端开发"><a href="#后端开发" class="headerlink" title="后端开发"></a>后端开发</h2><h3 id="复用主键方案"><a href="#复用主键方案" class="headerlink" title="复用主键方案"></a>复用主键方案</h3><ol><li><p>在UserAnswerController中添加接口，每次进入答题页面，从前端获取唯一id</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/generate/id&quot;)</span></span><br><span class="line"><span class="keyword">public</span> BaseResponse&lt;Long&gt; <span class="title function_">generateUserAnswerId</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ResultUtils.success(IdUtil.getSnowflakeNextId());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改UserAnswer的校验逻辑，添加对这个生成的id的校验</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 校验数据</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> userAnswer</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> add        对创建的数据进行校验</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">validUserAnswer</span><span class="params">(UserAnswer userAnswer, <span class="type">boolean</span> add)</span> &#123;</span><br><span class="line">       ThrowUtils.throwIf(userAnswer == <span class="literal">null</span>, ErrorCode.PARAMS_ERROR);</span><br><span class="line">       <span class="comment">// 从对象中取值</span></span><br><span class="line">       <span class="type">Long</span> <span class="variable">appId</span> <span class="operator">=</span> userAnswer.getAppId();</span><br><span class="line">       <span class="type">Long</span> <span class="variable">id</span> <span class="operator">=</span> userAnswer.getId();</span><br><span class="line">       <span class="comment">// 创建数据时，参数不能为空</span></span><br><span class="line">       <span class="keyword">if</span> (add) &#123;</span><br><span class="line">           <span class="comment">//  补充校验规则</span></span><br><span class="line">           ThrowUtils.throwIf(appId == <span class="literal">null</span> || appId &lt;= <span class="number">0</span>, ErrorCode.PARAMS_ERROR, <span class="string">&quot;appId非法&quot;</span>);</span><br><span class="line">           ThrowUtils.throwIf(id == <span class="literal">null</span> || id &lt;= <span class="number">0</span>, ErrorCode.PARAMS_ERROR, <span class="string">&quot;id非法&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       ...</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li><li><p>提交用户答案的请求字段中，添加这个id，再保存到后端数据库中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建用户答案请求</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserAnswerAddRequest</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * id 用于保证提交答案的幂等性</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 应用 id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long appId;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户答案（JSON 数组）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; choices;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(exist = false)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改用户答案提交接口，将id填充到回答对象中并插入到数据库，默认会通过BeanUtils.copyProperties填充。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">BeanUtils.copyProperties(userAnswerAddRequest, userAnswer);</span><br><span class="line">...</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">// 写入数据库</span></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> userAnswerService.save(userAnswer);</span><br><span class="line">            ThrowUtils.throwIf(!result, ErrorCode.OPERATION_ERROR);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (DuplicateKeyException e)&#123;</span><br><span class="line">            <span class="comment">//ignore error</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="新增UUID字段"><a href="#新增UUID字段" class="headerlink" title="新增UUID字段"></a>新增UUID字段</h3><ol><li><p>修改user_answer表，新增serialNumber字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> user_answer_0</span><br><span class="line">    <span class="keyword">add</span> serialNumber <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">null</span> comment <span class="string">&#x27;用户答题流水号&#x27;</span> after userId;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index serialNumber_unidx</span><br><span class="line">    <span class="keyword">on</span> user_answer_0 (serialNumber);</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> user_answer_1</span><br><span class="line">    <span class="keyword">add</span> serialNumber <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">null</span> comment <span class="string">&#x27;用户答题流水号&#x27;</span> after userId;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index serialNumber_unidx</span><br><span class="line">    <span class="keyword">on</span> user_answer_1 (serialNumber);</span><br></pre></td></tr></table></figure><p>问：之前的数据中这个字段都为空，那么添加唯一索引是不是冲突了？<br>答：并不冲突，虽然之前数据该字段都为NULL，但是NULL跟NULL是不一样的，它表示未知，所以唯一索引可以使用NULL。</p></li><li><p>改造用户获取题目接口，返回本次生成的serialNumber，利用UUID生成。</p></li></ol><p>QuestionVO新增serialNumber字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 答题流水号</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> String serialNumber;</span><br></pre></td></tr></table></figure><p>QuestionServiceImpl中修改getQuestionVO，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> QuestionVO <span class="title function_">getQuestionVO</span><span class="params">(Question question, HttpServletRequest request)</span> &#123;</span><br><span class="line">    <span class="comment">// 对象转封装类</span></span><br><span class="line">    <span class="type">QuestionVO</span> <span class="variable">questionVO</span> <span class="operator">=</span> QsuestionVO.objToVo(question);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回流水号</span></span><br><span class="line">    questionVO.setSerialNumber(UUID.randomUUID().toString());</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 可以根据需要为封装对象补充值，不需要的内容可以删除</span></span><br><span class="line">    <span class="comment">// region 可选</span></span><br><span class="line">    <span class="comment">// 1. 关联查询用户信息</span></span><br><span class="line">    <span class="type">Long</span> <span class="variable">userId</span> <span class="operator">=</span> question.getUserId();</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (userId != <span class="literal">null</span> &amp;&amp; userId &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        user = userService.getById(userId);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">UserVO</span> <span class="variable">userVO</span> <span class="operator">=</span> userService.getUserVO(user);</span><br><span class="line">    questionVO.setUser(userVO);</span><br><span class="line">    <span class="comment">// endregion</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> questionVO;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>改造用户答案提交接口，接收serialNumber，并利用数据库唯一索引校验防止重复提交。</li></ol><p>UserAnswerAddRequest字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 答题流水号</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> String serialNumber;</span><br></pre></td></tr></table></figure><p>UserAnswer新增流水线字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 答题流水号</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">private</span> String serialNumber;</span><br></pre></td></tr></table></figure><p>修改校验用户答案逻辑，添加对serialNumber字段的校验</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">validUserAnswer</span><span class="params">(UserAnswer userAnswer, <span class="type">boolean</span> add)</span> &#123;</span><br><span class="line">    ThrowUtils.throwIf(userAnswer == <span class="literal">null</span>, ErrorCode.PARAMS_ERROR);</span><br><span class="line">    <span class="comment">// 从对象中取值</span></span><br><span class="line">    <span class="type">Long</span> <span class="variable">appId</span> <span class="operator">=</span> userAnswer.getAppId();</span><br><span class="line">    <span class="type">String</span> <span class="variable">serialNumber</span> <span class="operator">=</span> userAnswer.getSerialNumber();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建数据时，参数不能为空</span></span><br><span class="line">    <span class="keyword">if</span> (add) &#123;</span><br><span class="line">        <span class="comment">// 补充校验规则</span></span><br><span class="line">        ThrowUtils.throwIf(appId == <span class="literal">null</span> || appId &lt;= <span class="number">0</span>, ErrorCode.PARAMS_ERROR, <span class="string">&quot;appId 非法&quot;</span>);</span><br><span class="line">        <span class="comment">// 幂等判断，serialNumber 必填</span></span><br><span class="line">        ThrowUtils.throwIf(StrUtil.isBlank(serialNumber) , ErrorCode.PARAMS_ERROR, <span class="string">&quot;serialNumber 不存在&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 修改数据时，有参数则校验</span></span><br><span class="line">    <span class="comment">// 补充校验规则</span></span><br><span class="line">    <span class="keyword">if</span> (appId != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="type">App</span> <span class="variable">app</span> <span class="operator">=</span> appService.getById(appId);</span><br><span class="line">        ThrowUtils.throwIf(app == <span class="literal">null</span>, ErrorCode.PARAMS_ERROR, <span class="string">&quot;应用不存在&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同时在添加该用户答案到数据库时，也需要添加该字段，UserAnswerController&#x2F;addUserAnswer方法中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/add&quot;)</span></span><br><span class="line"><span class="keyword">public</span> BaseResponse&lt;Long&gt; <span class="title function_">addUserAnswer</span><span class="params">(<span class="meta">@RequestBody</span> UserAnswerAddRequest userAnswerAddRequest, HttpServletRequest request)</span> &#123;</span><br><span class="line">    ThrowUtils.throwIf(userAnswerAddRequest == <span class="literal">null</span>, ErrorCode.PARAMS_ERROR);</span><br><span class="line">    <span class="comment">// 在此处将实体类和 DTO 进行转换</span></span><br><span class="line">    <span class="type">UserAnswer</span> <span class="variable">userAnswer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserAnswer</span>();</span><br><span class="line">    BeanUtils.copyProperties(userAnswerAddRequest, userAnswer);</span><br><span class="line">    List&lt;String&gt; choices = userAnswerAddRequest.getChoices();</span><br><span class="line">    userAnswer.setChoices(JSONUtil.toJsonStr(choices));</span><br><span class="line">    <span class="comment">// 数据校验</span></span><br><span class="line">    userAnswerService.validUserAnswer(userAnswer, <span class="literal">true</span>);</span><br><span class="line">    <span class="comment">// 判断 app 是否存在</span></span><br><span class="line">    <span class="type">Long</span> <span class="variable">appId</span> <span class="operator">=</span> userAnswerAddRequest.getAppId();</span><br><span class="line">    <span class="type">App</span> <span class="variable">app</span> <span class="operator">=</span> appService.getById(appId);</span><br><span class="line">    ThrowUtils.throwIf(app == <span class="literal">null</span>, ErrorCode.NOT_FOUND_ERROR);</span><br><span class="line">    <span class="keyword">if</span> (!ReviewStatusEnum.PASS.equals(ReviewStatusEnum.getEnumByValue(app.getReviewStatus()))) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR, <span class="string">&quot;应用未通过审核，无法答题&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 填充默认值</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">loginUser</span> <span class="operator">=</span> userService.getLoginUser(request);</span><br><span class="line">    userAnswer.setUserId(loginUser.getId());</span><br><span class="line"></span><br><span class="line">    <span class="type">long</span> newUserAnswerId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 写入数据库</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> userAnswerService.save(userAnswer);</span><br><span class="line">        ThrowUtils.throwIf(!result, ErrorCode.OPERATION_ERROR);</span><br><span class="line">        <span class="comment">// 返回新写入的数据 id</span></span><br><span class="line">        newUserAnswerId = userAnswer.getId();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (DuplicateKeyException e) &#123;</span><br><span class="line">        <span class="comment">//ignore error 获取之前数据 id</span></span><br><span class="line">        <span class="type">UserAnswer</span> <span class="variable">answer</span> <span class="operator">=</span> userAnswerService.getOne(Wrappers.lambdaQuery(UserAnswer.class)</span><br><span class="line">                .select(UserAnswer::getId)</span><br><span class="line">                .eq(UserAnswer::getSerialNumber, userAnswer.getSerialNumber())</span><br><span class="line">                .eq(UserAnswer::getAppId, userAnswer.getAppId())</span><br><span class="line">                .eq(UserAnswer::getUserId, userAnswer.getUserId()));</span><br><span class="line">        newUserAnswerId = answer.getId();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用评分模块</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">UserAnswer</span> <span class="variable">userAnswerWithResult</span> <span class="operator">=</span> scoringStrategyExecutor.doScore(choices, app);</span><br><span class="line">        userAnswerWithResult.setId(newUserAnswerId);</span><br><span class="line">        userAnswerService.updateById(userAnswerWithResult);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR, <span class="string">&quot;评分错误&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ResultUtils.success(newUserAnswerId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="前端开发"><a href="#前端开发" class="headerlink" title="前端开发"></a>前端开发</h2><p>修改做题页面，补充id的获取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 唯一 id</span><br><span class="line">const id = ref&lt;number&gt;();</span><br><span class="line"></span><br><span class="line">// 生成唯一 id</span><br><span class="line">const generateId = async () =&gt; &#123;</span><br><span class="line">  let res: any = await generateUserAnswerIdUsingGet();</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    id.value = res.data.data as any;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取唯一 id 失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>提交时，携带id即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">const res = await addUserAnswerUsingPost(&#123;</span><br><span class="line">  appId: props.appId as any,</span><br><span class="line">  choices: answerList,</span><br><span class="line">  id: id.value,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="线程池隔离"><a href="#线程池隔离" class="headerlink" title="线程池隔离"></a>线程池隔离</h1><p>之前在使用RxJava实现AI题目生成的时候，使用了<code>Schedulers.io()</code>方法。使用了一个IO密集型的线程池来处理质谱AI返回的数据流。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">modelDataFlowable</span><br><span class="line">    .observeOn(Schedulers.io())</span><br><span class="line">    .map(modelData -&gt; modelData.getChoices().get(<span class="number">0</span>).getDelta().getContent())</span><br><span class="line">    .map(message -&gt; message.replaceAll(<span class="string">&quot;\\s&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    .filter(StrUtil::isNotBlank)</span><br><span class="line">    .flatMap(message -&gt; &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;)</span><br><span class="line">    .doOnNext(c -&gt; &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;)</span><br><span class="line">    .doOnError((e) -&gt; log.error(<span class="string">&quot;sse error&quot;</span>, e))</span><br><span class="line">    .doOnComplete(sseEmitter::complete)</span><br><span class="line">    .subscribe();</span><br></pre></td></tr></table></figure><p>当业务量不大时，这么写没啥问题，但是随着业务量的激增，可能会有安全隐患。<br>在Java8中，它的并发流使用的线程池是<strong>全局共享</strong>的，也就是任何业务操作，如果用到并发流，默认使用的是一个线程池。</p><h2 id="需求分析-1"><a href="#需求分析-1" class="headerlink" title="需求分析"></a>需求分析</h2><p>如果所有的业务操作使用同一个线程池，最大的问题是<strong>相互影响</strong>。所以对于业务共享的线程池，使用时需考虑它的关联性。<br>隔离线程池的好处</p><ol><li>故障隔离，缩小事故范围</li><li>资源隔离，防止业务之间抢占资源。同时支持更细粒度的管理资源。</li><li>性能优化：不同的场景使用不同的线程池，比如IO密集型以及CPU密集性线程池</li></ol><p>本项目中使用的<code>Scheduler.io</code>就是全局共享的，它首先通过静态代码块初始化了一个IO线程池<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722838460216-6f5f8142-7397-4d96-8ffa-2449870a1adc.png" alt="image.png"><br>调用io方法时，会把该线程池实例作为默认的返回值<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722838517581-1af5ea5a-017b-4ca1-ae57-0f830d0e2776.png" alt="image.png"><br>实际的内部实现是RxJava自定义的CachedWorderPool线程池，它使用ConcurrentLindedQueue无界队列，并且没有做线程约束，每来一个任务就创建一个线程，然后起了一个evictor,每隔60s清理没用的线程<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722838836432-e3724967-56d8-4c86-aaed-1eebef6540b4.png" alt="image.png"><br>如果并发任务增多的化，会导致创建的线程过多，最终导致OOM。<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722838944179-9a528e39-c7c3-4c21-8c04-5e1a856783de.png" alt="image.png"><br>所以这里可以做一个优化，假设答题用户有两种，一类普通用户，一类vip（暂定管理员)，可以给管理员设置独立的线程池来调用AI服务，对于普通用户，只能调用<code>Schedulers.single()</code>单线程，防止普通用户占用过多资源。</p><h2 id="方案设计-1"><a href="#方案设计-1" class="headerlink" title="方案设计"></a>方案设计</h2><ol><li>给VIP用户设置单独的线程池</li><li>给普通用户使用<code>Schedulers.single()</code>单线程</li><li>改造AI生成题目，根据用户类型选择不同的线程池</li></ol><h2 id="开发实现"><a href="#开发实现" class="headerlink" title="开发实现"></a>开发实现</h2><p>定义vip线程池，并注册为bean，设置线程名</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.reactivex.Scheduler;</span><br><span class="line"><span class="keyword">import</span> io.reactivex.schedulers.Schedulers;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VipSchedulerConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Scheduler <span class="title function_">vipScheduler</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ThreadFactory</span> <span class="variable">threadFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThreadFactory</span>() &#123;</span><br><span class="line">            <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">AtomicInteger</span> <span class="variable">threadNumber</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AtomicInteger</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> Thread <span class="title function_">newThread</span><span class="params">(Runnable r)</span> &#123;</span><br><span class="line">                <span class="type">Thread</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(r, <span class="string">&quot;VIPThreadPool-&quot;</span> + threadNumber.getAndIncrement());</span><br><span class="line">                t.setDaemon(<span class="literal">false</span>); <span class="comment">// 设置为非守护线程</span></span><br><span class="line">                <span class="keyword">return</span> t;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">ExecutorService</span> <span class="variable">executorService</span> <span class="operator">=</span> Executors.newScheduledThreadPool(<span class="number">10</span>, threadFactory);</span><br><span class="line">        <span class="keyword">return</span> Schedulers.from(executorService);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改造通过SSE方式让AI生成题目的接口，补充根据用户身份使用不同的线程池的逻辑。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注入 VIP 线程池</span></span><br><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> Scheduler vipScheduler;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/ai_generate/sse&quot;)</span></span><br><span class="line"><span class="keyword">public</span> SseEmitter <span class="title function_">aiGenerateQuestionSSE</span><span class="params">(</span></span><br><span class="line"><span class="params">    AiGenerateQuestionRequest aiGenerateQuestionRequest,</span></span><br><span class="line"><span class="params">    HttpServletRequest request)</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">// 默认全局线程池</span></span><br><span class="line">    <span class="type">Scheduler</span> <span class="variable">scheduler</span> <span class="operator">=</span> Schedulers.single();</span><br><span class="line">    <span class="type">User</span> <span class="variable">loginUser</span> <span class="operator">=</span> userService.getLoginUser(request);</span><br><span class="line">    <span class="comment">// 如果用户是 VIP，则使用定制线程池</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&quot;vip&quot;</span>.equals(loginUser.getUserRole())) &#123;</span><br><span class="line">        scheduler = vipScheduler;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 订阅流</span></span><br><span class="line">    modelDataFlowable</span><br><span class="line">        .observeOn(scheduler)</span><br><span class="line">        .subscribe();</span><br><span class="line">    <span class="keyword">return</span> sseEmitter;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="统计分析功能"><a href="#统计分析功能" class="headerlink" title="统计分析功能"></a>统计分析功能</h1><h2 id="需求分析-2"><a href="#需求分析-2" class="headerlink" title="需求分析"></a>需求分析</h2><p>在AI答题应用平台中，我们可以分析哪些应用使用的用户较多，可以根据统计结果，将热门应用放到主页靠前的位置，并为他们设置缓存来提高访问速度。<br>还可以分析同一应用下不同用户的结果分布情况，对于不同类型的用户，可以做一些特殊的处理，比如投送不同类型的广告推送等等。</p><h2 id="方案选型-1"><a href="#方案选型-1" class="headerlink" title="方案选型"></a>方案选型</h2><ol><li>Excel表格：在一些小规模数据分析统计中，可以使用Excel自带的统计函数做一些处理和统计分析。</li><li>关系型数据库：比如mysql,可以利用SQL提供的聚合函数：如SUM()、MAX()、MIN()、AVG()、COUNT()来计算总数、最大值、最小值等，也可以使用GROUP BY进行分组</li><li>第三方数据分析平台：使用别人搭建好的数据分析平台，只需要导入数据，比如帆软BI、微软PowerBI</li><li>大数据分析</li></ol><h2 id="MyBatis自定义SQL"><a href="#MyBatis自定义SQL" class="headerlink" title="MyBatis自定义SQL"></a>MyBatis自定义SQL</h2><p>MyBatis自定义SQL主要有两种方式：<strong>Java注解方式</strong>和<strong>XML配置方式</strong></p><ol><li>Java注解方式</li></ol><p>基于Java注解的SQL语句写在xxxMapper.java中<br>只需要自定义方法，包括方法参数和返回值等，然后在方法上添加<code>@Insert@Delete@Update@Select</code>等注解，然后在里面编写自定义SQL即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserAnswerMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;UserAnswer&gt; &#123;</span><br><span class="line">    <span class="comment">// 获取某应用答题的所有用户 id</span></span><br><span class="line">    <span class="meta">@Select(&quot;select distinct(userId) from user_answer where appId = #&#123;appId&#125;&quot;)</span></span><br><span class="line">    List&lt;Long&gt; <span class="title function_">getUserIdListByAppId</span><span class="params">(Long appId)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除某应用所有的回答</span></span><br><span class="line">    <span class="meta">@Delete(&quot;delete from user_answer where appId = #&#123;appId&#125;&quot;)</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteByAppId</span><span class="params">(Long appId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完整的语句就是普通的SQL+设置动态参数，方法的参数可以作为动态参数，通过拼接得到最终的SQL语句，结果也会自动转为方法返回值所对应的类型。</p><blockquote><p><strong>注意：</strong>#和$都可以实现SQL参数绑定，但是#是占位符，可以防止SQL注入，$是字符串拼接，会导致SQL注入</p></blockquote><ol start="2"><li>XML配置方式</li></ol><p>基于XML配置的SQL语句写在xxxMapper.xml中<br>MyBatis配置文件中提供了很多SQL操作的标签，可以直接在配置文件中添加增删改查等配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserIdListByAppId&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;java.lang.Long&quot;</span>&gt;</span></span><br><span class="line">    select distinct(userId) from user_answer where appId = #&#123;appId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteByAppId&quot;</span>&gt;</span></span><br><span class="line">    delete from user_answer where appId = #&#123;appId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>id：用来标识一个SQL语句，它是唯一的，并且在对应的xxxMapper.java中，需要有同名的方法和它对应。<br>resultType：用来标识SQL语句的返回值类型，同样它和xxxMapper.java中对应方法的返回值类型要一致。</p></blockquote><h2 id="后端开发-1"><a href="#后端开发-1" class="headerlink" title="后端开发"></a>后端开发</h2><p>基于需求，只需要分析user_answer中的数据来得到<strong>热门应用排行</strong>和<strong>应用回答分布</strong>两个内容的统计。</p><h3 id="热门应用排行"><a href="#热门应用排行" class="headerlink" title="热门应用排行"></a>热门应用排行</h3><p>如果热门应用的答题记录比较多，侧面说明了它是一个热门的应用，那么只要统计每个应用的用户的答题记录数就可以知道热门应用。</p><ol><li><p>根据需要返回的结果，定义统计结果类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AppAnswerCountDTO</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long appId;</span><br><span class="line">    <span class="keyword">private</span> Long answerCount;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写统计SQL</p></li></ol><p>非去重统计，也就是一个用户的多次答题算作多次</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> appId, <span class="built_in">count</span>(userId) <span class="keyword">as</span> answerCount <span class="keyword">from</span> user_answer</span><br><span class="line">            <span class="keyword">group</span> <span class="keyword">by</span> appId <span class="keyword">order</span> <span class="keyword">by</span> answerCount <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><p>去重统计，也就是一个用户的多次答题算作一次</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> appId, <span class="built_in">count</span>(<span class="keyword">distinct</span> userId) <span class="keyword">as</span> answerCount <span class="keyword">from</span> user_answer</span><br><span class="line">            <span class="keyword">group</span> <span class="keyword">by</span> appId <span class="keyword">order</span> <span class="keyword">by</span> answerCount <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><ol start="3"><li>java程序执行SQL</li></ol><p>修改UserAnswerMapper.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserAnswerMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;UserAnswer&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;select appId, count(userId) as answerCount from user_answer &quot; +</span></span><br><span class="line"><span class="meta">            &quot;group by appId order by answerCount desc&quot;)</span></span><br><span class="line">    List&lt;AppAnswerCountDTO&gt; <span class="title function_">doAppAnswerCount</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>编写接口<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/app/statistic&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AppStatisticController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserAnswerMapper userAnswerMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/answer_count&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> BaseResponse&lt;List&lt;AppAnswerCountDTO&gt;&gt; <span class="title function_">getAppAnswerCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ResultUtils.success(userAnswerMapper.doAppAnswerCount());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="应用回答分布统计"><a href="#应用回答分布统计" class="headerlink" title="应用回答分布统计"></a>应用回答分布统计</h3><p>根据应用id，统计同一应用中用户答题结果分布情况</p><ol><li><p>新增统计结果类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AppAnswerResultCountDTO</span> &#123;</span><br><span class="line">    <span class="comment">// 结果名称</span></span><br><span class="line">    <span class="keyword">private</span> String resultName;</span><br><span class="line">    <span class="comment">// 对应个数</span></span><br><span class="line">    <span class="keyword">private</span> String resultCount;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写SQL语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> resultName, <span class="built_in">count</span>(resultName) <span class="keyword">as</span> resultCount <span class="keyword">from</span> user_answer</span><br><span class="line">        <span class="keyword">where</span> appId <span class="operator">=</span> <span class="number">1</span> <span class="keyword">group</span> <span class="keyword">by</span> resultName <span class="keyword">order</span> <span class="keyword">by</span> resultCount <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure></li><li><p>使用注解自定义SQL</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserAnswerMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;UserAnswer&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;select resultName, count(resultName) as resultCount from user_answer &quot; +</span></span><br><span class="line"><span class="meta">            &quot;where appId = #&#123;appId&#125; group by resultName order by resultCount desc&quot;)</span></span><br><span class="line">    List&lt;AppAnswerResultCountDTO&gt; <span class="title function_">doAppAnswerResultCount</span><span class="params">(Long appId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/app/statistic&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AppStatisticController</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserAnswerMapper userAnswerMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/answer_result_count&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> BaseResponse&lt;List&lt;AppAnswerResultCountDTO&gt;&gt; <span class="title function_">getAppAnswerResultCount</span><span class="params">(Long appId)</span> &#123;</span><br><span class="line">        ThrowUtils.throwIf(appId == <span class="literal">null</span> || appId &lt;= <span class="number">0</span>, ErrorCode.PARAMS_ERROR);</span><br><span class="line">        <span class="keyword">return</span> ResultUtils.success(userAnswerMapper.doAppAnswerResultCount(appId));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：如果开启了分库分表，那么Shardingsphere会自动帮我们查询所有的分表，对应的SQL类似select  table_0 union all table_1</strong></p></blockquote></li></ol><h2 id="前端开发-1"><a href="#前端开发-1" class="headerlink" title="前端开发"></a><strong>前端开发</strong></h2><h3 id="明确页面结构"><a href="#明确页面结构" class="headerlink" title="明确页面结构"></a>明确页面结构</h3><p>新建统计分析页面，目标是建立两个图表<br>需要先确定图表的类型<br>热门应用：使用柱状图，展示应用id和用户数量<br>应用结果统计：使用饼状图，展示结果占比，可以使用id来搜索<br><strong>页面效果图</strong><br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722844336211-91a5e8cb-fdf8-4e22-9e90-16792c5ad47c.png" alt="image.png"></p><h3 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h3><p>推荐使用vue-echarts来实现可视化：<a href="https://github.com/ecomfe/vue-echarts">ecomfe&#x2F;vue-echarts: Vue.js component for Apache ECharts™. (github.com)</a><br>echarts是主流的图表库，vue-echarts是基于echarts的封装。<br>引入类库，注意需要同时引入echarts</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i echarts vue-echarts</span><br></pre></td></tr></table></figure><p>在需要使用图表的页面引入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import VChart from &quot;vue-echarts&quot;;</span><br><span class="line">import &quot;echarts&quot;;</span><br></pre></td></tr></table></figure><p>然后就可以使用组件了</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;v-chart :option=<span class="string">&quot;options&quot;</span> style=<span class="string">&quot;height: 300px&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><p>options的值可以在echarts官网的示例中学习  <a href="https://echarts.apache.org/examples/zh/index.html">Examples - Apache ECharts</a></p><h3 id="页面开发"><a href="#页面开发" class="headerlink" title="页面开发"></a>页面开发</h3><ol><li><p>新建路由和页面文件</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&quot;/app_statistic&quot;</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;应用统计&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">AppStatisticPage</span>,</span><br><span class="line">  <span class="attr">meta</span>: &#123;</span><br><span class="line">    <span class="attr">access</span>: <span class="variable constant_">ACCESS_ENUM</span>.<span class="property">ADMIN</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>加载数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">import &#123; computed, ref, watchEffect &#125; from &quot;vue&quot;;</span><br><span class="line">import API from &quot;@/api&quot;;</span><br><span class="line">import message from &quot;@arco-design/web-vue/es/message&quot;;</span><br><span class="line">import &#123;</span><br><span class="line">  getAppAnswerCountUsingGet,</span><br><span class="line">  getAppAnswerResultCountUsingGet,</span><br><span class="line">&#125; from &quot;@/api/appStatisticController&quot;;</span><br><span class="line"></span><br><span class="line">const appAnswerCountList = ref&lt;API.AppAnswerCountDTO[]&gt;([]);</span><br><span class="line">const appAnswerResultCountList = ref&lt;API.AppAnswerResultCountDTO[]&gt;([]);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 加载数据</span><br><span class="line"> */</span><br><span class="line">const loadAppAnswerCountData = async () =&gt; &#123;</span><br><span class="line">  const res = await getAppAnswerCountUsingGet();</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    appAnswerCountList.value = res.data.data || [];</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取数据失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 加载数据</span><br><span class="line"> */</span><br><span class="line">const loadAppAnswerResultCountData = async (appId: string) =&gt; &#123;</span><br><span class="line">  if (!appId) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">  const res = await getAppAnswerResultCountUsingGet(&#123;</span><br><span class="line">    appId: appId as any,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    appAnswerResultCountList.value = res.data.data || [];</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取数据失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 监听变量，改变时触发数据的重新加载</span><br><span class="line"> */</span><br><span class="line">watchEffect(() =&gt; &#123;</span><br><span class="line">  loadAppAnswerCountData();</span><br><span class="line">  loadAppAnswerResultCountData(&quot;&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>定义图标所需的options数据，需要注意使用计算属性，即时渲染</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> appAnswerCountOptions = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">xAxis</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;category&quot;</span>,</span><br><span class="line">      <span class="attr">data</span>: appAnswerCountList.<span class="property">value</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> item.<span class="property">appId</span>),</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;应用 id&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">yAxis</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;value&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;做题用户数&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">series</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">data</span>: appAnswerCountList.<span class="property">value</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> item.<span class="property">answerCount</span>),</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;bar&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> appAnswerResultCountOptions = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">tooltip</span>: &#123;</span><br><span class="line">      <span class="attr">trigger</span>: <span class="string">&quot;item&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">legend</span>: &#123;</span><br><span class="line">      <span class="attr">orient</span>: <span class="string">&quot;vertical&quot;</span>,</span><br><span class="line">      <span class="attr">left</span>: <span class="string">&quot;left&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">series</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;pie&quot;</span>,</span><br><span class="line">        <span class="attr">radius</span>: <span class="string">&quot;50%&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: appAnswerResultCountList.<span class="property">value</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">value</span>: item.<span class="property">resultCount</span>,</span><br><span class="line">            <span class="attr">name</span>: item.<span class="property">resultName</span>,</span><br><span class="line">          &#125;;</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="attr">emphasis</span>: &#123;</span><br><span class="line">          <span class="attr">itemStyle</span>: &#123;</span><br><span class="line">            <span class="attr">shadowBlur</span>: <span class="number">10</span>,</span><br><span class="line">            <span class="attr">shadowOffsetX</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">shadowColor</span>: <span class="string">&quot;rgba(0, 0, 0, 0.5)&quot;</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>编写页面，展示图表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;appStatisticPage&quot;&gt;</span><br><span class="line">  &lt;h2&gt;热门应用统计&lt;/h2&gt;</span><br><span class="line">  &lt;v-chart :option=&quot;appAnswerCountOptions&quot; style=&quot;height: 300px&quot; /&gt;</span><br><span class="line">  &lt;h2&gt;应用结果统计&lt;/h2&gt;</span><br><span class="line">  &lt;v-chart :option=&quot;appAnswerResultCountOptions&quot; style=&quot;height: 300px&quot; /&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>在第二个图表上方添加搜索按钮</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;searchBar&quot;&gt;</span><br><span class="line">  &lt;a-input-search</span><br><span class="line">    :style=&quot;&#123; width: &#x27;320px&#x27; &#125;&quot;</span><br><span class="line">    placeholder=&quot;输入 appId&quot;</span><br><span class="line">    button-text=&quot;搜索&quot;</span><br><span class="line">    search-button</span><br><span class="line">    @search=&quot;(value) =&gt; loadAppAnswerResultCountData(value)&quot;</span><br><span class="line">  /&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot;margin-bottom: 16px&quot; /&gt;</span><br></pre></td></tr></table></figure></li></ol><h1 id="应用分享功能"><a href="#应用分享功能" class="headerlink" title="应用分享功能"></a>应用分享功能</h1><h2 id="需求分析-3"><a href="#需求分析-3" class="headerlink" title="需求分析"></a>需求分析</h2><p>为了提高网站的关注度，可以增加分享按钮，支持移动端扫码分享和复制链接两种方式，同时兼顾移动端和PC端。</p><h2 id="方案设计-2"><a href="#方案设计-2" class="headerlink" title="方案设计"></a>方案设计</h2><h3 id="通用分享组件"><a href="#通用分享组件" class="headerlink" title="通用分享组件"></a>通用分享组件</h3><p>编写一个通用的分享组件，在各个页面引入，当用户点击分享的时候，弹出弹窗，引导用户完成分享。</p><h3 id="分享入口"><a href="#分享入口" class="headerlink" title="分享入口"></a>分享入口</h3><p><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722846645649-b5857c23-09d2-4064-9303-8eafa027e262.png" alt="image.png"><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722846671083-c44fdfc5-a6a1-4366-9d8f-a0b63ee50015.png" alt="image.png"></p><h3 id="复制链接分享"><a href="#复制链接分享" class="headerlink" title="复制链接分享"></a>复制链接分享</h3><p>直接用AcroDesign提供的可复制文本组件</p><h3 id="移动端扫码分享"><a href="#移动端扫码分享" class="headerlink" title="移动端扫码分享"></a>移动端扫码分享</h3><p>可以使用qrcode组件，<a href="https://www.npmjs.com/package/qrcode">qrcode - npm (npmjs.com)</a><br>它的原理是将链接作为文本，转化为二维码图片。</p><h2 id="开发实现-1"><a href="#开发实现-1" class="headerlink" title="开发实现"></a>开发实现</h2><h3 id="通用分享组件-1"><a href="#通用分享组件-1" class="headerlink" title="通用分享组件"></a>通用分享组件</h3><ol><li><p>项目中引入qrcode</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save qrcode</span><br></pre></td></tr></table></figure></li><li><p>新增ShareModal组件,编写demo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;&#123;&#123; link &#125;&#125;&lt;/div&gt;</span><br><span class="line">  &lt;img :src=&quot;codeImg&quot; /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import QRCode from &quot;qrcode&quot;;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line"></span><br><span class="line">const link = &quot;https://blog.fanzher.site&quot;;</span><br><span class="line">const codeImg = ref();</span><br><span class="line"></span><br><span class="line">// With promises</span><br><span class="line">QRCode.toDataURL(link)</span><br><span class="line">  .then((url) =&gt; &#123;</span><br><span class="line">    console.log(url);</span><br><span class="line">    codeImg.value = url;</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch((err) =&gt; &#123;</span><br><span class="line">    console.error(err);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>编写弹窗界面代码</p></li></ol><p>使用AcroDesign的Modal组件，支持传入title和分享链接属性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;a-modal v-model:visible=&quot;visible&quot; @cancel=&quot;closeModal&quot; :footer=&quot;false&quot;&gt;</span><br><span class="line">    &lt;template #title&gt; 分享&lt;/template&gt;</span><br><span class="line">    &lt;h4 style=&quot;margin-top: 0&quot;&gt;复制分享链接&lt;/h4&gt;</span><br><span class="line">    &lt;a-typography-paragraph copyable&gt;</span><br><span class="line">      &#123;&#123; link &#125;&#125;</span><br><span class="line">    &lt;/a-typography-paragraph&gt;</span><br><span class="line">    &lt;h4&gt;手机扫码查看&lt;/h4&gt;</span><br><span class="line">    &lt; :src=&quot;code&quot; /&gt;</span><br><span class="line">  &lt;/a-modal&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">// @ts-ignore</span><br><span class="line">import QRCode from &quot;qrcode&quot;;</span><br><span class="line">import &#123; defineProps, ref, withDefaults &#125; from &quot;vue&quot;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 定义组件属性类型</span><br><span class="line"> */</span><br><span class="line">interface Props &#123;</span><br><span class="line">  title: string;</span><br><span class="line">  link: string;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 给组件指定初始值</span><br><span class="line"> */</span><br><span class="line">const props = withDefaults(defineProps&lt;Props&gt;(), &#123;</span><br><span class="line">  title: () =&gt; &quot;分享&quot;,</span><br><span class="line">  link: () =&gt; &quot;https://laoyujianli.com/share/yupi&quot;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 是否可见</span><br><span class="line">const visible = ref(false);</span><br><span class="line">// 要展示的图片</span><br><span class="line">const code = ref();</span><br><span class="line"></span><br><span class="line">// 打开弹窗</span><br><span class="line">const openModal = () =&gt; &#123;</span><br><span class="line">  visible.value = true;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 关闭弹窗</span><br><span class="line">const closeModal = () =&gt; &#123;</span><br><span class="line">  visible.value = false;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 二维码生成</span><br><span class="line">QRCode.toDataURL(props.link)</span><br><span class="line">  .then((url: string) =&gt; &#123;</span><br><span class="line">    code.value = url;</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch((err: any) =&gt; &#123;</span><br><span class="line">    console.error(err);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>为了方便页面使用组件，需要暴露出openModal函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import &#123; defineExpose &#125; from &quot;vue&quot;;</span><br><span class="line"></span><br><span class="line">// 暴露函数给父组件</span><br><span class="line">defineExpose(&#123;</span><br><span class="line">  openModal,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>完整代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;a-modal v-model:visible=&quot;visible&quot; @cancel=&quot;closeModal&quot; :footer=&quot;false&quot;&gt;</span><br><span class="line">    &lt;template #title&gt; 分享&lt;/template&gt;</span><br><span class="line">    &lt;h4 style=&quot;margin-top: 0&quot;&gt;复制分享链接&lt;/h4&gt;</span><br><span class="line">    &lt;a-typography-paragraph copyable&gt;</span><br><span class="line">      &#123;&#123; link &#125;&#125;</span><br><span class="line">    &lt;/a-typography-paragraph&gt;</span><br><span class="line">    &lt;h4&gt;手机扫码查看&lt;/h4&gt;</span><br><span class="line">    &lt;img :src=&quot;codeImg&quot; /&gt;</span><br><span class="line">  &lt;/a-modal&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">// @ts-ignore</span><br><span class="line">import QRCode from &quot;qrcode&quot;;</span><br><span class="line">import &#123; defineExpose, defineProps, ref, withDefaults &#125; from &quot;vue&quot;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 定义组件属性类型</span><br><span class="line"> */</span><br><span class="line">interface Props &#123;</span><br><span class="line">  title: string;</span><br><span class="line">  link: string;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 给组件指定初始值</span><br><span class="line"> */</span><br><span class="line">const props = withDefaults(defineProps&lt;Props&gt;(), &#123;</span><br><span class="line">  title: () =&gt; &quot;分享&quot;,</span><br><span class="line">  link: () =&gt; &quot;https://fanzher.site&quot;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 是否可见</span><br><span class="line">const visible = ref(false);</span><br><span class="line">// 要展示的图片</span><br><span class="line">const codeImg = ref();</span><br><span class="line"></span><br><span class="line">// 打开弹窗</span><br><span class="line">const openModal = () =&gt; &#123;</span><br><span class="line">  visible.value = true;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//将子组件暴露出去，方便父组件调用</span><br><span class="line">defineExpose(&#123;</span><br><span class="line">  openModal,</span><br><span class="line">&#125;);</span><br><span class="line">// 关闭弹窗</span><br><span class="line">const closeModal = () =&gt; &#123;</span><br><span class="line">  visible.value = false;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 二维码生成</span><br><span class="line">QRCode.toDataURL(props.link)</span><br><span class="line">  .then((url: string) =&gt; &#123;</span><br><span class="line">    codeImg.value = url;</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch((err: any) =&gt; &#123;</span><br><span class="line">    console.error(err);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="页面使用组件"><a href="#页面使用组件" class="headerlink" title="页面使用组件"></a>页面使用组件</h3><p>在AppCard和应用详情页中使用分享弹窗组件</p><ol><li><p>页面代码引入</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">ShareModal</span> ref=<span class="string">&quot;shareModalRef&quot;</span> :link=<span class="string">&quot;shareLink&quot;</span> /&gt;</span><br></pre></td></tr></table></figure></li><li><p>定义分享函数，打开分享弹窗</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 分享弹窗引用</span><br><span class="line">const shareModalRef = ref();</span><br><span class="line">// 分享链接</span><br><span class="line">const shareLink = `$&#123;window.location.protocol&#125;//$&#123;window.location.host&#125;/app/detail/$&#123;props.app.id&#125;`;</span><br><span class="line">// 分享</span><br><span class="line">const doShare = (e: Event) =&gt; &#123;</span><br><span class="line">  if (shareModalRef.value) &#123;</span><br><span class="line">    shareModalRef.value.openModal();</span><br><span class="line">  &#125;</span><br><span class="line">  e.stopPropagation();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> AI答题应用平台 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java项目 </tag>
            
            <tag> AI答题应用平台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI答题应用平台_6性能优化</title>
      <link href="/2024/07/15/AI%E7%AD%94%E9%A2%98%E5%BA%94%E7%94%A8%E5%B9%B3%E5%8F%B0_6.%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
      <url>/2024/07/15/AI%E7%AD%94%E9%A2%98%E5%BA%94%E7%94%A8%E5%B9%B3%E5%8F%B0_6.%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="RxJava响应式编程"><a href="#RxJava响应式编程" class="headerlink" title="RxJava响应式编程"></a>RxJava响应式编程</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>之前AI生成的题目都是等所有的内容都生成之后，才发送给前端，用户可能要等待很长的时间，有没有办法进行优化呢？<br>在质谱AI的官方文档中，提供了<strong>流式</strong>调用的方法。<br><a href="https://open.bigmodel.cn/dev/api#glm-4">智谱AI开放平台 (bigmodel.cn)</a><br>通过设置stream为true来开启流式<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722743422050-42f79b05-74f1-4479-939a-c00b92872d6d.png" alt="image.png"><br>在官方提供的示例代码中，对于stream类型的数据，需要从返回结果中取得<code>flowable</code>对象。<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722743705677-2a0fd767-3c2d-43d3-9580-576057311199.png" alt="image.png"><br>映射到代码中需要这样构造请求参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 流式请求</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> messages</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> stream</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> temperature</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> Flowable&lt;ModelData&gt; <span class="title function_">doRequestFlowable</span><span class="params">(List&lt;ChatMessage&gt; messages, Boolean stream, Float temperature)</span> &#123;</span><br><span class="line">    <span class="comment">// 构造请求</span></span><br><span class="line">    <span class="type">ChatCompletionRequest</span> <span class="variable">chatCompletionRequest</span> <span class="operator">=</span> ChatCompletionRequest.builder()</span><br><span class="line">            .model(Constants.ModelChatGLM4)</span><br><span class="line">            .stream(stream)</span><br><span class="line">            .invokeMethod(Constants.invokeMethod)</span><br><span class="line">            .temperature(temperature)</span><br><span class="line">            .messages(messages)</span><br><span class="line">            .build();</span><br><span class="line">    <span class="type">ModelApiResponse</span> <span class="variable">invokeModelApiResp</span> <span class="operator">=</span> clientV4.invokeModelApi(chatCompletionRequest);</span><br><span class="line">    <span class="keyword">return</span> invokeModelApiResp.getFlowable();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>那么什么是流式编程，这个flowable又是个什么东西呢？</p><h2 id="什么是响应式编程"><a href="#什么是响应式编程" class="headerlink" title="什么是响应式编程"></a>什么是响应式编程</h2><p>响应式编程是一种编程范式，专注于<strong>异步数据流</strong>和<strong>变化传播</strong>，举个例子，比如说在订餐的时候，点完餐之后，服务员会给一个手牌，我就没必要一直在那个窗口等着，而是可以去做其他的事情（这就是异步化），等我的餐做好之后，服务员通过手牌提示，我的手牌变亮（变化传播）就可以去取餐了。<br>响应式编程的核心是<strong>数据流，</strong>程序的逻辑是建立在数据流变化之上的。</p><p><strong>响应式编程的几个重要概念</strong></p><ol><li><p><strong>数据流：</strong>响应式编程中，数据是以流（stream）的方式存在的，像我们的水流、电流一样，数据流也是从一个方向流向另一个方向，它可以被观测、被过滤、或者合并到其他流中等等操作。比如在Java8中的streamAPI中，下列代码一次对一个数组进行过滤、转换、汇聚。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list.stream()</span><br><span class="line">    .filter()</span><br><span class="line">    .map()</span><br><span class="line">    .collect()</span><br></pre></td></tr></table></figure></li><li><p><strong>异步处理：</strong>响应式编程是异步的，也就是说操作不会阻塞线程，而是通过回调或者其他方式在某个时间点处理结果（就比如上面提到的点完餐可以去做别的事情，等手牌响之后再去取餐）。这提高了应用的响应性和性能。</p></li><li><p><strong>变化传播：</strong>当数据源发生变化时，响应式编程模型会自动把变化传播到依赖这些数据源的地方。这种传播是自动进行的，不需要显式的调用。</p></li></ol><h2 id="什么是RxJava？"><a href="#什么是RxJava？" class="headerlink" title="什么是RxJava？"></a>什么是RxJava？</h2><p>首先它是一个类库，它是响应式编程在Java语言上的实现，它是基于<strong>事件驱动</strong>的、利用<strong>可观测序列</strong>来实现异步编程的。</p><h3 id="什么是事件驱动？"><a href="#什么是事件驱动？" class="headerlink" title="什么是事件驱动？"></a>什么是事件驱动？</h3><p>事件是一个泛称，可以是鼠标一次单击的操作、可以是一次文件的读写、可以是网络请求。<strong>事件驱动也就是通过事件来触发行为</strong>，比如我单击一个按钮，然后弹出一个弹窗，那就是“点击按钮”事件就驱动了“弹出弹窗”的行为。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 前端按钮点击</span><br><span class="line">btn.onClick(()-&gt;&#123;</span><br><span class="line">  // 弹窗</span><br><span class="line">  showModal();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>在RxJava中，事件可以看作是数据流中的数据项，称为“事件流”或者“数据流”。每当一个事件发生，这个事件就会被推送到那些对它感兴趣的<strong>观察者或者说订阅者</strong>（Observers）。比如说我喜欢一个B站的UP主（被订阅者），那么我就可以关注他（订阅者），当他有视频更新（事件）时，B站就会提示我（行为）。</p><h3 id="可观测序列"><a href="#可观测序列" class="headerlink" title="可观测序列"></a>可观测序列</h3><p>可观测序列是指一系列按照事件顺序发出的数据项，可以被观测和处理。可观测序列提供了一种将数据流和异步事件建模为一系列可以订阅和操作的事件。通俗来说，我关注一个UP主之后，我就成为了他频道的订阅者，那么我就可以看到他按时间顺序发布的一系列视频，并进行点赞、投币等操作。</p><h2 id="RxJava应用场景"><a href="#RxJava应用场景" class="headerlink" title="RxJava应用场景"></a>RxJava应用场景</h2><p>它的一个核心应用场景就是UI场景，像Android开发就会用到RxJava。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//安卓异步后台执行任务，完成后更新UI</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">AsyncTask</span>&lt;Void, Void, ResultType&gt;() &#123;</span><br><span class="line">    <span class="keyword">protected</span> ResultType <span class="title function_">doInBackground</span><span class="params">(Void... params)</span> &#123;</span><br><span class="line">        <span class="comment">// 在后台线程中执行的任务</span></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onPostExecute</span><span class="params">(ResultType result)</span> &#123;</span><br><span class="line">        <span class="comment">// doInBackground完成后执行的回调，用于更新UI</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;.execute();</span><br></pre></td></tr></table></figure><p>RxJava提供了一个统一的异步接口形式，可以通过链式编程来实现业务。下面是一个RxJava的经典例子。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Observable.from(folders)</span><br><span class="line">    .flatMap((Func1) (folder) -&gt; &#123; Observable.from(file.listFiles()) &#125;)</span><br><span class="line">    .filter((Func1) (file) -&gt; &#123; file.getName().endsWith(<span class="string">&quot;.png&quot;</span>) &#125;)</span><br><span class="line">    .map((Func1) (file) -&gt; &#123; getBitmapFromFile(file) &#125;)</span><br><span class="line">    .subscribeOn(Schedulers.io())</span><br><span class="line">    .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">    .subscribe((Action1) (bitmap) -&gt; &#123; imageCollectorView.addImage(bitmap) &#125;);</span><br></pre></td></tr></table></figure><p><code>.subscribeOn(Schedulers.io())</code>这行代码设置执行上游Observable即Observable.from(folders)及其后续操作（合并文件夹，查找png图片，转成bitmap）到这一行之前的逻辑在一个适用于I&#x2F;O操作的线程池中执行，即子线程中。<br><code>.observeOn(AndroidSchedulers.mainThread())</code>这行代码指定了下游Observable（即subscribe方法及其之前的操作），在安卓的主线程执行更新UI操作。</p><blockquote><p>这是一个在安卓中实现的例子，它在子线程中实现了过滤查找所有文件夹中的png图片，转成bitmap，之后再利用主线程显示图片。<br>因为安卓的主线程是需要试试响应用户的请求，如果它被利用去执行查找图片和转化png的过程，就会让app卡顿，影响用户体验，严重可能导致无响应。</p></blockquote><p>因此耗时的操作需要在子线程中操作，然后最终结果才需要利用主线程。</p><h2 id="RxJava核心知识点"><a href="#RxJava核心知识点" class="headerlink" title="RxJava核心知识点"></a>RxJava核心知识点</h2><h3 id="观察者模式"><a href="#观察者模式" class="headerlink" title="观察者模式"></a><strong>观察者模式</strong></h3><p>RxJava是基于<strong>观察者模式</strong>实现的，分别有观察者和被观察者两个角色，被观察者会实时传输数据流，观察者可以观测到这些数据流。<br>基于传输和观察的过程，可以通过一些操作方法对数据进行转换或者其他处理。在RxJava中，观察者就是Observer，被观察者就是Observable和Flowable。<br>Observable适合处理相对较小、可控的、不会突然产生大量数据的场景，因为它不具备背压处理能力，也就是说当数据的生产速度大于数据的消费速度时，会导致内存溢出或者其他性能问题。<br>Flowable是针对背压（反向压力）而设计的可观测模型，<strong>背压问题</strong>出现在数据的生产大于数据的消费的场景，Flowable提供了多种背压策略来解决这种问题，保证在处理大量问题时仍能保持稳定。<br>观察者和被观察者建立关系的方式：<code>被观察者.subscribe(观察者)</code>，这样被观察者传输的数据或者发出的事件就会被观察者接收。</p><h3 id="常用操作符"><a href="#常用操作符" class="headerlink" title="常用操作符"></a>常用操作符</h3><p>前面也提到了，可以通过一些方法对数据流进行操作和处理，RxJava中提供了一些操作符。</p><ol><li><p>变化操作符：对数据流进行变换，比如map、flatmap等，比如用map将整型转化为String类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Flowable&lt;String&gt; flowable = Flowable.range(<span class="number">0</span>, Integer.MAX_VALUE)</span><br><span class="line">        .map(i -&gt; String.valueOf(i))</span><br></pre></td></tr></table></figure></li><li><p>聚合类操作符，对数据流进行聚合，比如toList、toMap等</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Flowable.range(<span class="number">0</span>, Integer.MAX_VALUE).toList()</span><br></pre></td></tr></table></figure></li><li><p>过滤操作符，比如跳过数组中某些元素，如skip、filter。将大于10的数据转化为一个list</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Flowable.range(<span class="number">0</span>, Integer.MAX_VALUE).toList()</span><br></pre></td></tr></table></figure></li><li><p>连接操作符，将多个数据流连接到一起，比如zip、concat。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建两个 Flowable 对象</span></span><br><span class="line">Flowable&lt;String&gt; flowable1 = Flowable.just(<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;C&quot;</span>);</span><br><span class="line">Flowable&lt;String&gt; flowable2 = Flowable.just(<span class="string">&quot;D&quot;</span>, <span class="string">&quot;E&quot;</span>, <span class="string">&quot;F&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 concat 操作符将两个 Flowable 合并</span></span><br><span class="line">Flowable&lt;String&gt; flowable = Flowable.concat(flowable1, flowable2);</span><br></pre></td></tr></table></figure></li><li><p>排序操作符，对数据流中的数据进行排序，比如sorted</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Flowable&lt;String&gt; flowable = Flowable.concat(flowable1, flowable2).sorted();</span><br></pre></td></tr></table></figure></li></ol><h3 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h3><p>前面也提到了RxJava是一个基于事件驱动的框架，那么它有哪些事件，分别又在哪些时候触发呢？</p><ol><li>onNext：被观察者每发送一条数据，就会触发此事件。</li><li>onError：如果发送数据过程中出现意料之外的错误，那么被观察者可以发送此事件。</li><li>onComplete：如果没有发生错误，那么在被观察者最后一次调用onNext方法后，发送此事件，表示完成数据传输。</li></ol><p>对应的观察者得到这些事件后，也可以进行相应的处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">flowable.observeOn(Schedulers.io())</span><br><span class="line">    .doOnNext(item -&gt; &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;来数据啦&quot;</span> + item.toString());</span><br><span class="line">    &#125;)</span><br><span class="line">    .doOnError(e -&gt; &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;出错啦&quot;</span> + e.getMessage());</span><br><span class="line">    &#125;)</span><br><span class="line">    .doOnComplete(() -&gt; &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;数据处理完啦&quot;</span>);</span><br><span class="line">    &#125;).subscribe();</span><br></pre></td></tr></table></figure><h2 id="DEMO演示"><a href="#DEMO演示" class="headerlink" title="DEMO演示"></a>DEMO演示</h2><h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><p>质谱的AI默认引入了RxJava2.x版本，如果要在新项目中使用RxJava，单独引入Java需要的、对应版本的依赖即可。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.reactivestreams<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>reactive-streams<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="编写单元测试"><a href="#编写单元测试" class="headerlink" title="编写单元测试"></a>编写单元测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">rxJavaDemo</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">    <span class="comment">// 创建一个流，每秒发射一个递增的整数（数据流变化）</span></span><br><span class="line">    Flowable&lt;Long&gt; flowable = Flowable.interval(<span class="number">1</span>, TimeUnit.SECONDS)</span><br><span class="line">            .map(i -&gt; i + <span class="number">1</span>)</span><br><span class="line">            .subscribeOn(Schedulers.io()); <span class="comment">// 指定创建流的线程池</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 订阅 Flowable 流，并打印每个接受到的数字</span></span><br><span class="line">    flowable.observeOn(Schedulers.io())</span><br><span class="line">            .doOnNext(item -&gt; System.out.println(item.toString()))</span><br><span class="line">            .subscribe();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 让主线程睡眠，以便观察输出</span></span><br><span class="line">    Thread.sleep(<span class="number">10000L</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="AI生成题目优化"><a href="#AI生成题目优化" class="headerlink" title="AI生成题目优化"></a>AI生成题目优化</h1><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><p>原先AI生成题目的场景响应较慢，如果题目较多，容易产生请求超时，并且界面上没有响应，用户体验不佳。<br>需要<strong>流式化改造</strong>AI生成题目接口，一道一道实时地返回已生成题目给前端，而不是让前端请求一直阻塞，直到题目生成完才返回，提升用户体验同时避免请求超时。<br>首先质谱AI提供了流式响应地支持，数据已经可以一点点地返回给后端了，现在的问题是如何让后端一点一点的接收数据并实时地返回给前端。</p><h2 id="前后端实时通讯方案"><a href="#前后端实时通讯方案" class="headerlink" title="前后端实时通讯方案"></a>前后端实时通讯方案</h2><ol><li>轮询（前端主动去要）</li></ol><p>前端间隔一定时间就调用后端提供的结果接口，比如200ms一次，后端处理一些结果就累加放置在缓存中。</p><ol start="2"><li>SSE（后端推送给前端）</li></ol><p>前端发送请求并和后端建立连接后，后端可以实时推送数据给前端，无需前端自主轮询。</p><ol start="3"><li>WebSocker</li></ol><p>全双工协议，前端能实时推送数据给后端（或者从后端缓存拿数据），后端也可以实时推送数据给前端。</p><h2 id="SSE技术"><a href="#SSE技术" class="headerlink" title="SSE技术"></a>SSE技术</h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p>服务器发送事件（Server-Sent Events）是一种用于从服务器到客户端的单向、实习数据传输技术，基于HTTP协议实现。<br><strong>特点</strong></p><ol><li><strong>单向通信：</strong>SSE只支持服务器向客户端的单向通信，客户端不能向服务器发送数据。</li><li><strong>文本格式：</strong>SSE使用<strong>纯文本格式</strong>传输数据，使用HTTP响应的<code>text/event-stream</code>MIME类型。</li><li><strong>保持连接：</strong>SSE通过保持一个持久的HTTP连接，实现服务器向客户端推送更新，而不需要客户端频繁轮询。</li><li><strong>自动重连：</strong>如果连接中断，浏览器会自动尝试重新连接，确保数据流的连续性。</li></ol><h3 id="SSE数据格式"><a href="#SSE数据格式" class="headerlink" title="SSE数据格式"></a>SSE数据格式</h3><p>SSE数据流的格式非常简单，每个事件使用data字段，事件以两个换行符结束。还可以使用id字段来标识事件，并且retry字段可以设置重新连接的时间间隔。<br>示例格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">data: First message\n</span><br><span class="line">\n</span><br><span class="line">data: Second message\n</span><br><span class="line">\n</span><br><span class="line">data: Third message\n</span><br><span class="line">id: <span class="number">3</span>\n</span><br><span class="line">\n</span><br><span class="line">retry: <span class="number">10000</span>\n</span><br><span class="line">data: Fourth message\n</span><br><span class="line">\n</span><br></pre></td></tr></table></figure><h3 id="自主实现SSE"><a href="#自主实现SSE" class="headerlink" title="自主实现SSE"></a>自主实现SSE</h3><ol><li>服务器端</li></ol><p>需要生成符合SSE格式的响应，并设置合适的HTTP头。使用Servlet来实现SSE示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/sse&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SseServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line">            <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        response.setContentType(<span class="string">&quot;text/event-stream&quot;</span>);</span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">writer</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            writer.write(<span class="string">&quot;data: Message &quot;</span> + i + <span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line">            writer.flush();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        writer.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果是Spring项目，直接给请求返回SseEmitter对象。<strong>（一定要使用Get请求）</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/sse&quot;)</span></span><br><span class="line"><span class="keyword">public</span> SseEmitter <span class="title function_">testSSE</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 建立 SSE 连接对象，0 表示不超时</span></span><br><span class="line">    <span class="type">SseEmitter</span> <span class="variable">emitter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SseEmitter</span>(<span class="number">0L</span>);   </span><br><span class="line">    ... 业务逻辑处理</span><br><span class="line">    <span class="keyword">return</span> emitter;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>Web前端</li></ol><p>可以使用JavaScript的<code>EventSource</code>对象来连接和处理服务器发送的事件。示例代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建 SSE 请求</span></span><br><span class="line"><span class="keyword">const</span> eventSource = <span class="keyword">new</span> <span class="title class_">EventSource</span>(</span><br><span class="line">  <span class="string">&quot;http://localhost:8080/sse&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">// 接收消息</span></span><br><span class="line">eventSource.<span class="property">onmessage</span> = <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(event.<span class="property">data</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 生成结束，关闭连接</span></span><br><span class="line">eventSource.<span class="property">onerror</span> = <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (event.<span class="property">eventPhase</span> === <span class="title class_">EventSource</span>.<span class="property">CLOSED</span>) &#123;</span><br><span class="line">    eventSource.<span class="title function_">close</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="方案设计"><a href="#方案设计" class="headerlink" title="方案设计"></a>方案设计</h3><p><strong>方案对比</strong></p><ol><li>主动轮询其实是一种伪实时，比如每3秒轮询请求一次，结果后端在0.1秒就返回了数据，还要再等2.9秒，存在延迟。</li><li>WebSocket和SSE虽然都能实现服务端推送，但WebSocket会更复杂些，而且是二进制协议，调试不方便。AI对话只需要服务器单向推送即可，不需要使用双向通信，所以选择文本格式的SSE。</li></ol><p><strong>最终方案</strong></p><ol><li>前端向后端发送普通HTTP请求</li><li>后端创建SSE连接对象，为后续的推送做准备</li><li>后端流式调用质谱AI，获取到数据流，使用RxJava订阅数据流</li><li>以SSE的方式响应前端，至此接口主流程已执行完成</li><li>异步：基于RxJava实时获取到质谱AI的数据，并持续将数据拼接为字符串，当拼接为一道完整题目时，通过SSE推送给前端。</li><li>前端每获取一道题目，立即插入到表单项中。</li></ol><h2 id="后端开发"><a href="#后端开发" class="headerlink" title="后端开发"></a>后端开发</h2><h3 id="封装通用的流式调用AI接口"><a href="#封装通用的流式调用AI接口" class="headerlink" title="封装通用的流式调用AI接口"></a>封装通用的流式调用AI接口</h3><p>跟之前的请求方法不同的是：</p><ul><li>将请求的stream参数为true，表示开始流式调用。</li><li>返回结果为Flowable类型，为流式结果。</li></ul><p>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通用流式请求（简化消息传递）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> systemMessage</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> userMessage</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> temperature</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> Flowable&lt;ModelData&gt; <span class="title function_">doStreamRequest</span><span class="params">(String systemMessage, String userMessage, Float temperature)</span> &#123;</span><br><span class="line">    <span class="comment">// 构造请求</span></span><br><span class="line">    List&lt;ChatMessage&gt; messages = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="type">ChatMessage</span> <span class="variable">systemChatMessage</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChatMessage</span>(ChatMessageRole.SYSTEM.value(), systemMessage);</span><br><span class="line">    <span class="type">ChatMessage</span> <span class="variable">userChatMessage</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChatMessage</span>(ChatMessageRole.USER.value(), userMessage);</span><br><span class="line">    messages.add(systemChatMessage);</span><br><span class="line">    messages.add(userChatMessage);</span><br><span class="line">    <span class="keyword">return</span> doStreamRequest(messages, temperature);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通用流式请求</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> messages</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> temperature</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> Flowable&lt;ModelData&gt; <span class="title function_">doStreamRequest</span><span class="params">(List&lt;ChatMessage&gt; messages, Float temperature)</span> &#123;</span><br><span class="line">    <span class="comment">// 构造请求</span></span><br><span class="line">    <span class="type">ChatCompletionRequest</span> <span class="variable">chatCompletionRequest</span> <span class="operator">=</span> ChatCompletionRequest.builder()</span><br><span class="line">            .model(Constants.ModelChatGLM4)</span><br><span class="line">            .stream(Boolean.TRUE)</span><br><span class="line">            .invokeMethod(Constants.invokeMethod)</span><br><span class="line">            .temperature(temperature)</span><br><span class="line">            .messages(messages)</span><br><span class="line">            .build();</span><br><span class="line">    <span class="type">ModelApiResponse</span> <span class="variable">invokeModelApiResp</span> <span class="operator">=</span> clientV4.invokeModelApi(chatCompletionRequest);</span><br><span class="line">    <span class="keyword">return</span> invokeModelApiResp.getFlowable();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="新建AI生成题目的SSE接口"><a href="#新建AI生成题目的SSE接口" class="headerlink" title="新建AI生成题目的SSE接口"></a>新建AI生成题目的SSE接口</h3><ol><li><p>首先定义接口，注意SSE必须是get请求：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/ai_generate/sse&quot;)</span></span><br><span class="line"><span class="keyword">public</span> SseEmitter <span class="title function_">aiGenerateQuestionSSE</span><span class="params">(</span></span><br><span class="line"><span class="params">    AiGenerateQuestionRequest aiGenerateQuestionRequest)</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>建立SSE连接对象，并返回：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 建立 SSE 连接对象，0 表示不超时</span></span><br><span class="line"><span class="type">SseEmitter</span> <span class="variable">emitter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SseEmitter</span>(<span class="number">0L</span>);</span><br><span class="line"><span class="keyword">return</span> emitter;</span><br></pre></td></tr></table></figure></li><li><p>调用AI获取数据流：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// AI 生成，sse 流式返回</span></span><br><span class="line">Flowable&lt;ModelData&gt; modelDataFlowable = aiManager.doStreamRequest(GENERATE_QUESTION_SYSTEM_MESSAGE, userMessage, <span class="literal">null</span>);</span><br></pre></td></tr></table></figure></li><li><p>使用RxJava异步对流进行解析和转换，转为单个字符，便于处理：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">modelDataFlowable</span><br><span class="line">    <span class="comment">// 异步线程池执行</span></span><br><span class="line">    .observeOn(Schedulers.io())</span><br><span class="line">    .map(chunk -&gt; chunk.getChoices().get(<span class="number">0</span>).getDelta().getContent())</span><br><span class="line">    .map(message -&gt; message.replaceAll(<span class="string">&quot;\\s&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    .filter(StrUtil::isNotBlank)</span><br><span class="line">    .flatMap(message -&gt; &#123;</span><br><span class="line">        <span class="comment">// 将字符串转换为 List&lt;Character&gt;</span></span><br><span class="line">        List&lt;Character&gt; charList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> c : message.toCharArray()) &#123;</span><br><span class="line">            charList.add(c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Flowable.fromIterable(charList);</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure></li><li><p>异步拼接JSON单题数据，并利用SSE推送至前端</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 左括号计数器，除了默认值外，当回归为 0 时，表示左括号等于右括号，可以截取</span></span><br><span class="line"><span class="type">AtomicInteger</span> <span class="variable">counter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AtomicInteger</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">// 拼接完整题目</span></span><br><span class="line"><span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line"></span><br><span class="line">flowable.doOnNext(c -&gt; &#123;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 识别第一个 [ 表示开始 AI 传输 json 数据，打开 flag 开始拼接 json 数组</span></span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;&#123;&#x27;</span>) &#123;</span><br><span class="line">            flag.addAndGet(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag.get() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            contentBuilder.append(c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;&#125;&#x27;</span>) &#123;</span><br><span class="line">            flag.addAndGet(-<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (flag.get() == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// 累积单套题目满足 json 格式后，sse 推送至前端</span></span><br><span class="line">                <span class="comment">// sse 需要压缩成当行 json，sse 无法识别换行</span></span><br><span class="line">                emitter.send(JSONUtil.toJsonStr(contentBuilder.toString()));</span><br><span class="line">                <span class="comment">// 清空 StringBuilder</span></span><br><span class="line">                contentBuilder.setLength(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>监听flowable完成事件，并开启订阅：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flowable</span><br><span class="line">    .doOnComplete(emitter::complete)</span><br><span class="line">    .subscribe()</span><br></pre></td></tr></table></figure><p>完整代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/ai_generate/sse&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> SseEmitter <span class="title function_">aiGenerateQuestionSSE</span><span class="params">(AiGenerateQuestionRequest aiGenerateQuestionRequest,HttpServletRequest request)</span> &#123;</span><br><span class="line">        ThrowUtils.throwIf(aiGenerateQuestionRequest == <span class="literal">null</span>, ErrorCode.PARAMS_ERROR);</span><br><span class="line">        <span class="comment">// 获取参数</span></span><br><span class="line">        <span class="type">Long</span> <span class="variable">appId</span> <span class="operator">=</span> aiGenerateQuestionRequest.getAppId();</span><br><span class="line">        <span class="type">int</span> <span class="variable">questionNumber</span> <span class="operator">=</span> aiGenerateQuestionRequest.getQuestionNumber();</span><br><span class="line">        <span class="type">int</span> <span class="variable">optionNumber</span> <span class="operator">=</span> aiGenerateQuestionRequest.getOptionNumber();</span><br><span class="line">        <span class="comment">// 获取应用信息</span></span><br><span class="line">        <span class="type">App</span> <span class="variable">app</span> <span class="operator">=</span> appService.getById(appId);</span><br><span class="line">        ThrowUtils.throwIf(app == <span class="literal">null</span>, ErrorCode.NOT_FOUND_ERROR);</span><br><span class="line">        <span class="comment">// 封装 Prompt</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">userMessage</span> <span class="operator">=</span> getGenerateQuestionUserMessage(app, questionNumber, optionNumber);</span><br><span class="line">        <span class="comment">// 建立 SSE 连接对象，0 表示永不超时</span></span><br><span class="line">        <span class="type">SseEmitter</span> <span class="variable">sseEmitter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SseEmitter</span>(<span class="number">0L</span>);</span><br><span class="line">        <span class="comment">// AI 生成，SSE 流式返回</span></span><br><span class="line">        Flowable&lt;ModelData&gt; modelDataFlowable = aiManager.doStreamRequest(GENERATE_QUESTION_SYSTEM_MESSAGE, userMessage, <span class="literal">null</span>);</span><br><span class="line">        <span class="comment">// 左括号计数器，除了默认值外，当回归为 0 时，表示左括号等于右括号，可以截取</span></span><br><span class="line">        <span class="type">AtomicInteger</span> <span class="variable">counter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AtomicInteger</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">// 拼接完整题目</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="comment">//默认线程池</span></span><br><span class="line">        <span class="type">Scheduler</span> <span class="variable">scheduler</span> <span class="operator">=</span> Schedulers.io();</span><br><span class="line">        <span class="comment">//获取登录用户</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">loginUser</span> <span class="operator">=</span> userService.getLoginUser(request);</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;admin&quot;</span>.equals(loginUser.getUserRole()))&#123;</span><br><span class="line">            scheduler = vipSchedule;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        modelDataFlowable</span><br><span class="line">                .observeOn(scheduler)</span><br><span class="line">                .map(modelData -&gt; modelData.getChoices().get(<span class="number">0</span>).getDelta().getContent())</span><br><span class="line">                .map(message -&gt; message.replaceAll(<span class="string">&quot;\\s&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">                .filter(StrUtil::isNotBlank)</span><br><span class="line">                .flatMap(message -&gt; &#123;</span><br><span class="line">                    List&lt;Character&gt; characterList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">char</span> c : message.toCharArray()) &#123;</span><br><span class="line">                        characterList.add(c);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> Flowable.fromIterable(characterList);</span><br><span class="line">                &#125;)</span><br><span class="line">                .doOnNext(c -&gt; &#123;</span><br><span class="line">                    <span class="comment">// 如果是 &#x27;&#123;&#x27;，计数器 + 1</span></span><br><span class="line">                    <span class="keyword">if</span> (c == <span class="string">&#x27;&#123;&#x27;</span>) &#123;</span><br><span class="line">                        counter.addAndGet(<span class="number">1</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (counter.get() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        stringBuilder.append(c);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (c == <span class="string">&#x27;&#125;&#x27;</span>) &#123;</span><br><span class="line">                        counter.addAndGet(-<span class="number">1</span>);</span><br><span class="line">                        <span class="keyword">if</span> (counter.get() == <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="comment">// 可以拼接题目，并且通过 SSE 返回给前端</span></span><br><span class="line">                            sseEmitter.send(JSONUtil.toJsonStr(stringBuilder.toString()));</span><br><span class="line">                            <span class="comment">// 重置，准备拼接下一道题</span></span><br><span class="line">                            stringBuilder.setLength(<span class="number">0</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .doOnError((e) -&gt; log.error(<span class="string">&quot;sse error&quot;</span>, e))</span><br><span class="line">                .doOnComplete(sseEmitter::complete)</span><br><span class="line">                .subscribe();</span><br><span class="line">        <span class="keyword">return</span> sseEmitter;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="前端开发"><a href="#前端开发" class="headerlink" title="前端开发"></a>前端开发</h2><ol><li><p>在AI生成抽屉表单中补充一个AI生成按钮，绑定提交事件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-form-item&gt;</span><br><span class="line">  &lt;a-space&gt;</span><br><span class="line">    &lt;a-button</span><br><span class="line">      :loading=&quot;submitting&quot;</span><br><span class="line">      type=&quot;primary&quot;</span><br><span class="line">      html-type=&quot;submit&quot;</span><br><span class="line">      style=&quot;width: 120px&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &#123;&#123; submitting ? &quot;生成中&quot; : &quot;一键生成&quot; &#125;&#125;</span><br><span class="line">    &lt;/a-button&gt;</span><br><span class="line">    &lt;a-button</span><br><span class="line">      :loading=&quot;submitting&quot;</span><br><span class="line">      style=&quot;width: 120px&quot;</span><br><span class="line">      @click=&quot;doSSESubmit&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &#123;&#123; submitting ? &quot;生成中&quot; : &quot;实时生成&quot; &#125;&#125;</span><br><span class="line">    &lt;/a-button&gt;</span><br><span class="line">  &lt;/a-space&gt;</span><br><span class="line">&lt;/a-form-item&gt;</span><br></pre></td></tr></table></figure></li><li><p>编写提交函数，遵循前面提到的SSE前端实现方法，先能打印出SSE推送的消息、生成开始、生成结束的信息。这里不能调用生成的api，因为axios默认不支持SSE。</p></li><li><p>当有内容生成时，向父页面插入题目（利用属性传递实现）</p></li></ol><p>前端题目添加完整代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;addQuestionPage&quot;&gt;</span><br><span class="line">    &lt;h2 style=&quot;margin-bottom: 32px&quot;&gt;设置题目&lt;/h2&gt;</span><br><span class="line">    &lt;a-form</span><br><span class="line">      :model=&quot;questionContent&quot;</span><br><span class="line">      :style=&quot;&#123; width: &#x27;480px&#x27; &#125;&quot;</span><br><span class="line">      label-align=&quot;left&quot;</span><br><span class="line">      auto-label-width</span><br><span class="line">      @submit=&quot;handleSubmit&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;a-form-item label=&quot;应用 id&quot;&gt;</span><br><span class="line">        &#123;&#123; appId &#125;&#125;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">      &lt;a-form-item label=&quot;题目列表&quot; :content-flex=&quot;false&quot; :merge-props=&quot;false&quot;&gt;</span><br><span class="line">        &lt;a-space size=&quot;medium&quot;&gt;</span><br><span class="line">          &lt;a-button @click=&quot;addQuestion(questionContent.length)&quot;&gt;</span><br><span class="line">            底部添加题目</span><br><span class="line">          &lt;/a-button&gt;</span><br><span class="line">          &lt;AiGenerateQuestionDrawer</span><br><span class="line">            :appId=&quot;appId&quot;</span><br><span class="line">            :onSuccess=&quot;onAiGenerateSuccess&quot;</span><br><span class="line">            :onSSESuccess=&quot;onAiGenerateSuccessSSE&quot;</span><br><span class="line">            :onSSEClose=&quot;onSSEClose&quot;</span><br><span class="line">            :onSSEStart=&quot;onSSEStart&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/a-space&gt;</span><br><span class="line">        &lt;!-- 遍历每道题目 --&gt;</span><br><span class="line">        &lt;div v-for=&quot;(question, index) in questionContent&quot; :key=&quot;index&quot;&gt;</span><br><span class="line">          &lt;a-space size=&quot;large&quot;&gt;</span><br><span class="line">            &lt;h3&gt;题目 &#123;&#123; index + 1 &#125;&#125;&lt;/h3&gt;</span><br><span class="line">            &lt;a-button size=&quot;small&quot; @click=&quot;addQuestion(index + 1)&quot;&gt;</span><br><span class="line">              添加题目</span><br><span class="line">            &lt;/a-button&gt;</span><br><span class="line">            &lt;a-button</span><br><span class="line">              size=&quot;small&quot;</span><br><span class="line">              status=&quot;danger&quot;</span><br><span class="line">              @click=&quot;deleteQuestion(index)&quot;</span><br><span class="line">            &gt;</span><br><span class="line">              删除题目</span><br><span class="line">            &lt;/a-button&gt;</span><br><span class="line">          &lt;/a-space&gt;</span><br><span class="line">          &lt;a-form-item field=&quot;posts.post1&quot; :label=&quot;`题目 $&#123;index + 1&#125; 标题`&quot;&gt;</span><br><span class="line">            &lt;a-input v-model=&quot;question.title&quot; placeholder=&quot;请输入标题&quot; /&gt;</span><br><span class="line">          &lt;/a-form-item&gt;</span><br><span class="line">          &lt;!--  题目选项 --&gt;</span><br><span class="line">          &lt;a-space size=&quot;large&quot;&gt;</span><br><span class="line">            &lt;h4&gt;题目 &#123;&#123; index + 1 &#125;&#125; 选项列表&lt;/h4&gt;</span><br><span class="line">            &lt;a-button</span><br><span class="line">              size=&quot;small&quot;</span><br><span class="line">              @click=&quot;addQuestionOption(question, question.options.length)&quot;</span><br><span class="line">            &gt;</span><br><span class="line">              底部添加选项</span><br><span class="line">            &lt;/a-button&gt;</span><br><span class="line">          &lt;/a-space&gt;</span><br><span class="line">          &lt;a-form-item</span><br><span class="line">            v-for=&quot;(option, optionIndex) in question.options&quot;</span><br><span class="line">            :key=&quot;optionIndex&quot;</span><br><span class="line">            :label=&quot;`选项 $&#123;optionIndex + 1&#125;`&quot;</span><br><span class="line">            :content-flex=&quot;false&quot;</span><br><span class="line">            :merge-props=&quot;false&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            &lt;a-form-item label=&quot;选项 key&quot;&gt;</span><br><span class="line">              &lt;a-input v-model=&quot;option.key&quot; placeholder=&quot;请输入选项 key&quot; /&gt;</span><br><span class="line">            &lt;/a-form-item&gt;</span><br><span class="line">            &lt;a-form-item label=&quot;选项值&quot;&gt;</span><br><span class="line">              &lt;a-input v-model=&quot;option.value&quot; placeholder=&quot;请输入选项值&quot; /&gt;</span><br><span class="line">            &lt;/a-form-item&gt;</span><br><span class="line">            &lt;a-form-item label=&quot;选项结果&quot;&gt;</span><br><span class="line">              &lt;a-input v-model=&quot;option.result&quot; placeholder=&quot;请输入选项结果&quot; /&gt;</span><br><span class="line">            &lt;/a-form-item&gt;</span><br><span class="line">            &lt;a-form-item label=&quot;选项得分&quot;&gt;</span><br><span class="line">              &lt;a-input-number</span><br><span class="line">                v-model=&quot;option.score&quot;</span><br><span class="line">                placeholder=&quot;请输入选项得分&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/a-form-item&gt;</span><br><span class="line">            &lt;a-space size=&quot;large&quot;&gt;</span><br><span class="line">              &lt;a-button</span><br><span class="line">                size=&quot;mini&quot;</span><br><span class="line">                @click=&quot;addQuestionOption(question, optionIndex + 1)&quot;</span><br><span class="line">              &gt;</span><br><span class="line">                添加选项</span><br><span class="line">              &lt;/a-button&gt;</span><br><span class="line">              &lt;a-button</span><br><span class="line">                size=&quot;mini&quot;</span><br><span class="line">                status=&quot;danger&quot;</span><br><span class="line">                @click=&quot;deleteQuestionOption(question, optionIndex as any)&quot;</span><br><span class="line">              &gt;</span><br><span class="line">                删除选项</span><br><span class="line">              &lt;/a-button&gt;</span><br><span class="line">            &lt;/a-space&gt;</span><br><span class="line">          &lt;/a-form-item&gt;</span><br><span class="line">          &lt;!-- 题目选项结尾 --&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">      &lt;a-form-item&gt;</span><br><span class="line">        &lt;a-button type=&quot;primary&quot; html-type=&quot;submit&quot; style=&quot;width: 120px&quot;&gt;</span><br><span class="line">          提交</span><br><span class="line">        &lt;/a-button&gt;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">    &lt;/a-form&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; defineProps, ref, watchEffect, withDefaults &#125; from &quot;vue&quot;;</span><br><span class="line">import API from &quot;@/api&quot;;</span><br><span class="line">import &#123; useRouter &#125; from &quot;vue-router&quot;;</span><br><span class="line">import &#123;</span><br><span class="line">  addQuestionUsingPost,</span><br><span class="line">  editQuestionUsingPost,</span><br><span class="line">  listQuestionVoByPageUsingPost,</span><br><span class="line">&#125; from &quot;@/api/questionController&quot;;</span><br><span class="line">import message from &quot;@arco-design/web-vue/es/message&quot;;</span><br><span class="line"></span><br><span class="line">import AiGenerateQuestionDrawer from &quot;@/views/add/components/AiGenerateQuestionDrawer.vue&quot;;</span><br><span class="line"></span><br><span class="line">interface Props &#123;</span><br><span class="line">  appId: string;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const props = withDefaults(defineProps&lt;Props&gt;(), &#123;</span><br><span class="line">  appId: () =&gt; &#123;</span><br><span class="line">    return &quot;&quot;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const router = useRouter();</span><br><span class="line"></span><br><span class="line">// 题目内容结构（理解为题目列表）</span><br><span class="line">const questionContent = ref&lt;API.QuestionContentDTO[]&gt;([]);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 添加题目</span><br><span class="line"> * @param index</span><br><span class="line"> */</span><br><span class="line">const addQuestion = (index: number) =&gt; &#123;</span><br><span class="line">  questionContent.value.splice(index, 0, &#123;</span><br><span class="line">    title: &quot;&quot;,</span><br><span class="line">    options: [],</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 删除题目</span><br><span class="line"> * @param index</span><br><span class="line"> */</span><br><span class="line">const deleteQuestion = (index: number) =&gt; &#123;</span><br><span class="line">  questionContent.value.splice(index, 1);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 添加题目选项</span><br><span class="line"> * @param question</span><br><span class="line"> * @param index</span><br><span class="line"> */</span><br><span class="line">const addQuestionOption = (question: API.QuestionContentDTO, index: number) =&gt; &#123;</span><br><span class="line">  if (!question.options) &#123;</span><br><span class="line">    question.options = [];</span><br><span class="line">  &#125;</span><br><span class="line">  question.options.splice(index, 0, &#123;</span><br><span class="line">    key: &quot;&quot;,</span><br><span class="line">    value: &quot;&quot;,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 删除题目选项</span><br><span class="line"> * @param question</span><br><span class="line"> * @param index</span><br><span class="line"> */</span><br><span class="line">const deleteQuestionOption = (</span><br><span class="line">  question: API.QuestionContentDTO,</span><br><span class="line">  index: number</span><br><span class="line">) =&gt; &#123;</span><br><span class="line">  if (!question.options) &#123;</span><br><span class="line">    question.options = [];</span><br><span class="line">  &#125;</span><br><span class="line">  question.options.splice(index, 1);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const oldQuestion = ref&lt;API.QuestionVO&gt;();</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 加载数据</span><br><span class="line"> */</span><br><span class="line">const loadData = async () =&gt; &#123;</span><br><span class="line">  if (!props.appId) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">  const res = await listQuestionVoByPageUsingPost(&#123;</span><br><span class="line">    appId: props.appId as any,</span><br><span class="line">    current: 1,</span><br><span class="line">    pageSize: 1,</span><br><span class="line">    sortField: &quot;createTime&quot;,</span><br><span class="line">    sortOrder: &quot;descend&quot;,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (res.data.code === 0 &amp;&amp; res.data.data?.records) &#123;</span><br><span class="line">    oldQuestion.value = res.data.data?.records[0];</span><br><span class="line">    if (oldQuestion.value) &#123;</span><br><span class="line">      questionContent.value = oldQuestion.value.questionContent ?? [];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取数据失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 获取旧数据</span><br><span class="line">watchEffect(() =&gt; &#123;</span><br><span class="line">  loadData();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 提交</span><br><span class="line"> */</span><br><span class="line">const handleSubmit = async () =&gt; &#123;</span><br><span class="line">  if (!props.appId || !questionContent.value) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">  let res: any;</span><br><span class="line">  // 如果是修改</span><br><span class="line">  if (oldQuestion.value?.id) &#123;</span><br><span class="line">    res = await editQuestionUsingPost(&#123;</span><br><span class="line">      id: oldQuestion.value.id,</span><br><span class="line">      questionContent: questionContent.value,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    // 创建</span><br><span class="line">    res = await addQuestionUsingPost(&#123;</span><br><span class="line">      appId: props.appId as any,</span><br><span class="line">      questionContent: questionContent.value,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    message.success(&quot;操作成功，即将跳转到应用详情页&quot;);</span><br><span class="line">    setTimeout(() =&gt; &#123;</span><br><span class="line">      router.push(`/app/detail/$&#123;props.appId&#125;`);</span><br><span class="line">    &#125;, 3000);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;操作失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * AI 生成题目成功后执行</span><br><span class="line"> */</span><br><span class="line">const onAiGenerateSuccess = (result: API.QuestionContentDTO[]) =&gt; &#123;</span><br><span class="line">  message.success(`AI 生成题目成功，生成 $&#123;result.length&#125; 道题目`);</span><br><span class="line">  questionContent.value = [...questionContent.value, ...result];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * AI 生成题目成功后执行（SSE）</span><br><span class="line"> */</span><br><span class="line">const onAiGenerateSuccessSSE = (result: API.QuestionContentDTO) =&gt; &#123;</span><br><span class="line">  questionContent.value = [...questionContent.value, result];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * SSE 开始生成</span><br><span class="line"> * @param event</span><br><span class="line"> */</span><br><span class="line">const onSSEStart = (event: any) =&gt; &#123;</span><br><span class="line">  message.success(&quot;开始生成&quot;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * SSE 生成完毕</span><br><span class="line"> * @param event</span><br><span class="line"> */</span><br><span class="line">const onSSEClose = (event: any) =&gt; &#123;</span><br><span class="line">  message.success(&quot;生成完毕&quot;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="AI评分优化"><a href="#AI评分优化" class="headerlink" title="AI评分优化"></a>AI评分优化</h1><h2 id="需求分析-1"><a href="#需求分析-1" class="headerlink" title="需求分析"></a>需求分析</h2><p>目前的AI评分功能存在2个问题：</p><ol><li>AI调用需要费用，用户对同样的题目做出同样的选择，理论会得到一样的答案，不需要每次都询问AI。</li><li>AI评分的响应时间较长，效率有待提高。</li></ol><p>如何解决这些问题呢？<br>答案必然是“缓存”。只要提到“响应慢”、“数据复用”，就要想到缓存。</p><h2 id="方案设计-1"><a href="#方案设计-1" class="headerlink" title="方案设计"></a>方案设计</h2><h3 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h3><p>缓存的技术选型上，一般是本地缓存和Redis分布式缓存。<br>如果项目不考虑分布式或扩容、且不需要持久化，一般用本地缓存能解决的问题，就不要用分布式缓存，会增加系统的复杂度。<br>对于我们的缓存需要，哪怕是多机部署，每台服务器上分别缓存也是ok的，不用保证多台机器上的一致性，所以采用Caffeine本地缓存。<br>Caffeine官方文档：<a href="https://github.com/ben-manes/caffeine">ben-manes&#x2F;caffeine: A high performance caching library for Java (github.com)</a></p><h3 id="缓存设计"><a href="#缓存设计" class="headerlink" title="缓存设计"></a>缓存设计</h3><p>要缓存哪些内容？如何设计缓存的key&#x2F;value结构？</p><ol><li>缓存key设计</li></ol><p>回归到需求“用户对同样的题目做出相同的选择，理论会得到一样的解答”，所以可以将应用id和用户的答案列表作为key。<br>但答案列表可能会很长，可以利用哈希算法md5来压缩key，节省空间。如果是分布式缓存，还需要在key开头拼接业务前缀。此处可以单独为每个业务创建本地缓存，相互隔离，所以key可以简单一些。</p><ol start="2"><li>缓存value设计</li></ol><p>缓存AI回答的结果，为了可读性可以存JSON结构，为了压缩空间可以存二进制等其他结构。</p><ol start="3"><li>缓存过期时间设置</li></ol><p><strong>必须设置缓存过期时间，</strong>假设有20道题目，那么不同选择累计总次数一共有2的20次方，过期时间根据实际业务场景和缓存空间的大小、数据的一致性的要求设置，合适即可，此处可以设置为1天。</p><h3 id="业务流程"><a href="#业务流程" class="headerlink" title="业务流程"></a>业务流程</h3><ol><li>在AI回答前，哈希处理用户答案选择，得到摘要，拼接缓存key。</li><li>通过摘要查找缓存，若命中则直接返回答题结果。</li><li>若缓存中未找到，则请求AI回答。</li><li>正确解析AI返回的JSON后，将其放置在缓存中。</li></ol><p><strong>缓存击穿问题解决</strong><br>什么是缓存击穿？<br>同一时刻有大量的用户答案，比如1w个用户，且答题选择都是一致的，但没有命中缓存（刚好过期），这时候会有1w个并发请求打到AI上。这就是缓存击穿问题。即大量请求并发访问热点数据，刚好热点数据过期，会直接绕过缓存，命中数据库或者AI接口。<br>怎么解决？<br>一种常见的方式是加锁，如果服务部署在多个机器上，就需要使用分布式锁。可以直接使用Redission客户端，它为Redis提供了多种数据结构的支持，并且提供了线程安全的操作。简化了在Java中使用Redis的复杂度。<br>Redission官方文档：<a href="https://github.com/redisson/redisson">GitHub - redisson&#x2F;redisson: Redisson - Easy Redis Java client and Real-Time Data Platform. Valkey compatible. Sync&#x2F;Async&#x2F;RxJava&#x2F;Reactive API. Over 50 Redis based Java objects and services: Set, Multimap, SortedSet, Map, List, Queue, Deque, Semaphore, Lock, AtomicLong, Map Reduce, Bloom filter, Spring Cache, Tomcat, Scheduler, JCache API, Hibernate, RPC, local cache …</a></p><h2 id="后端实现"><a href="#后端实现" class="headerlink" title="后端实现"></a>后端实现</h2><h3 id="引入所需依赖"><a href="#引入所需依赖" class="headerlink" title="引入所需依赖"></a>引入所需依赖</h3><p>包括本地缓存+Redission分布式锁</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.redisson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>redisson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.21.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.ben-manes.caffeine<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>caffeine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：jdk8使用caffeine2.x版本，jdk&gt;&#x3D;11,使用3.x版本</p></blockquote><h3 id="本地缓存实现"><a href="#本地缓存实现" class="headerlink" title="本地缓存实现"></a>本地缓存实现</h3><p>在AITestScoringStrategy中创建本地缓存</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> Cache&lt;String, String&gt; answerCacheMap =</span><br><span class="line">        Caffeine.newBuilder().initialCapacity(<span class="number">1024</span>)</span><br><span class="line">                <span class="comment">// 缓存5分钟移除</span></span><br><span class="line">                .expireAfterAccess(<span class="number">5L</span>, TimeUnit.MINUTES)</span><br><span class="line">                .build();</span><br></pre></td></tr></table></figure><p>构建缓存key的方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> String <span class="title function_">buildCacheKey</span><span class="params">(Long appId, String choicesStr)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> DigestUtil.md5Hex(appId + <span class="string">&quot;:&quot;</span> + choicesStr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在评分功能的开头补充逻辑，有缓存则直接返回</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">answerJson</span> <span class="operator">=</span> answerCacheMap.getIfPresent(key);</span><br><span class="line"><span class="comment">// 命中缓存则直接返回结果</span></span><br><span class="line"><span class="keyword">if</span> (StrUtil.isNotBlank(answerJson)) &#123;</span><br><span class="line">    <span class="type">UserAnswer</span> <span class="variable">userAnswer</span> <span class="operator">=</span> JSONUtil.toBean(answerJson, UserAnswer.class);</span><br><span class="line">    userAnswer.setAppId(appId);</span><br><span class="line">    userAnswer.setAppType(app.getAppType());</span><br><span class="line">    userAnswer.setScoringStrategy(app.getScoringStrategy());</span><br><span class="line">    userAnswer.setChoices(choicesStr);</span><br><span class="line">    <span class="keyword">return</span> userAnswer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果没缓存，调用AI后，需要设置缓存：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 4. 构造返回值，填充答案对象的属性</span></span><br><span class="line"><span class="type">UserAnswer</span> <span class="variable">userAnswer</span> <span class="operator">=</span> JSONUtil.toBean(answerJson, UserAnswer.class);</span><br><span class="line">userAnswer.setAppId(appId);</span><br><span class="line">userAnswer.setAppType(app.getAppType());</span><br><span class="line">userAnswer.setScoringStrategy(app.getScoringStrategy());</span><br><span class="line">userAnswer.setChoices(choicesStr);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 5. 缓存 AI 结果</span></span><br><span class="line">answerCacheMap.put(key, answerJson);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Redisson分布式锁"><a href="#Redisson分布式锁" class="headerlink" title="Redisson分布式锁"></a>Redisson分布式锁</h3><p>配置Redisson客户端，读取项目中的redis配置，注入为Bean:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;spring.redis&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedissonConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String host;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer port;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer database;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RedissonClient <span class="title function_">redissonClient</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Config</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Config</span>();</span><br><span class="line">        config.useSingleServer()</span><br><span class="line">        .setAddress(<span class="string">&quot;redis://&quot;</span> + host + <span class="string">&quot;:&quot;</span> + port)</span><br><span class="line">        .setDatabase(database)</span><br><span class="line">        .setPassword(password);</span><br><span class="line">        <span class="keyword">return</span> Redisson.create(config);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置文件补充Redis配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Redis 配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">database:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">xxxx</span></span><br><span class="line">    <span class="attr">port:</span> <span class="string">xxx</span></span><br><span class="line">    <span class="attr">timeout:</span> <span class="number">2000</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">xxx</span></span><br></pre></td></tr></table></figure><p>在AI评分逻辑中补充分布式锁，先创建一把锁，需要给分布式锁设置一个业务前缀，防止和其他系统冲突。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">AI_ANSWER_LOCK</span> <span class="operator">=</span> <span class="string">&quot;AI_ANSWER_LOCK&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">RLock</span> <span class="variable">lock</span> <span class="operator">=</span> redissonClient.getLock(AI_ANSWER_LOCK + key);</span><br></pre></td></tr></table></figure><p>调用获取锁方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 竞争分布式锁，等待 3 秒，15 秒自动释放</span></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">res</span> <span class="operator">=</span> lock.tryLock(<span class="number">3</span>, <span class="number">15</span>, TimeUnit.SECONDS);</span><br><span class="line">    <span class="keyword">if</span> (res)&#123;</span><br><span class="line">        <span class="comment">// 抢到锁的业务才能执行 AI 调用</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (lock != <span class="literal">null</span> &amp;&amp; lock.isLocked()) &#123;</span><br><span class="line">        <span class="keyword">if</span>(lock.isHeldByCurrentThread()) &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个方法是用于尝试获取锁，在给定的等待时间内，如果锁可用，就获取锁并返回true，如果在等待时间内无法获取到锁，则返回false。各参数的含义</p><ul><li>waitTime：等待获取锁的时间，即最长等待时间</li><li>leaseTime：获取到锁后的租期时间，即锁的持有时间</li><li>unit：时间单位，用于指定waitTime和leaseTime的时间单位</li></ul><p>一定要加try…finally块，保证锁被加锁的线程及时释放，否则会影响业务。</p><h1 id="分库分表实战"><a href="#分库分表实战" class="headerlink" title="分库分表实战"></a>分库分表实战</h1><h2 id="需求分析-2"><a href="#需求分析-2" class="headerlink" title="需求分析"></a>需求分析</h2><p>如果平台发展迅速，用户量激增，从数据库层面去思考，哪个表的数据会最大呢？</p><ol><li>app应用表</li></ol><p>这个表不会激增，成百上千的应用已经很多了，但对于数据库来说，还是小量级</p><ol start="2"><li>question题目表</li></ol><p>不太可能，一个应用一般也就几十道题目</p><ol start="3"><li>scoring_result评分结果表</li></ol><p>不太可能，一个应用对应不会有多少结果，比如MBTI也就16个。</p><ol start="4"><li>user表</li></ol><p>有可能，但是暂时还不会达到那么大量级。</p><ol start="5"><li>user_answer用户答题记录表</li></ol><p>一个用户可以对同个应用多次答题，也可以在多个应用多次答题，理论上来说，这个表是最先到达瓶颈的。<br>除了清理数据外，常见的一种优化方案是分库分表。</p><h2 id="分库分表概念"><a href="#分库分表概念" class="headerlink" title="分库分表概念"></a>分库分表概念</h2><p>随着用户量的激增和时间的堆砌，存在数据库里面的数据越来越多，此时的数据库就会产生瓶颈，出现资源报警，查询慢等场景。首先单机数据库所能承载的连接数、I&#x2F;O及网络的吞吐等都是有限的，所以当并发量上来之后，数据库就渐渐顶不住了。<br>而且如果表单的数据量过大，查询的性能也会下降。因为数据越多底层存储的B+树就会越高，树越高则查询的IO次数就会越多，性能也会越差。</p><p>分库VS分表<br>把以前存在<strong>一个数据库</strong>实例里的数据拆分成多个数据库实例，部署在不同的服务器中，这是分库。<br>把以前存在<strong>一张表</strong>里面的数据拆分成多张表，这是分表。</p><ul><li>分表：是为了解决由于单张表数据量多大，而导致查询慢的问题。</li><li>分库：是为了解决服务器资源受单机限制，顶不住高并发访问的问题，把请求分配到多台服务器上，分担压力。</li></ul><h2 id="技术选型-1"><a href="#技术选型-1" class="headerlink" title="技术选型"></a>技术选型</h2><h3 id="通用选型思路"><a href="#通用选型思路" class="headerlink" title="通用选型思路"></a>通用选型思路</h3><ol><li>场景适配，考察选择的框架或组件所提供的功能是否符合当前的需求。</li><li>技术栈匹配度，考察引入的组件是否有很多附带的依赖，比如引入rpc框架，可能需要配套引入注册中心、配置中心等等。</li><li>社区和动态，选择的开源组件社区是否活跃，资料是否丰富。</li></ol><h3 id="分库分表开源组件选型"><a href="#分库分表开源组件选型" class="headerlink" title="分库分表开源组件选型"></a>分库分表开源组件选型</h3><p>常见的分库分表开源组件有：ShardingSphere、MyCat、Cobar等。<br>ShardingSphere官方文档：<a href="https://github.com/apache/shardingsphere">apache&#x2F;shardingsphere: Distributed SQL transaction &amp; query engine for data sharding, scaling, encryption, and more - on any database. (github.com)</a><br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722783743612-6313fa70-bca9-492e-81fe-1972d4f63812.png" alt="image.png"><br>MyCat官方文档：<a href="https://github.com/MyCATApache/Mycat2">MyCATApache&#x2F;Mycat2: MySQL Proxy using Java NIO based on Sharding SQL,Calcite ,simple and fast (github.com)</a><br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722783824988-459f6e90-e2a2-4ebc-8d95-e1e5b6f4f704.png" alt="image.png"><br>Cobar官方文档：<a href="https://github.com/alibaba/cobar">alibaba&#x2F;cobar: a proxy for sharding databases and tables (github.com)</a><br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722783881959-49e7bffe-400f-4006-960e-1c99171a3d9b.png" alt="image.png"><br>看了一下star数，有了一个大致的预期，Sharding-JDBC相对而言功能更丰富，还支持读写分离、数据脱敏、分布式事务等。而且ShardingShpere非常活跃，社区庞大且资料丰富，项目迭代也非常快。</p><h2 id="Sharding-JDBC原理"><a href="#Sharding-JDBC原理" class="headerlink" title="Sharding-JDBC原理"></a>Sharding-JDBC原理</h2><p>Sharding-JDBC核心原理其实很简单，可以用几个字总结：<strong>改写SQL</strong><br>比如我们想根据appId来将对应的用户答案记录表进行分表。<br>将appId % 2等于0的应用的所有用户的答题记录都划分到user_answer_0，等于1的应用的所有用户的答题记录都划分到user_answer_1。<br>按照我们正常的想法处理逻辑是</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>（appId % <span class="number">2</span> == <span class="number">0</span>）&#123;</span><br><span class="line">userAnswer0Service.save(userAnswer);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">userAnswer1Service.save(userAnswer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有了Sharding-JDBC后，只要写好配置，Sharding-JDBC就会根据配置，执行我们上面的逻辑，在业务代码上我们就可以透明化分库分表的存在，减少很多重复逻辑。<br>它会解析SQL，根据我们指定的分片键，按照我们设置的逻辑来计算得到对应的路由分片（数据库或表），最终改写SQL后进行SQL的执行。</p><h2 id="方案设计-2"><a href="#方案设计-2" class="headerlink" title="方案设计"></a>方案设计</h2><p>分库分表的核心是确定按照什么维度（或者字段）进行拆分，一般会选择唯一的、业务合理的、能够均匀分配的字段。<br>在本项目中，user_answer有一个天然的拆分字段即appId，不同应用的用户答题记录没有关联，因此可以根据appId来拆分user_answer表。<br><strong>实现流程</strong></p><ol><li>新建user_answer_0和user_answer_1，作为user_answer表的分表</li><li>引入Sharding-JDBC</li><li>配置文件中设置分表逻辑</li></ol><h2 id="后端开发-1"><a href="#后端开发-1" class="headerlink" title="后端开发"></a>后端开发</h2><p>新建表，直接复制user_answer的DDL表结构，改个名即可。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> user_answer_xxx</span><br><span class="line">(</span><br><span class="line">    id              <span class="type">bigint</span> auto_increment <span class="keyword">primary</span> key,</span><br><span class="line">    appId           <span class="type">bigint</span>                             <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;应用 id&#x27;</span>,</span><br><span class="line">    appType         tinyint  <span class="keyword">default</span> <span class="number">0</span>                 <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;应用类型（0-得分类，1-角色测评类）&#x27;</span>,</span><br><span class="line">    choiceJson      text                               <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;用户答案&#x27;</span>,</span><br><span class="line">    resultId        <span class="type">bigint</span>                             <span class="keyword">null</span> comment <span class="string">&#x27;评分结果 id&#x27;</span>,</span><br><span class="line">    resultName      <span class="type">varchar</span>(<span class="number">128</span>)                       <span class="keyword">null</span> comment <span class="string">&#x27;结果名称，如物流师&#x27;</span>,</span><br><span class="line">    resultDesc      text                               <span class="keyword">null</span> comment <span class="string">&#x27;结果描述&#x27;</span>,</span><br><span class="line">    resultPicture   <span class="type">varchar</span>(<span class="number">1024</span>)                      <span class="keyword">null</span> comment <span class="string">&#x27;结果图标&#x27;</span>,</span><br><span class="line">    resultScore     <span class="type">int</span>                                <span class="keyword">null</span> comment <span class="string">&#x27;得分&#x27;</span>,</span><br><span class="line">    scoringStrategy tinyint  <span class="keyword">default</span> <span class="number">0</span>                 <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;评分策略（0-自定义，1-AI）&#x27;</span>,</span><br><span class="line">    userId          <span class="type">bigint</span>                             <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;用户 id&#x27;</span>,</span><br><span class="line">    createTime      datetime <span class="keyword">default</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">    updateTime      datetime <span class="keyword">default</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">on</span> <span class="keyword">update</span> <span class="built_in">CURRENT_TIMESTAMP</span> comment <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">    isDelete        tinyint  <span class="keyword">default</span> <span class="number">0</span>                 <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;是否删除&#x27;</span>,</span><br><span class="line">    index idx_appId (appId),</span><br><span class="line">    index idx_userId (userId)</span><br><span class="line">) comment <span class="string">&#x27;用户答题记录&#x27;</span> <span class="keyword">collate</span> <span class="operator">=</span> utf8mb4_unicode_ci;</span><br></pre></td></tr></table></figure><p>maven引入Sharding-JDBC依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shardingsphere<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shardingsphere-jdbc-core-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>仅需在application.yml配置一下参数：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">shardingsphere:</span></span><br><span class="line">    <span class="comment">#数据源配置</span></span><br><span class="line">    <span class="attr">datasource:</span></span><br><span class="line">      <span class="comment"># 多数据源以逗号隔开即可</span></span><br><span class="line">      <span class="attr">names:</span> <span class="string">fandada</span></span><br><span class="line">      <span class="attr">fandada:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">        <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">        <span class="attr">jdbc-url:</span> <span class="string">jdbc:mysql://localhost:3306/fandada?allowPublicKeyRetrieval=true&amp;useSSL=false&amp;autoReconnect=true&amp;characterEncoding=utf8</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">        <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="comment"># 规则配置</span></span><br><span class="line">    <span class="attr">rules:</span></span><br><span class="line">      <span class="attr">sharding:</span></span><br><span class="line">        <span class="comment"># 分片算法配置</span></span><br><span class="line">        <span class="attr">sharding-algorithms:</span></span><br><span class="line">          <span class="comment"># 自定义分片规则名</span></span><br><span class="line">          <span class="attr">answer-table-inline:</span></span><br><span class="line">            <span class="comment">## inline 类型是简单的配置文件里面就能写的类型，其他还有自定义类等等</span></span><br><span class="line">            <span class="attr">type:</span> <span class="string">INLINE</span></span><br><span class="line">            <span class="attr">props:</span></span><br><span class="line">              <span class="attr">algorithm-expression:</span> <span class="string">user_answer_$-&gt;&#123;appId</span> <span class="string">%</span> <span class="number">2</span><span class="string">&#125;</span></span><br><span class="line">        <span class="attr">tables:</span></span><br><span class="line">          <span class="attr">user_answer:</span></span><br><span class="line">            <span class="attr">actual-data-nodes:</span> <span class="string">fandada.user_answer_$-&gt;&#123;0..1&#125;</span></span><br><span class="line">            <span class="comment"># 分表策略</span></span><br><span class="line">            <span class="attr">table-strategy:</span></span><br><span class="line">              <span class="attr">standard:</span></span><br><span class="line">                <span class="attr">sharding-column:</span> <span class="string">appId</span></span><br><span class="line">                <span class="attr">sharding-algorithm-name:</span> <span class="string">answer-table-inline</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>配置解析</p><ol><li>需要将数据源挪至shardingshpere下</li><li>定义数据源的名称和url等配置</li><li>自定义分片规则，即answer-table-inline，分片算法为user_answer_$-&gt;{appId%2},这个含义就是根据appId%2的结果拼接表名，改写SQL。</li><li>设置对应的表使用分片规则，即tables:user_answer:table-strategy，指定分片键为appId，分片的规则是answer-table-inline。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> AI答题应用平台 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java项目 </tag>
            
            <tag> AI答题应用平台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI答题应用平台_5平台智能化</title>
      <link href="/2024/07/09/AI%E7%AD%94%E9%A2%98%E5%BA%94%E7%94%A8%E5%B9%B3%E5%8F%B0_5.%E5%B9%B3%E5%8F%B0%E6%99%BA%E8%83%BD%E5%8C%96/"/>
      <url>/2024/07/09/AI%E7%AD%94%E9%A2%98%E5%BA%94%E7%94%A8%E5%B9%B3%E5%8F%B0_5.%E5%B9%B3%E5%8F%B0%E6%99%BA%E8%83%BD%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="接入AI模块"><a href="#接入AI模块" class="headerlink" title="接入AI模块"></a>接入AI模块</h1><p>在质谱AI平台进行题目生成的演示，然后后端sdk引入</p><h2 id="质谱AI介绍"><a href="#质谱AI介绍" class="headerlink" title="质谱AI介绍"></a>质谱AI介绍</h2><p>质谱AI开放平台：<a href="https://open.bigmodel.cn/console/overview">智谱AI开放平台 (bigmodel.cn)</a><br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722561782820-1f33e448-96cd-4062-b78d-fea91ede576e.png" alt="image.png"><br>在这个平台上可以创建自己的知识库，包括各种格式的文档<br>之后就可以基于这个知识库创建自己的答题机器人应用，这样就可以使用该应用来获取自己想知道的知识点。</p><h2 id="使用质谱AI-SDK"><a href="#使用质谱AI-SDK" class="headerlink" title="使用质谱AI SDK"></a>使用质谱AI SDK</h2><p>通常对于这一类工具的使用，我们都需要去阅读<a href="https://open.bigmodel.cn/dev/api">官方文档</a>来使用。<br>官网提供了<strong>SDK调用</strong>、<strong>Http原生调用</strong>、以及<strong>第三方框架调用</strong>三种方式来调用API接口，<br>比较推荐的调用方式是SDK调用，可以简化编码方式，提高编码体验</p><h3 id="导入依赖项"><a href="#导入依赖项" class="headerlink" title="导入依赖项"></a>导入依赖项</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.bigmodel.openapi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>oapi-java-sdk<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>release-V4-2.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br></pre></td></tr></table></figure><h3 id="SDK用户鉴权"><a href="#SDK用户鉴权" class="headerlink" title="SDK用户鉴权"></a>SDK用户鉴权</h3><p>对于SDK的调用，不能让用户随便调用，所有的API调用都需要通过API Key进行鉴权，所以在调用API接口前，还需要去申请<a href="https://open.bigmodel.cn/usercenter/apikeys">API Keys</a>，并配置在自己的请求中。<br><strong>创建SDK 客户端</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这里需要将API密钥设置为自己申请的密钥</span></span><br><span class="line"><span class="type">ClientV4</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClientV4</span>.Builder(<span class="string">&quot;&#123;Your ApiSecretKey&#125;&quot;</span>).build();  </span><br></pre></td></tr></table></figure><h2 id="SDK示例代码"><a href="#SDK示例代码" class="headerlink" title="SDK示例代码"></a>SDK示例代码</h2><p>质谱平台提供了同步调用、异步调用、SSE调用三种方式。</p><h3 id="同步调用"><a href="#同步调用" class="headerlink" title="同步调用"></a>同步调用</h3><p>调用后可以一次性获取到最终的结果。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 同步调用</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">testInvoke</span><span class="params">()</span> &#123;</span><br><span class="line">   List&lt;ChatMessage&gt; messages = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">   <span class="type">ChatMessage</span> <span class="variable">chatMessage</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChatMessage</span>(ChatMessageRole.USER.value(), <span class="string">&quot;作为一名营销专家，请为智谱开放平台创作一个吸引人的slogan&quot;</span>);</span><br><span class="line">   messages.add(chatMessage);</span><br><span class="line">   <span class="type">String</span> <span class="variable">requestId</span> <span class="operator">=</span> String.format(requestIdTemplate, System.currentTimeMillis());</span><br><span class="line">   </span><br><span class="line">   <span class="type">ChatCompletionRequest</span> <span class="variable">chatCompletionRequest</span> <span class="operator">=</span> ChatCompletionRequest.builder()</span><br><span class="line">           .model(Constants.ModelChatGLM4)</span><br><span class="line">           .stream(Boolean.FALSE)</span><br><span class="line">           .invokeMethod(Constants.invokeMethod)</span><br><span class="line">           .messages(messages)</span><br><span class="line">           .requestId(requestId)</span><br><span class="line">           .build();</span><br><span class="line">   <span class="type">ModelApiResponse</span> <span class="variable">invokeModelApiResp</span> <span class="operator">=</span> client.invokeModelApi(chatCompletionRequest);</span><br><span class="line">   <span class="keyword">try</span> &#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;model output:&quot;</span> + mapper.writeValueAsString(invokeModelApiResp));</span><br><span class="line">   &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">       e.printStackTrace();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="异步调用"><a href="#异步调用" class="headerlink" title="异步调用"></a>异步调用</h3><p>调用后会先返回一个任务ID，之后通过这个任务ID去获取最终的结果（因为是异步的方式，所以通常需要等待很长时间才会返回）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 异步调用</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">testAsyncInvoke</span><span class="params">()</span> &#123;</span><br><span class="line">   List&lt;ChatMessage&gt; messages = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">   <span class="type">ChatMessage</span> <span class="variable">chatMessage</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChatMessage</span>(ChatMessageRole.USER.value(), <span class="string">&quot;作为一名营销专家，请为智谱开放平台创作一个吸引人的slogan&quot;</span>);</span><br><span class="line">   messages.add(chatMessage);</span><br><span class="line">   <span class="type">String</span> <span class="variable">requestId</span> <span class="operator">=</span> String.format(requestIdTemplate, System.currentTimeMillis());</span><br><span class="line">   </span><br><span class="line">   <span class="type">ChatCompletionRequest</span> <span class="variable">chatCompletionRequest</span> <span class="operator">=</span> ChatCompletionRequest.builder()</span><br><span class="line">           .model(Constants.ModelChatGLM4)</span><br><span class="line">           .stream(Boolean.FALSE)</span><br><span class="line">           .invokeMethod(Constants.invokeMethodAsync)</span><br><span class="line">           .messages(messages)</span><br><span class="line">           .requestId(requestId)</span><br><span class="line">           .build();</span><br><span class="line">   <span class="type">ModelApiResponse</span> <span class="variable">invokeModelApiResp</span> <span class="operator">=</span> client.invokeModelApi(chatCompletionRequest);</span><br><span class="line">   System.out.println(<span class="string">&quot;model output:&quot;</span> + JSON.toJSONString(invokeModelApiResp));</span><br><span class="line">   <span class="keyword">return</span> invokeModelApiResp.getData().getTaskId();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="SSE调用"><a href="#SSE调用" class="headerlink" title="SSE调用"></a>SSE调用</h3><p>调用之后可以流式的实时获取数据，直到结束。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* sse调用</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">testSseInvoke</span><span class="params">()</span> &#123;</span><br><span class="line">   List&lt;ChatMessage&gt; messages = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">   <span class="type">ChatMessage</span> <span class="variable">chatMessage</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChatMessage</span>(ChatMessageRole.USER.value(), <span class="string">&quot;作为一名营销专家，请为智谱开放平台创作一个吸引人的slogan&quot;</span>);</span><br><span class="line">   messages.add(chatMessage);</span><br><span class="line">   <span class="type">String</span> <span class="variable">requestId</span> <span class="operator">=</span> String.format(requestIdTemplate, System.currentTimeMillis());</span><br><span class="line"></span><br><span class="line">   <span class="type">ChatCompletionRequest</span> <span class="variable">chatCompletionRequest</span> <span class="operator">=</span> ChatCompletionRequest.builder()</span><br><span class="line">           .model(Constants.ModelChatGLM4)</span><br><span class="line">           .stream(Boolean.TRUE)</span><br><span class="line">           .messages(messages)</span><br><span class="line">           .requestId(requestId)</span><br><span class="line">           .build();</span><br><span class="line">   <span class="type">ModelApiResponse</span> <span class="variable">sseModelApiResp</span> <span class="operator">=</span> client.invokeModelApi(chatCompletionRequest);</span><br><span class="line">   <span class="keyword">if</span> (sseModelApiResp.isSuccess()) &#123;</span><br><span class="line">       <span class="type">AtomicBoolean</span> <span class="variable">isFirst</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AtomicBoolean</span>(<span class="literal">true</span>);</span><br><span class="line">       <span class="type">ChatMessageAccumulator</span> <span class="variable">chatMessageAccumulator</span> <span class="operator">=</span> mapStreamToAccumulator(sseModelApiResp.getFlowable())</span><br><span class="line">               .doOnNext(accumulator -&gt; &#123;</span><br><span class="line">                   &#123;</span><br><span class="line">                       <span class="keyword">if</span> (isFirst.getAndSet(<span class="literal">false</span>)) &#123;</span><br><span class="line">                           System.out.print(<span class="string">&quot;Response: &quot;</span>);</span><br><span class="line">                       &#125;</span><br><span class="line">                       <span class="keyword">if</span> (accumulator.getDelta() != <span class="literal">null</span> &amp;&amp; accumulator.getDelta().getTool_calls() != <span class="literal">null</span>) &#123;</span><br><span class="line">                           <span class="type">String</span> <span class="variable">jsonString</span> <span class="operator">=</span> mapper.writeValueAsString(accumulator.getDelta().getTool_calls());</span><br><span class="line">                           System.out.println(<span class="string">&quot;tool_calls: &quot;</span> + jsonString);</span><br><span class="line">                       &#125;</span><br><span class="line">                       <span class="keyword">if</span> (accumulator.getDelta() != <span class="literal">null</span> &amp;&amp; accumulator.getDelta().getContent() != <span class="literal">null</span>) &#123;</span><br><span class="line">                           System.out.print(accumulator.getDelta().getContent());</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;)</span><br><span class="line">               .doOnComplete(System.out::println)</span><br><span class="line">               .lastElement()</span><br><span class="line">               .blockingGet();</span><br><span class="line"></span><br><span class="line">       <span class="type">Choice</span> <span class="variable">choice</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Choice</span>(chatMessageAccumulator.getChoice().getFinishReason(), <span class="number">0L</span>, chatMessageAccumulator.getDelta());</span><br><span class="line">       List&lt;Choice&gt; choices = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">       choices.add(choice);</span><br><span class="line">       <span class="type">ModelData</span> <span class="variable">data</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelData</span>();</span><br><span class="line">       data.setChoices(choices);</span><br><span class="line">       data.setUsage(chatMessageAccumulator.getUsage());</span><br><span class="line">       data.setId(chatMessageAccumulator.getId());</span><br><span class="line">       data.setCreated(chatMessageAccumulator.getCreated());</span><br><span class="line">       data.setRequestId(chatCompletionRequest.getRequestId());</span><br><span class="line">       sseModelApiResp.setFlowable(<span class="literal">null</span>);</span><br><span class="line">       sseModelApiResp.setData(data);</span><br><span class="line">   &#125;</span><br><span class="line">   System.out.println(<span class="string">&quot;model output:&quot;</span> + JSON.toJSONString(sseModelApiResp));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="封装AI模块"><a href="#封装AI模块" class="headerlink" title="封装AI模块"></a>封装AI模块</h1><p>为了更方便的使用质谱SDK，我们可以对其进行封装，方便复用。</p><h2 id="在Application-xml定义AI配置"><a href="#在Application-xml定义AI配置" class="headerlink" title="在Application.xml定义AI配置"></a><strong>在Application.xml定义AI配置</strong></h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ai:</span><br><span class="line">  apiKey: xxx</span><br></pre></td></tr></table></figure><h2 id="定义AI配置类"><a href="#定义AI配置类" class="headerlink" title="定义AI配置类"></a><strong>定义AI配置类</strong></h2><p>加载配置文件，初始化调用质谱的Client,并注册为bean<strong>，</strong>后续不论是修改apiKey的配置，还是在其他程序中注入client都非常地方便。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;ai&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AiConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String apiKey;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ClientV4 <span class="title function_">getClientV4</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ClientV4</span>.Builder(apiKey).build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="封装通用的请求构建模块"><a href="#封装通用的请求构建模块" class="headerlink" title="封装通用的请求构建模块"></a><strong>封装通用的请求构建模块</strong></h2><p>比如可以将复杂的消息、请求构建、从返回值中获取结果的过程进行封装。<br>一般建议先封装通用的方法，之后按照方法参数填充默认值的方式，简化调用方法，进一步封装</p><ol><li><p><strong>通用请求方法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 通用请求</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> messages</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> stream</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> temperature</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">doRequest</span><span class="params">(List&lt;ChatMessage&gt;messages,Boolean stream,Float temperature)</span>&#123;</span><br><span class="line">       <span class="comment">//构建请求，包括请求所使用的大模型，是否开启流式，同步还是异步返回等配置</span></span><br><span class="line">       <span class="type">ChatCompletionRequest</span> <span class="variable">chatCompletionRequest</span> <span class="operator">=</span> ChatCompletionRequest.builder()</span><br><span class="line">               .model(Constants.ModelChatGLM4)</span><br><span class="line">               .stream(stream)</span><br><span class="line">               .temperature(temperature)</span><br><span class="line">               .invokeMethod(Constants.invokeMethod)</span><br><span class="line">               .messages(messages)</span><br><span class="line">               .build();</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="comment">//获取响应</span></span><br><span class="line">           <span class="type">ModelApiResponse</span> <span class="variable">invokeModelApiResp</span> <span class="operator">=</span> clientV4.invokeModelApi(chatCompletionRequest);</span><br><span class="line">           <span class="keyword">return</span> invokeModelApiResp.getData().getChoices().get(<span class="number">0</span>).toString();</span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(ErrorCode.SYSTEM_ERROR,e.getMessage());</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>通用请求方法-简化消息传递</strong></p></li></ol><p>通用方法中传的是ChatMessage的列表，其中包括系统消息和用户消息，可以把这一部分拆分开，使得消息的传递更自由。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通用请求(简化请求传递)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> systemMessage</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userMessage</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> stream</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> temperature</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">doRequest</span><span class="params">(String systemMessage,String userMessage,Boolean stream,Float temperature)</span>&#123;</span><br><span class="line">        List&lt;ChatMessage&gt; chatMessageList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">ChatMessage</span> <span class="variable">chatSystemMessage</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChatMessage</span>(ChatMessageRole.SYSTEM.value(), systemMessage);</span><br><span class="line">        chatMessageList.add(chatSystemMessage);</span><br><span class="line">        <span class="type">ChatMessage</span> <span class="variable">chatUserMessage</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChatMessage</span>(ChatMessageRole.USER.value(), userMessage);</span><br><span class="line">        chatMessageList.add(chatUserMessage);</span><br><span class="line">       <span class="keyword">return</span> doRequest(chatMessageList,stream,temperature);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><p><strong>通用同步请求方法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 同步请求</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> systemMessage</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userMessage</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> temperature</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">doSyncRequest</span><span class="params">(String systemMessage,String userMessage,Float temperature)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> doRequest(systemMessage,userMessage,Boolean.FALSE,temperature);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>稳定&#x2F;不稳定请求方法</strong></p></li></ol><p>在调用质谱AI接口的时候，还可以传递一个temprature参数，这个参数调节的是生成答案的稳定性，参数值越小越稳定，越大越不稳定。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 较稳定的随机数</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">float</span> <span class="variable">STABLE_TEMPERATURE</span> <span class="operator">=</span> <span class="number">0.05f</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不稳定的随机数</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">float</span> <span class="variable">UNSTABLE_TEMPERATURE</span> <span class="operator">=</span> <span class="number">0.99f</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 同步调用（答案较稳定）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> systemMessage</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> userMessage</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">doSyncStableRequest</span><span class="params">(String systemMessage, String userMessage)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> doSyncRequest(systemMessage, userMessage, STABLE_TEMPERATURE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 同步调用（答案较随机）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> systemMessage</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> userMessage</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">doSyncUnstableRequest</span><span class="params">(String systemMessage, String userMessage)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> doSyncRequest(systemMessage, userMessage, UNSTABLE_TEMPERATURE);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="AI生成题目"><a href="#AI生成题目" class="headerlink" title="AI生成题目"></a>AI生成题目</h1><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><p>原本创建题目需要一个一个的添加题目信息以及选项信息，比较麻烦，可以利用AI，根据应用信息，自动生成题目，然后只需要手动编辑确认，提高题目的生成效率。</p><h2 id="方案设计"><a href="#方案设计" class="headerlink" title="方案设计"></a>方案设计</h2><p>AI生成题目的核心是制定prompt，精确的prompt才能帮我们生成预期的结果。</p><h3 id="明确输入参数"><a href="#明确输入参数" class="headerlink" title="明确输入参数"></a>明确输入参数</h3><p>明确需要提供给AI的参数列表</p><ol><li>应用信息：包括应用的名称、应用的描述、应用的类型（得分类&#x2F;测评类）</li><li>题目信息：包括要生成的题目数、选项数等</li></ol><h3 id="明确返回结果"><a href="#明确返回结果" class="headerlink" title="明确返回结果"></a>明确返回结果</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;I&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;独自工作&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;E&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;与他人合作&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;B&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你通常更喜欢&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h3 id="编写和调试prompt"><a href="#编写和调试prompt" class="headerlink" title="编写和调试prompt"></a>编写和调试prompt</h3><p>质谱AI官方提供了prompt工程指南：<a href="https://open.bigmodel.cn/dev/howuse/prompt">智谱AI开放平台 (bigmodel.cn)</a></p><blockquote><p>常用的策略</p><ol><li>定义系统prompt</li><li>让GLM进行角色扮演</li><li>使用分隔符标识不同的输入部分</li><li>少样本学习</li><li>给定输出长度的示例，限制输出长度</li><li>将复杂任务分解为简单的子任务</li><li>指定固定的输出格式</li></ol></blockquote><p>遵循prompt工程中的策略，编写系统prompt和用户prompt<br>系统prompt如下：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">你是一位严谨的出题专家，我会给你如下信息：</span><br></pre></td></tr></table></figure><p>应用名称，<br>【【【应用描述】】】，<br>应用类别，<br>要生成的题目数，<br>每个题目的选项数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">请你根据上述信息，按照以下步骤来出题：</span><br><span class="line">1. 要求：题目和选项尽可能地短，题目不要包含序号，每题的选项数以我提供的为主，题目不能重复</span><br><span class="line">2. 严格按照下面的 json 格式输出题目和选项</span><br></pre></td></tr></table></figure><p>[{“options”:[{“value”:”选项内容”,”key”:”A”},{“value”:””,”key”:”B”}],”title”:”题目标题”}]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title 是题目，options 是选项，每个选项的 key 按照英文字母序（比如 A、B、C、D）以此类推，value 是选项内容</span><br><span class="line">3. 检查题目是否包含序号，若包含序号则去除序号</span><br><span class="line">4. 返回的题目列表格式必须为 JSON 数组</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>用户prompt如下<br>测评类</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MBTI 性格测试，</span><br><span class="line">【【【快来测测你的 MBTI 性格】】】，</span><br><span class="line">测评类，</span><br><span class="line">10，</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>得分类</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">小学数学测验，</span><br><span class="line">【【【小学三年级的数学题】】】，</span><br><span class="line">得分类，</span><br><span class="line">10，</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>可以先使用质谱AI提供的体验中心进行简单测试，之后再写一个测试方法来测试输出的结果符不符合预期。<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722570850931-d1b4600d-4994-4d09-86e5-496fd30bde17.png" alt="image.png"><br>测试时发现有多余的[和]括号，可以使用字符串方法去除这两个括号，再转换为题目对象，返回给前端。</p><blockquote><p><strong>注意：token</strong>在大模型中是自然文本语言中的基本单位，通常token和文字的对应占比是1：1.6，也就是说我们在生成这些内容的时候，都是需要消耗token的。</p></blockquote><h2 id="后端开发"><a href="#后端开发" class="headerlink" title="后端开发"></a>后端开发</h2><h3 id="AI生成题目请求类"><a href="#AI生成题目请求类" class="headerlink" title="AI生成题目请求类"></a>AI生成题目请求类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AiGenerateQuestionRequest</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 应用id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long appId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 题目数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">questionNumber</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 选项数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">optionNumber</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="定义模板常量和构造用户模板的方法"><a href="#定义模板常量和构造用户模板的方法" class="headerlink" title="定义模板常量和构造用户模板的方法"></a>定义模板常量和构造用户模板的方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// AI生成题目信息</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">GENERATE_QUESTION_SYSTEM_MESSAGE</span> <span class="operator">=</span> <span class="string">&quot;你是一位严谨的出题专家，我会给你如下信息：\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;```\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;应用名称，\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;【【【应用描述】】】，\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;应用类别，\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;要生成的题目数，\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;每个题目的选项数\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;```\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;请你根据上述信息，按照以下步骤来出题：\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;1. 要求：题目和选项尽可能地短，题目不要包含序号，每题的选项数以我提供的为主，题目不能重复\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;2. 严格按照下面的 json 格式输出题目和选项\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;```\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;[&#123;\&quot;options\&quot;:[&#123;\&quot;value\&quot;:\&quot;选项内容\&quot;,\&quot;key\&quot;:\&quot;A\&quot;&#125;,&#123;\&quot;value\&quot;:\&quot;\&quot;,\&quot;key\&quot;:\&quot;B\&quot;&#125;],\&quot;title\&quot;:\&quot;题目标题\&quot;&#125;]\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;```\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;title 是题目，options 是选项，每个选项的 key 按照英文字母序（比如 A、B、C、D）以此类推，value 是选项内容\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;3. 检查题目是否包含序号，若包含序号则去除序号\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;4. 返回的题目列表格式必须为 JSON 数组&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成题目的用户消息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> app</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> questionNumber</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> optionNumber</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getGenerateQuestionUserMessage</span><span class="params">(App app, <span class="type">int</span> questionNumber, <span class="type">int</span> optionNumber)</span> &#123;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">userMessage</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        userMessage.append(app.getAppName()).append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        userMessage.append(app.getAppDesc()).append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        userMessage.append(AppTypeEnum.getEnumByValue(app.getAppType()).getText() + <span class="string">&quot;类&quot;</span>).append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        userMessage.append(questionNumber).append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        userMessage.append(optionNumber);</span><br><span class="line">        <span class="keyword">return</span> userMessage.toString();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="添加AI生成题目的接口"><a href="#添加AI生成题目的接口" class="headerlink" title="添加AI生成题目的接口"></a>添加AI生成题目的接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/ai_generate&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> BaseResponse&lt;List&lt;QuestionContentDTO&gt;&gt; <span class="title function_">aiGenerateQuestion</span><span class="params">(</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestBody</span> AiGenerateQuestionRequest aiGenerateQuestionRequest)</span> &#123;</span><br><span class="line">        ThrowUtils.throwIf(aiGenerateQuestionRequest == <span class="literal">null</span>, ErrorCode.PARAMS_ERROR);</span><br><span class="line">        <span class="comment">// 获取参数</span></span><br><span class="line">        <span class="type">Long</span> <span class="variable">appId</span> <span class="operator">=</span> aiGenerateQuestionRequest.getAppId();</span><br><span class="line">        <span class="type">int</span> <span class="variable">questionNumber</span> <span class="operator">=</span> aiGenerateQuestionRequest.getQuestionNumber();</span><br><span class="line">        <span class="type">int</span> <span class="variable">optionNumber</span> <span class="operator">=</span> aiGenerateQuestionRequest.getOptionNumber();</span><br><span class="line">        <span class="comment">// 获取应用信息</span></span><br><span class="line">        <span class="type">App</span> <span class="variable">app</span> <span class="operator">=</span> appService.getById(appId);</span><br><span class="line">        ThrowUtils.throwIf(app == <span class="literal">null</span>, ErrorCode.NOT_FOUND_ERROR);</span><br><span class="line">        <span class="comment">// 封装 Prompt</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">userMessage</span> <span class="operator">=</span> getGenerateQuestionUserMessage(app, questionNumber, optionNumber);</span><br><span class="line">        <span class="comment">// AI 生成</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> aiManager.doSyncRequest(GENERATE_QUESTION_SYSTEM_MESSAGE, userMessage, <span class="literal">null</span>);</span><br><span class="line">        <span class="comment">// 截取需要的 JSON 信息</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> result.indexOf(<span class="string">&quot;[&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">end</span> <span class="operator">=</span> result.lastIndexOf(<span class="string">&quot;]&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> result.substring(start, end + <span class="number">1</span>);</span><br><span class="line">        List&lt;QuestionContentDTO&gt; questionContentDTOList = JSONUtil.toList(json, QuestionContentDTO.class);</span><br><span class="line">        <span class="keyword">return</span> ResultUtils.success(questionContentDTOList);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="前端开发"><a href="#前端开发" class="headerlink" title="前端开发"></a>前端开发</h2><p>页面效果图<img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722580417198-8982ff33-45eb-40e3-b70b-285cf35afb76.png" alt="image.png"></p><h3 id="抽屉组件"><a href="#抽屉组件" class="headerlink" title="抽屉组件"></a>抽屉组件</h3><p>在题目页面插入一个抽屉组件，当点击按钮时，可以弹出一个窗来输入题目和选项个数，传递给后端来告诉AI。<br><a href="https://arco.design/react/components/drawer">抽屉 Drawer | ArcoDesign</a><br>允许用户填写要生成题目的参数（题目个数和选项个数）并执行，生成成功后回调题目页面的组件，插入题目信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;a-button type=&quot;outline&quot; @click=&quot;handleClick&quot;&gt;AI 生成题目&lt;/a-button&gt;</span><br><span class="line">  &lt;a-drawer</span><br><span class="line">    :width=&quot;340&quot;</span><br><span class="line">    :visible=&quot;visible&quot;</span><br><span class="line">    @ok=&quot;handleOk&quot;</span><br><span class="line">    @cancel=&quot;handleCancel&quot;</span><br><span class="line">    unmountOnClose</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;template #title&gt;AI 生成题目&lt;/template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;a-form</span><br><span class="line">        :model=&quot;form&quot;</span><br><span class="line">        label-align=&quot;left&quot;</span><br><span class="line">        auto-label-width</span><br><span class="line">        @submit=&quot;handleSubmit&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;a-form-item label=&quot;应用 id&quot;&gt;</span><br><span class="line">          &#123;&#123; appId &#125;&#125;</span><br><span class="line">        &lt;/a-form-item&gt;</span><br><span class="line">        &lt;a-form-item field=&quot;questionNumber&quot; label=&quot;题目数量&quot;&gt;</span><br><span class="line">          &lt;a-input-number</span><br><span class="line">            min=&quot;0&quot;</span><br><span class="line">            max=&quot;20&quot;</span><br><span class="line">            v-model=&quot;form.questionNumber&quot;</span><br><span class="line">            placeholder=&quot;请输入题目数量&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/a-form-item&gt;</span><br><span class="line">        &lt;a-form-item field=&quot;optionNumber&quot; label=&quot;选项数量&quot;&gt;</span><br><span class="line">          &lt;a-input-number</span><br><span class="line">            min=&quot;0&quot;</span><br><span class="line">            max=&quot;6&quot;</span><br><span class="line">            v-model=&quot;form.optionNumber&quot;</span><br><span class="line">            placeholder=&quot;请输入选项数量&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/a-form-item&gt;</span><br><span class="line">        &lt;a-form-item&gt;</span><br><span class="line">          &lt;a-space&gt;</span><br><span class="line">            &lt;a-button</span><br><span class="line">              :loading=&quot;submitting&quot;</span><br><span class="line">              type=&quot;primary&quot;</span><br><span class="line">              html-type=&quot;submit&quot;</span><br><span class="line">              style=&quot;width: 120px&quot;</span><br><span class="line">            &gt;</span><br><span class="line">              &#123;&#123; submitting ? &quot;生成中&quot; : &quot;一键生成&quot; &#125;&#125;</span><br><span class="line">            &lt;/a-button&gt;</span><br><span class="line">            &lt;a-button</span><br><span class="line">              :loading=&quot;sseSubmitting&quot;</span><br><span class="line">              style=&quot;width: 120px&quot;</span><br><span class="line">              @click=&quot;handleSSESubmit&quot;</span><br><span class="line">            &gt;</span><br><span class="line">              &#123;&#123; sseSubmitting ? &quot;生成中&quot; : &quot;实时生成&quot; &#125;&#125;</span><br><span class="line">            &lt;/a-button&gt;</span><br><span class="line">          &lt;/a-space&gt;</span><br><span class="line">        &lt;/a-form-item&gt;</span><br><span class="line">      &lt;/a-form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/a-drawer&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; defineProps, reactive, ref, withDefaults &#125; from &quot;vue&quot;;</span><br><span class="line">import API from &quot;@/api&quot;;</span><br><span class="line">import &#123; aiGenerateQuestionUsingPost &#125; from &quot;@/api/questionController&quot;;</span><br><span class="line">import message from &quot;@arco-design/web-vue/es/message&quot;;</span><br><span class="line"></span><br><span class="line">interface Props &#123;</span><br><span class="line">  appId: string;</span><br><span class="line">  onSuccess?: (result: API.QuestionContentDTO[]) =&gt; void;</span><br><span class="line">  onSSESuccess?: (result: API.QuestionContentDTO) =&gt; void;</span><br><span class="line">  onSSEStart?: (event: any) =&gt; void;</span><br><span class="line">  onSSEClose?: (event: any) =&gt; void;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const props = withDefaults(defineProps&lt;Props&gt;(), &#123;</span><br><span class="line">  appId: () =&gt; &#123;</span><br><span class="line">    return &quot;&quot;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const form = reactive(&#123;</span><br><span class="line">  optionNumber: 2,</span><br><span class="line">  questionNumber: 10,</span><br><span class="line">&#125; as API.AiGenerateQuestionRequest);</span><br><span class="line"></span><br><span class="line">const visible = ref(false);</span><br><span class="line">const submitting = ref(false);</span><br><span class="line">const sseSubmitting = ref(false);</span><br><span class="line"></span><br><span class="line">const handleClick = () =&gt; &#123;</span><br><span class="line">  visible.value = true;</span><br><span class="line">&#125;;</span><br><span class="line">const handleOk = () =&gt; &#123;</span><br><span class="line">  visible.value = false;</span><br><span class="line">&#125;;</span><br><span class="line">const handleCancel = () =&gt; &#123;</span><br><span class="line">  visible.value = false;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 提交</span><br><span class="line"> */</span><br><span class="line">const handleSubmit = async () =&gt; &#123;</span><br><span class="line">  if (!props.appId) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">  submitting.value = true;</span><br><span class="line">  const res = await aiGenerateQuestionUsingPost(&#123;</span><br><span class="line">    appId: props.appId as any,</span><br><span class="line">    ...form,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (res.data.code === 0 &amp;&amp; res.data.data.length &gt; 0) &#123;</span><br><span class="line">    if (props.onSuccess) &#123;</span><br><span class="line">      props.onSuccess(res.data.data);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      message.success(&quot;生成题目成功&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    // 关闭抽屉</span><br><span class="line">    handleCancel();</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;操作失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">  submitting.value = false;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 提交（实时生成）</span><br><span class="line"> */</span><br><span class="line">const handleSSESubmit = async () =&gt; &#123;</span><br><span class="line">  if (!props.appId) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">  sseSubmitting.value = true;</span><br><span class="line">  // 创建 SSE 请求</span><br><span class="line">  const eventSource = new EventSource(</span><br><span class="line">    // todo 手动填写完整的后端地址</span><br><span class="line">    &quot;http://localhost:8101/api/question/ai_generate/sse&quot; +</span><br><span class="line">      `?appId=$&#123;props.appId&#125;&amp;optionNumber=$&#123;form.optionNumber&#125;&amp;questionNumber=$&#123;form.questionNumber&#125;`</span><br><span class="line">  );</span><br><span class="line">  let first = true;</span><br><span class="line">  // 接收消息</span><br><span class="line">  eventSource.onmessage = function (event) &#123;</span><br><span class="line">    if (first) &#123;</span><br><span class="line">      props.onSSEStart?.(event);</span><br><span class="line">      handleCancel();</span><br><span class="line">      first = !first;</span><br><span class="line">    &#125;</span><br><span class="line">    props.onSSESuccess?.(JSON.parse(event.data));</span><br><span class="line">  &#125;;</span><br><span class="line">  // 报错或连接关闭时触发</span><br><span class="line">  eventSource.onerror = function (event) &#123;</span><br><span class="line">    if (event.eventPhase === EventSource.CLOSED) &#123;</span><br><span class="line">      console.log(&quot;关闭连接&quot;);</span><br><span class="line">      props.onSSEClose?.(event);</span><br><span class="line">      eventSource.close();</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      eventSource.close();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  sseSubmitting.value = false;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="引入组件"><a href="#引入组件" class="headerlink" title="引入组件"></a>引入组件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-space size=&quot;medium&quot;&gt;</span><br><span class="line">  &lt;a-button @click=&quot;addQuestion(questionContent.length)&quot;&gt;</span><br><span class="line">    底部添加题目</span><br><span class="line">  &lt;/a-button&gt;</span><br><span class="line">  &lt;!-- AI 生成题目抽屉 --&gt;</span><br><span class="line">  &lt;AiGenerateQuestionDrawer</span><br><span class="line">    :appId=&quot;appId&quot;</span><br><span class="line">    :onSuccess=&quot;onAiGenerateSuccess&quot;</span><br><span class="line">  /&gt;</span><br><span class="line">&lt;/a-space&gt;</span><br></pre></td></tr></table></figure><p>编写AI生成题目的处理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">const onAiGenerateSuccess = (result: API.QuestionContentDTO[]) =&gt; &#123;</span><br><span class="line">  questionContent.value = [...questionContent.value, ...result];</span><br><span class="line">  message.success(`AI 生成题目成功，已新增 $&#123;result.length&#125; 道题目`);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="AI智能评分"><a href="#AI智能评分" class="headerlink" title="AI智能评分"></a>AI智能评分</h1><h2 id="需求分析-1"><a href="#需求分析-1" class="headerlink" title="需求分析"></a>需求分析</h2><p>原本题目评分需要用户自己手动设置，并给每个题目选项设置得分和对应属性，比较麻烦，所以选择AI来根据应用信息、题目信息、用户答案来自动生成评分结果，这种评分策略更适合用于测评类应用。</p><h2 id="方案设计-1"><a href="#方案设计-1" class="headerlink" title="方案设计"></a>方案设计</h2><h3 id="明确输入参数-1"><a href="#明确输入参数-1" class="headerlink" title="明确输入参数"></a>明确输入参数</h3><p>明确需要提供给AI的请求参数</p><ol><li>应用信息，包括应用名称、应用描述</li><li>题目信息</li><li>用户答案<blockquote><p><strong>注意：</strong>题目数量可能很多，把一个完整的题目结构（所有选项）都输入给AI，可能会超出token的最大限制，所以传输的时候<strong>只传输答案对应的选项</strong></p></blockquote></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;appName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MBTI 性格测试&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;appDesc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;测试你的 MBTI 性格&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;question&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你喜欢和人交流&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;answer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;喜欢&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="明确返回结果-1"><a href="#明确返回结果-1" class="headerlink" title="明确返回结果"></a>明确返回结果</h3><p>需要JSON格式的返回评分结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;resultName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;INTJ&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;resultDesc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;INTJ被称为&#x27;策略家&#x27;或&#x27;建筑师&#x27;，是一个高度独立和具有战略思考能力的性格类型&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="编写和调试prompt-1"><a href="#编写和调试prompt-1" class="headerlink" title="编写和调试prompt"></a>编写和调试prompt</h3><p>按照上述编写prompt的策略，编写系统prompt和用户prompt<br>系统prompt</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">你是一位严谨的判题专家，我会给你如下信息：</span><br></pre></td></tr></table></figure><p>应用名称，<br>【【【应用描述】】】，<br>题目和用户回答的列表：格式为 [{“title”: “题目”,”answer”: “用户回答”}]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">请你根据上述信息，按照以下步骤来对用户进行评价：</span><br><span class="line">1. 要求：需要给出一个明确的评价结果，包括评价名称（尽量简短）和评价描述（尽量详细，大于 200 字）</span><br><span class="line">2. 严格按照下面的 json 格式输出评价名称和评价描述</span><br></pre></td></tr></table></figure><p>{“resultName”: “评价名称”, “resultDesc”: “评价描述”}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3. 返回格式必须为 JSON 对象</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>用户prompt按照顺序提供数据就可以<br>测评类应用</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MBTI 性格测试，</span><br><span class="line">【【【快来测测你的 MBTI 性格】】】，</span><br><span class="line"><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你通常更喜欢&quot;</span><span class="punctuation">,</span><span class="attr">&quot;answer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;独自工作&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span><span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;当安排活动时&quot;</span><span class="punctuation">,</span><span class="attr">&quot;answer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;更愿意随机应变&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>然后利用官网体验中心和本地写测试方法先看一下输出的效果</p><h2 id="后端开发-1"><a href="#后端开发-1" class="headerlink" title="后端开发"></a>后端开发</h2><ol><li><p>编写题目答案封装类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QuestionAnswerDTO</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 题目</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户答案</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String userAnswer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写AI测评类应用评分策略，需要指定对应的注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ScoringStrategyConfig(appType = 1, scoringStrategy = 1)</span></span><br></pre></td></tr></table></figure></li><li><p>定义系统信息常量模板，以及获取用户信息的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">AI_TEST_SCORING_SYSTEM_MESSAGE</span> <span class="operator">=</span> <span class="string">&quot;你是一位严谨的判题专家，我会给你如下信息：\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;```\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;应用名称，\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;【【【应用描述】】】，\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;题目和用户回答的列表：格式为 [&#123;\&quot;title\&quot;: \&quot;题目\&quot;,\&quot;answer\&quot;: \&quot;用户回答\&quot;&#125;]\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;```\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;请你根据上述信息，按照以下步骤来对用户进行评价：\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;1. 要求：需要给出一个明确的评价结果，包括评价名称（尽量简短）和评价描述（尽量详细，大于 200 字）\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;2. 严格按照下面的 json 格式输出评价名称和评价描述\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;```\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;&#123;\&quot;resultName\&quot;: \&quot;评价名称\&quot;, \&quot;resultDesc\&quot;: \&quot;评价描述\&quot;&#125;\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;```\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;3. 返回格式必须为 JSON 对象&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String <span class="title function_">getAiTestScoringUserMessage</span><span class="params">(App app, List&lt;QuestionContentDTO&gt; questionContentDTOList, List&lt;String&gt; choices)</span> &#123;</span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">userMessage</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">    userMessage.append(app.getAppName()).append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    userMessage.append(app.getAppDesc()).append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    List&lt;QuestionAnswerDTO&gt; questionAnswerDTOList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; questionContentDTOList.size(); i++) &#123;</span><br><span class="line">        <span class="type">QuestionAnswerDTO</span> <span class="variable">questionAnswerDTO</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QuestionAnswerDTO</span>();</span><br><span class="line">        questionAnswerDTO.setTitle(questionContentDTOList.get(i).getTitle());</span><br><span class="line">        questionAnswerDTO.setUserAnswer(choices.get(i));</span><br><span class="line">        questionAnswerDTOList.add(questionAnswerDTO);</span><br><span class="line">    &#125;</span><br><span class="line">    userMessage.append(JSONUtil.toJsonStr(questionAnswerDTOList));</span><br><span class="line">    <span class="keyword">return</span> userMessage.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现AI评分策略</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> UserAnswer <span class="title function_">doScore</span><span class="params">(List&lt;String&gt; choices, App app)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="type">Long</span> <span class="variable">appId</span> <span class="operator">=</span> app.getId();</span><br><span class="line">    <span class="comment">// 1. 根据 id 查询到题目</span></span><br><span class="line">    <span class="type">Question</span> <span class="variable">question</span> <span class="operator">=</span> questionService.getOne(</span><br><span class="line">            Wrappers.lambdaQuery(Question.class).eq(Question::getAppId, appId)</span><br><span class="line">    );</span><br><span class="line">    <span class="type">QuestionVO</span> <span class="variable">questionVO</span> <span class="operator">=</span> QuestionVO.objToVo(question);</span><br><span class="line">    List&lt;QuestionContentDTO&gt; questionContent = questionVO.getQuestionContent();</span><br><span class="line">    <span class="comment">// 2. 调用 AI 获取结果</span></span><br><span class="line">    <span class="comment">// 封装 Prompt</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">userMessage</span> <span class="operator">=</span> getAiTestScoringUserMessage(app, questionContent, choices);</span><br><span class="line">    <span class="comment">// AI 生成</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> aiManager.doSyncStableRequest(AI_TEST_SCORING_SYSTEM_MESSAGE, userMessage);</span><br><span class="line">    <span class="comment">// 结果处理</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> result.indexOf(<span class="string">&quot;&#123;&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">end</span> <span class="operator">=</span> result.lastIndexOf(<span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> result.substring(start, end + <span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 3. 构造返回值，填充答案对象的属性</span></span><br><span class="line">    <span class="type">UserAnswer</span> <span class="variable">userAnswer</span> <span class="operator">=</span> JSONUtil.toBean(json, UserAnswer.class);</span><br><span class="line">    userAnswer.setAppId(appId);</span><br><span class="line">    userAnswer.setAppType(app.getAppType());</span><br><span class="line">    userAnswer.setScoringStrategy(app.getScoringStrategy());</span><br><span class="line">    userAnswer.setChoices(JSONUtil.toJsonStr(choices));</span><br><span class="line">    <span class="keyword">return</span> userAnswer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前端开发<br>页面效果<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722584512130-9c55d54b-0eec-4d68-8c15-04cce36751e5.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">public UserAnswer doScore(List&lt;String&gt; choices, App app) throws Exception &#123;</span><br><span class="line">    Long appId = app.getId();</span><br><span class="line">    // 1. 根据 id 查询到题目</span><br><span class="line">    Question question = questionService.getOne(</span><br><span class="line">            Wrappers.lambdaQuery(Question.class).eq(Question::getAppId, appId)</span><br><span class="line">    );</span><br><span class="line">    QuestionVO questionVO = QuestionVO.objToVo(question);</span><br><span class="line">    List&lt;QuestionContentDTO&gt; questionContent = questionVO.getQuestionContent();</span><br><span class="line">    // 2. 调用 AI 获取结果</span><br><span class="line">    // 封装 Prompt</span><br><span class="line">    String userMessage = getAiTestScoringUserMessage(app, questionContent, choices);</span><br><span class="line">    // AI 生成</span><br><span class="line">    String result = aiManager.doSyncStableRequest(AI_TEST_SCORING_SYSTEM_MESSAGE, userMessage);</span><br><span class="line">    // 结果处理</span><br><span class="line">    int start = result.indexOf(&quot;&#123;&quot;);</span><br><span class="line">    int end = result.lastIndexOf(&quot;&#125;&quot;);</span><br><span class="line">    String json = result.substring(start, end + 1);</span><br><span class="line">    // 3. 构造返回值，填充答案对象的属性</span><br><span class="line">    UserAnswer userAnswer = JSONUtil.toBean(json, UserAnswer.class);</span><br><span class="line">    userAnswer.setAppId(appId);</span><br><span class="line">    userAnswer.setAppType(app.getAppType());</span><br><span class="line">    userAnswer.setScoringStrategy(app.getScoringStrategy());</span><br><span class="line">    userAnswer.setChoices(JSONUtil.toJsonStr(choices));</span><br><span class="line">    return userAnswer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> AI答题应用平台 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java项目 </tag>
            
            <tag> AI答题应用平台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI答题应用平台_4前端核心开发</title>
      <link href="/2024/07/06/AI%E7%AD%94%E9%A2%98%E5%BA%94%E7%94%A8%E5%B9%B3%E5%8F%B0_4.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83%E5%BC%80%E5%8F%91/"/>
      <url>/2024/07/06/AI%E7%AD%94%E9%A2%98%E5%BA%94%E7%94%A8%E5%B9%B3%E5%8F%B0_4.%E5%89%8D%E7%AB%AF%E6%A0%B8%E5%BF%83%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<h1 id="应用主页"><a href="#应用主页" class="headerlink" title="应用主页"></a>应用主页</h1><p>页面效果图<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722422303100-c4937d84-3644-4d54-b785-87133b4296a4.png" alt="image.png"><br>在路由文件中添加主页配置</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">   <span class="attr">name</span>: <span class="string">&quot;主页&quot;</span>,</span><br><span class="line">   <span class="attr">component</span>: <span class="title class_">HomePage</span>,</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><p>对于每一个应用，可以通过一个列表组件来展示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;homePage&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;searchBar&quot;&gt;</span><br><span class="line">      &lt;a-input-search</span><br><span class="line">        :style=&quot;&#123; width: &#x27;320px&#x27; &#125;&quot;</span><br><span class="line">        placeholder=&quot;快来搜索心仪的应用吧~&quot;</span><br><span class="line">        button-text=&quot;搜索&quot;</span><br><span class="line">        size=&quot;large&quot;</span><br><span class="line">        search-button</span><br><span class="line">        allow-clear</span><br><span class="line">        v-model=&quot;appSearchParams.appName&quot;</span><br><span class="line">        @keyup.enter=&quot;doSearch&quot;</span><br><span class="line">        @search=&quot;doSearch&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;a-list</span><br><span class="line">      class=&quot;list-demo-action-layout&quot;</span><br><span class="line">      :grid-props=&quot;&#123; gutter: [20, 20], sm: 24, md: 12, lg: 8, xl: 6 &#125;&quot;</span><br><span class="line">      :bordered=&quot;false&quot;</span><br><span class="line">      :data=&quot;dataList&quot;</span><br><span class="line">      :pagination-props=&quot;&#123;</span><br><span class="line">        pageSize: searchParams.pageSize,</span><br><span class="line">        current: searchParams.current,</span><br><span class="line">        total,</span><br><span class="line">      &#125;&quot;</span><br><span class="line">      @page-change=&quot;onPageChange&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;template #item=&quot;&#123; item &#125;&quot;&gt;</span><br><span class="line">        &lt;AppCard :app=&quot;item&quot; /&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/a-list&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref, watchEffect &#125; from &quot;vue&quot;;</span><br><span class="line">import AppCard from &quot;@/components/AppCard.vue&quot;;</span><br><span class="line">import API from &quot;@/api&quot;;</span><br><span class="line">import &#123; listAppVoByPageUsingPost &#125; from &quot;@/api/appController&quot;;</span><br><span class="line">import message from &quot;@arco-design/web-vue/es/message&quot;;</span><br><span class="line">import &#123; REVIEW_STATUS_ENUM &#125; from &quot;@/constant/app&quot;;</span><br><span class="line"></span><br><span class="line">const appSearchParams = ref&lt;API.AppQueryRequest&gt;(&#123;&#125;);</span><br><span class="line"></span><br><span class="line">// 初始化搜索条件（不应该被修改）</span><br><span class="line">const initSearchParams = &#123;</span><br><span class="line">  current: 1,</span><br><span class="line">  pageSize: 8,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const searchParams = ref&lt;API.AppQueryRequest&gt;(&#123;</span><br><span class="line">  ...initSearchParams,</span><br><span class="line">&#125;);</span><br><span class="line">const dataList = ref&lt;API.AppVO[]&gt;([]);</span><br><span class="line">const total = ref&lt;number&gt;(0);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 加载数据</span><br><span class="line"> */</span><br><span class="line">const loadData = async () =&gt; &#123;</span><br><span class="line">  const params = &#123;</span><br><span class="line">    reviewStatus: REVIEW_STATUS_ENUM.PASS,</span><br><span class="line">    ...searchParams.value,</span><br><span class="line">  &#125;;</span><br><span class="line">  const res = await listAppVoByPageUsingPost(params);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    dataList.value = res.data.data?.records || [];</span><br><span class="line">    total.value = res.data.data?.total || 0;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取数据失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 当分页变化时，改变搜索条件，触发数据加载</span><br><span class="line"> * @param page</span><br><span class="line"> */</span><br><span class="line">const onPageChange = (page: number) =&gt; &#123;</span><br><span class="line">  searchParams.value = &#123;</span><br><span class="line">    ...searchParams.value,</span><br><span class="line">    current: page,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line">const doSearch = () =&gt; &#123;</span><br><span class="line">  searchParams.value = &#123;</span><br><span class="line">    ...initSearchParams,</span><br><span class="line">    ...appSearchParams.value,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line">/**</span><br><span class="line"> * 监听 searchParams 变量，改变时触发数据的重新加载</span><br><span class="line"> */</span><br><span class="line">watchEffect(() =&gt; &#123;</span><br><span class="line">  loadData();</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">#homePage &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.searchBar &#123;</span><br><span class="line">  margin-bottom: 28px;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.list-demo-action-layout .image-area &#123;</span><br><span class="line">  width: 183px;</span><br><span class="line">  height: 119px;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  border-radius: 2px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.list-demo-action-layout .list-demo-item &#123;</span><br><span class="line">  padding: 20px 0;</span><br><span class="line">  border-bottom: 1px solid var(--color-fill-3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.list-demo-action-layout .image-area img &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.list-demo-action-layout .arco-list-item-action .arco-icon &#123;</span><br><span class="line">  margin: 0 4px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对于每一个应用，具体的展示方式为卡片，可以在列表中引入卡片组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;a-card class=&quot;appCard&quot; hoverable @click=&quot;doCardClick&quot;&gt;</span><br><span class="line">    &lt;template #actions&gt;</span><br><span class="line">      &lt;!--      &lt;span class=&quot;icon-hover&quot;&gt; &lt;IconThumbUp /&gt; &lt;/span&gt;--&gt;</span><br><span class="line">      &lt;span class=&quot;icon-hover&quot; @click=&quot;doShare&quot;&gt; &lt;IconShareInternal /&gt; &lt;/span&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #cover&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        :style=&quot;&#123;</span><br><span class="line">          height: &#x27;204px&#x27;,</span><br><span class="line">          overflow: &#x27;hidden&#x27;,</span><br><span class="line">        &#125;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          :style=&quot;&#123; width: &#x27;100%&#x27;, transform: &#x27;translateY(-20px)&#x27; &#125;&quot;</span><br><span class="line">          :alt=&quot;app.appName&quot;</span><br><span class="line">          :src=&quot;app.appIcon&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;a-card-meta :title=&quot;app.appName&quot; :description=&quot;app.appDesc&quot;&gt;</span><br><span class="line">      &lt;template #avatar&gt;</span><br><span class="line">        &lt;div</span><br><span class="line">          :style=&quot;&#123; display: &#x27;flex&#x27;, alignItems: &#x27;center&#x27;, color: &#x27;#1D2129&#x27; &#125;&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;a-avatar</span><br><span class="line">            :size=&quot;24&quot;</span><br><span class="line">            :image-url=&quot;app.userVO?.userAvatar&quot;</span><br><span class="line">            :style=&quot;&#123; marginRight: &#x27;8px&#x27; &#125;&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">          &lt;a-typography-text</span><br><span class="line">            &gt;&#123;&#123; app.userVO?.userName ?? &quot;无名&quot; &#125;&#125;</span><br><span class="line">          &lt;/a-typography-text&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/a-card-meta&gt;</span><br><span class="line">    &lt;ShareModal :link=&quot;shareLink&quot; ref=&quot;shareModalRef&quot; /&gt;</span><br><span class="line">  &lt;/a-card&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; IconShareInternal &#125; from &quot;@arco-design/web-vue/es/icon&quot;;</span><br><span class="line">import API from &quot;@/api&quot;;</span><br><span class="line">import &#123; defineProps, ref, withDefaults &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; useRouter &#125; from &quot;vue-router&quot;;</span><br><span class="line">import ShareModal from &quot;@/components/ShareModal.vue&quot;;</span><br><span class="line"></span><br><span class="line">interface Props &#123;</span><br><span class="line">  app: API.AppVO;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const props = withDefaults(defineProps&lt;Props&gt;(), &#123;</span><br><span class="line">  app: () =&gt; &#123;</span><br><span class="line">    return &#123;&#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const router = useRouter();</span><br><span class="line">const doCardClick = () =&gt; &#123;</span><br><span class="line">  router.push(`/app/detail/$&#123;props.app.id&#125;`);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//分享弹窗的引用</span><br><span class="line">const shareModalRef = ref();</span><br><span class="line">//分享链接</span><br><span class="line">const shareLink = `$&#123;window.location.protocol&#125;//$&#123;window.location.host&#125;/app/detail/$&#123;props.app.id&#125;`;</span><br><span class="line">//分享</span><br><span class="line">const doShare = (e: Event) =&gt; &#123;</span><br><span class="line">  if (shareModalRef.value) &#123;</span><br><span class="line">    shareModalRef.value.openModal();</span><br><span class="line">  &#125;</span><br><span class="line">  //防止点击分享按钮时，跳转到应用详情页</span><br><span class="line">  e.stopPropagation();</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.appCard &#123;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.icon-hover &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  width: 24px;</span><br><span class="line">  height: 24px;</span><br><span class="line">  border-radius: 50%;</span><br><span class="line">  transition: all 0.1s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.icon-hover:hover &#123;</span><br><span class="line">  background-color: rgb(var(--gray-2));</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="应用详情页"><a href="#应用详情页" class="headerlink" title="应用详情页"></a>应用详情页</h1><p>对于每一个页面，都需要在路由文件中，添加相应的配置</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/app/detail/:id&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;应用详情页&quot;</span>,</span><br><span class="line">    <span class="attr">props</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">AppDetailPage</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">hideInMenu</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>这里需要注意一定要添加<code>props：true</code>，这样才能从页面中获取到值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;appDetailPage&quot;&gt;</span><br><span class="line">    &lt;a-card&gt;</span><br><span class="line">      &lt;a-row style=&quot;margin-bottom: 16px&quot;&gt;</span><br><span class="line">        &lt;a-col flex=&quot;auto&quot; class=&quot;content-wrapper&quot;&gt;</span><br><span class="line">          &lt;h2&gt;&#123;&#123; data.appName &#125;&#125;&lt;/h2&gt;</span><br><span class="line">          &lt;p&gt;&#123;&#123; data.appDesc &#125;&#125;&lt;/p&gt;</span><br><span class="line">          &lt;p&gt;应用类型：&#123;&#123; APP_TYPE_MAP[data.appType] &#125;&#125;&lt;/p&gt;</span><br><span class="line">          &lt;p&gt;评分策略：&#123;&#123; APP_SCORING_STRATEGY_MAP[data.scoringStrategy] &#125;&#125;&lt;/p&gt;</span><br><span class="line">          &lt;p&gt;</span><br><span class="line">            &lt;a-space&gt;</span><br><span class="line">              作者：</span><br><span class="line">              &lt;div :style=&quot;&#123; display: &#x27;flex&#x27;, alignItems: &#x27;center&#x27; &#125;&quot;&gt;</span><br><span class="line">                &lt;a-avatar</span><br><span class="line">                  :size=&quot;24&quot;</span><br><span class="line">                  :image-url=&quot;data.userVO?.userAvatar&quot;</span><br><span class="line">                  :style=&quot;&#123; marginRight: &#x27;8px&#x27; &#125;&quot;</span><br><span class="line">                /&gt;</span><br><span class="line">                &lt;a-typography-text</span><br><span class="line">                  &gt;&#123;&#123; data.userVO?.userName ?? &quot;无名&quot; &#125;&#125;</span><br><span class="line">                &lt;/a-typography-text&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/a-space&gt;</span><br><span class="line">          &lt;/p&gt;</span><br><span class="line">          &lt;p&gt;</span><br><span class="line">            创建时间：&#123;&#123; dayjs(data.createTime).format(&quot;YYYY-MM-DD HH:mm:ss&quot;) &#125;&#125;</span><br><span class="line">          &lt;/p&gt;</span><br><span class="line">          &lt;a-space size=&quot;medium&quot;&gt;</span><br><span class="line">            &lt;a-button type=&quot;primary&quot; :href=&quot;`/answer/do/$&#123;id&#125;`&quot;</span><br><span class="line">              &gt;开始答题</span><br><span class="line">            &lt;/a-button&gt;</span><br><span class="line">            &lt;a-button @click=&quot;doShare&quot;&gt;分享应用&lt;/a-button&gt;</span><br><span class="line">            &lt;a-button v-if=&quot;isMy&quot; :href=&quot;`/add/question/$&#123;id&#125;`&quot;</span><br><span class="line">              &gt;设置题目</span><br><span class="line">            &lt;/a-button&gt;</span><br><span class="line">            &lt;a-button v-if=&quot;isMy&quot; :href=&quot;`/add/scoring_result/$&#123;id&#125;`&quot;</span><br><span class="line">              &gt;设置评分</span><br><span class="line">            &lt;/a-button&gt;</span><br><span class="line">            &lt;a-button v-if=&quot;isMy&quot; :href=&quot;`/add/app/$&#123;id&#125;`&quot;&gt;修改应用&lt;/a-button&gt;</span><br><span class="line">          &lt;/a-space&gt;</span><br><span class="line">        &lt;/a-col&gt;</span><br><span class="line">        &lt;a-col flex=&quot;320px&quot;&gt;</span><br><span class="line">          &lt;a-image width=&quot;100%&quot; :src=&quot;data.appIcon&quot; /&gt;</span><br><span class="line">        &lt;/a-col&gt;</span><br><span class="line">      &lt;/a-row&gt;</span><br><span class="line">    &lt;/a-card&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;ShareModal :link=&quot;shareLink&quot; ref=&quot;shareModalRef&quot; /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; computed, defineProps, ref, watchEffect, withDefaults &#125; from &quot;vue&quot;;</span><br><span class="line">import API from &quot;@/api&quot;;</span><br><span class="line">import &#123; getAppVoByIdUsingGet &#125; from &quot;@/api/appController&quot;;</span><br><span class="line">import message from &quot;@arco-design/web-vue/es/message&quot;;</span><br><span class="line">import &#123; useRouter &#125; from &quot;vue-router&quot;;</span><br><span class="line">import &#123; dayjs &#125; from &quot;@arco-design/web-vue/es/_utils/date&quot;;</span><br><span class="line">import &#123; useLoginUserStore &#125; from &quot;@/store/userStore&quot;;</span><br><span class="line">import &#123; APP_SCORING_STRATEGY_MAP, APP_TYPE_MAP &#125; from &quot;../../constant/app&quot;;</span><br><span class="line">import ShareModal from &quot;@/components/ShareModal.vue&quot;;</span><br><span class="line"></span><br><span class="line">interface Props &#123;</span><br><span class="line">  id: string;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const props = withDefaults(defineProps&lt;Props&gt;(), &#123;</span><br><span class="line">  id: () =&gt; &#123;</span><br><span class="line">    return &quot;&quot;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const router = useRouter();</span><br><span class="line"></span><br><span class="line">const data = ref&lt;API.AppVO&gt;(&#123;&#125;);</span><br><span class="line"></span><br><span class="line">// 获取登录用户</span><br><span class="line">const loginUserStore = useLoginUserStore();</span><br><span class="line">let loginUserId = loginUserStore.loginUser?.id;</span><br><span class="line">// 是否为本人创建</span><br><span class="line">const isMy = computed(() =&gt; &#123;</span><br><span class="line">  return loginUserId &amp;&amp; loginUserId === data.value.userId;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 加载数据</span><br><span class="line"> */</span><br><span class="line">const loadData = async () =&gt; &#123;</span><br><span class="line">  if (!props.id) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">  const res = await getAppVoByIdUsingGet(&#123;</span><br><span class="line">    id: props.id as any,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    data.value = res.data.data as any;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取数据失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 监听 searchParams 变量，改变时触发数据的重新加载</span><br><span class="line"> */</span><br><span class="line">watchEffect(() =&gt; &#123;</span><br><span class="line">  loadData();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//分享弹窗的引用</span><br><span class="line">const shareModalRef = ref();</span><br><span class="line">//分享链接</span><br><span class="line">const shareLink = `$&#123;window.location.protocol&#125;//$&#123;window.location.host&#125;/app/detail/$&#123;props.id&#125;`;</span><br><span class="line">//分享</span><br><span class="line">const doShare = (e: Event) =&gt; &#123;</span><br><span class="line">  if (shareModalRef.value) &#123;</span><br><span class="line">    shareModalRef.value.openModal();</span><br><span class="line">  &#125;</span><br><span class="line">  //防止点击分享按钮时，跳转到应用详情页</span><br><span class="line">  e.stopPropagation();</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">#appDetailPage &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#appDetailPage .content-wrapper &gt; * &#123;</span><br><span class="line">  margin-bottom: 24px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="创建模块"><a href="#创建模块" class="headerlink" title="创建模块"></a>创建模块</h1><p>业务流程</p><ol><li>先创建应用</li><li>进入应用详情页，如果是作者本人，可以选择给该应用上传题目或者评分结果，也可以修改应用</li><li>分别上传题目和评分结果</li></ol><h2 id="添加路由"><a href="#添加路由" class="headerlink" title="添加路由"></a>添加路由</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/add/app&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;创建应用&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">AddAppPage</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/add/app/:id&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;修改应用&quot;</span>,</span><br><span class="line">    <span class="attr">props</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">AddAppPage</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">hideInMenu</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/add/question/:appId&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;创建题目&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">AddQuestionPage</span>,</span><br><span class="line">    <span class="attr">props</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">hideInMenu</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/add/scoring_result/:appId&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;创建评分&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">AddScoringResultPage</span>,</span><br><span class="line">    <span class="attr">props</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">hideInMenu</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><h2 id="应用详情页跳转"><a href="#应用详情页跳转" class="headerlink" title="应用详情页跳转"></a>应用详情页跳转</h2><p>在应用详情页添加是否为本人的判断</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> loginUserStore = <span class="title function_">useLoginUserStore</span>();</span><br><span class="line"><span class="keyword">const</span> loginUserId = loginUserStore.<span class="property">loginUser</span>.<span class="property">id</span>;</span><br><span class="line"><span class="keyword">const</span> isMy = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> loginUserId &amp;&amp; loginUserId === data.<span class="property">value</span>.<span class="property">userId</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>补充按钮</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-space size=<span class="string">&quot;medium&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">a-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>开始答题<span class="tag">&lt;/<span class="name">a-button</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">a-button</span>&gt;</span>分享应用<span class="tag">&lt;/<span class="name">a-button</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">a-button</span> <span class="attr">v-if</span>=<span class="string">&quot;isMy&quot;</span> <span class="attr">:href</span>=<span class="string">&quot;`/add/question/$&#123;props.id&#125;`&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    设置题目</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">a-button</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">a-button</span> <span class="attr">v-if</span>=<span class="string">&quot;isMy&quot;</span> <span class="attr">:href</span>=<span class="string">&quot;`/add/scoring_result/$&#123;props.id&#125;`&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    设置评分</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">a-button</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">a-button</span> <span class="attr">v-if</span>=<span class="string">&quot;isMy&quot;</span> <span class="attr">:href</span>=<span class="string">&quot;`/add/app/$&#123;props.id&#125;`&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    修改应用</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">a-button</span>&gt;</span></span></span><br><span class="line">&lt;/a-space&gt;</span><br></pre></td></tr></table></figure><p><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722481185289-f51bce6f-e537-4cc0-9ff0-8b2c541140f6.png" alt="image.png"></p><h2 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h2><p><strong>页面效果图</strong><br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722481240570-51ca909e-ca79-4cd2-b5fd-3b22bdd09593.png" alt="image.png"><br>首先需要定义创建应用所需要提交的参数</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> form = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">  <span class="attr">appName</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="attr">appDesc</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="attr">appIcon</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="attr">appType</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">scoringStrategy</span>: <span class="number">0</span>,</span><br><span class="line">&#125; <span class="keyword">as</span> <span class="variable constant_">API</span>.<span class="property">AppAddRequest</span>);</span><br></pre></td></tr></table></figure><p>应用图标上传(需要开启cos服务)</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-form-item field=<span class="string">&quot;appIcon&quot;</span> label=<span class="string">&quot;应用图标&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">PictureUploader</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">biz</span>=<span class="string">&quot;app_icon&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:value</span>=<span class="string">&quot;form.appIcon&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:onChange</span>=<span class="string">&quot;(url) =&gt; (form.appIcon = url)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  /&gt;</span></span></span><br><span class="line">&lt;/a-form-item&gt;</span><br></pre></td></tr></table></figure><p>应用图标上传（手动输入地址）</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-form-item field=<span class="string">&quot;appIcon&quot;</span> label=<span class="string">&quot;应用图标&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">a-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.appDesc&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入应用图标地址&quot;</span> /&gt;</span></span></span><br><span class="line">&lt;/a-form-item&gt;</span><br></pre></td></tr></table></figure><p>下拉选择框，遍历对象，需要将key转化为number类型</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-form-item field=<span class="string">&quot;appType&quot;</span> label=<span class="string">&quot;应用类型&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">a-select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">v-model</span>=<span class="string">&quot;form.appType&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:style</span>=<span class="string">&quot;&#123; width: &#x27;320px&#x27; &#125;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">placeholder</span>=<span class="string">&quot;请选择应用类型&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">a-option</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">v-for</span>=<span class="string">&quot;(value, key) of APP_TYPE_MAP&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">:value</span>=<span class="string">&quot;Number(key)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">:label</span>=<span class="string">&quot;value&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">:key</span>=<span class="string">&quot;key&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">a-select</span>&gt;</span></span></span><br><span class="line">&lt;/a-form-item&gt;</span><br></pre></td></tr></table></figure><p>提交函数</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">handleSubmit</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">addAppUsingPost</span>(form);</span><br><span class="line">  <span class="keyword">if</span> (res.<span class="property">data</span>.<span class="property">code</span> === <span class="number">0</span>) &#123;</span><br><span class="line">    message.<span class="title function_">success</span>(<span class="string">&quot;创建成功，即将跳转到应用详情页&quot;</span>);</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      router.<span class="title function_">push</span>(<span class="string">`/app/detail/<span class="subst">$&#123;res.data.data&#125;</span>`</span>);</span><br><span class="line">    &#125;, <span class="number">3000</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    message.<span class="title function_">error</span>(<span class="string">&quot;创建失败，&quot;</span> + res.<span class="property">data</span>.<span class="property">message</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>最终代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;addAppPage&quot;&gt;</span><br><span class="line">    &lt;h2 style=&quot;margin-bottom: 32px&quot;&gt;创建应用&lt;/h2&gt;</span><br><span class="line">    &lt;a-form</span><br><span class="line">      :model=&quot;form&quot;</span><br><span class="line">      :style=&quot;&#123; width: &#x27;480px&#x27; &#125;&quot;</span><br><span class="line">      label-align=&quot;left&quot;</span><br><span class="line">      auto-label-width</span><br><span class="line">      @submit=&quot;handleSubmit&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;a-form-item field=&quot;appName&quot; label=&quot;应用名称&quot;&gt;</span><br><span class="line">        &lt;a-input v-model=&quot;form.appName&quot; placeholder=&quot;请输入应用名称&quot; /&gt;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">      &lt;a-form-item field=&quot;appDesc&quot; label=&quot;应用描述&quot;&gt;</span><br><span class="line">        &lt;a-input v-model=&quot;form.appDesc&quot; placeholder=&quot;请输入应用描述&quot; /&gt;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">      &lt;!--      &lt;a-form-item field=&quot;appIcon&quot; label=&quot;应用图标&quot;&gt;--&gt;</span><br><span class="line">      &lt;!--        &lt;a-input v-model=&quot;form.appIcon&quot; placeholder=&quot;请输入应用图标&quot; /&gt;--&gt;</span><br><span class="line">      &lt;!--      &lt;/a-form-item&gt;--&gt;</span><br><span class="line">      &lt;a-form-item field=&quot;appIcon&quot; label=&quot;应用图标&quot;&gt;</span><br><span class="line">        &lt;PictureUploader</span><br><span class="line">          biz=&quot;app_icon&quot;</span><br><span class="line">          :value=&quot;form.appIcon&quot;</span><br><span class="line">          :onChange=&quot;(url) =&gt; (form.appIcon = url)&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">      &lt;a-form-item field=&quot;appType&quot; label=&quot;应用类型&quot;&gt;</span><br><span class="line">        &lt;a-select</span><br><span class="line">          v-model=&quot;form.appType&quot;</span><br><span class="line">          :style=&quot;&#123; width: &#x27;320px&#x27; &#125;&quot;</span><br><span class="line">          placeholder=&quot;请选择应用类型&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;a-option</span><br><span class="line">            v-for=&quot;(value, key) of APP_TYPE_MAP&quot;</span><br><span class="line">            :value=&quot;Number(key)&quot;</span><br><span class="line">            :label=&quot;value&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/a-select&gt;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">      &lt;a-form-item field=&quot;scoringStrategy&quot; label=&quot;评分策略&quot;&gt;</span><br><span class="line">        &lt;a-select</span><br><span class="line">          v-model=&quot;form.scoringStrategy&quot;</span><br><span class="line">          :style=&quot;&#123; width: &#x27;320px&#x27; &#125;&quot;</span><br><span class="line">          placeholder=&quot;请选择评分策略&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;a-option</span><br><span class="line">            v-for=&quot;(value, key) of APP_SCORING_STRATEGY_MAP&quot;</span><br><span class="line">            :value=&quot;Number(key)&quot;</span><br><span class="line">            :label=&quot;value&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/a-select&gt;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">      &lt;a-form-item&gt;</span><br><span class="line">        &lt;a-button type=&quot;primary&quot; html-type=&quot;submit&quot; style=&quot;width: 120px&quot;&gt;</span><br><span class="line">          提交</span><br><span class="line">        &lt;/a-button&gt;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">    &lt;/a-form&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; defineProps, ref, watchEffect, withDefaults &#125; from &quot;vue&quot;;</span><br><span class="line">import API from &quot;@/api&quot;;</span><br><span class="line">import message from &quot;@arco-design/web-vue/es/message&quot;;</span><br><span class="line">import &#123; useRouter &#125; from &quot;vue-router&quot;;</span><br><span class="line">import &#123;</span><br><span class="line">  addAppUsingPost,</span><br><span class="line">  editAppUsingPost,</span><br><span class="line">  getAppVoByIdUsingGet,</span><br><span class="line">&#125; from &quot;@/api/appController&quot;;</span><br><span class="line">import &#123; APP_SCORING_STRATEGY_MAP, APP_TYPE_MAP &#125; from &quot;@/constant/app&quot;;</span><br><span class="line">import PictureUploader from &quot;@/components/PictureUploader.vue&quot;;</span><br><span class="line"></span><br><span class="line">interface Props &#123;</span><br><span class="line">  id: string;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const props = withDefaults(defineProps&lt;Props&gt;(), &#123;</span><br><span class="line">  id: () =&gt; &#123;</span><br><span class="line">    return &quot;&quot;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const router = useRouter();</span><br><span class="line"></span><br><span class="line">const form = ref(&#123;</span><br><span class="line">  appDesc: &quot;&quot;,</span><br><span class="line">  appIcon: &quot;&quot;,</span><br><span class="line">  appName: &quot;&quot;,</span><br><span class="line">  appType: 0,</span><br><span class="line">  scoringStrategy: 0,</span><br><span class="line">&#125; as API.AppAddRequest);</span><br><span class="line"></span><br><span class="line">const oldApp = ref&lt;API.AppVO&gt;();</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 加载数据</span><br><span class="line"> */</span><br><span class="line">const loadData = async () =&gt; &#123;</span><br><span class="line">  if (!props.id) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">  const res = await getAppVoByIdUsingGet(&#123;</span><br><span class="line">    id: props.id as any,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (res.data.code === 0 &amp;&amp; res.data.data) &#123;</span><br><span class="line">    oldApp.value = res.data.data;</span><br><span class="line">    form.value = res.data.data;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取数据失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 获取旧数据</span><br><span class="line">watchEffect(() =&gt; &#123;</span><br><span class="line">  loadData();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 提交</span><br><span class="line"> */</span><br><span class="line">const handleSubmit = async () =&gt; &#123;</span><br><span class="line">  let res: any;</span><br><span class="line">  // 如果是修改</span><br><span class="line">  if (props.id) &#123;</span><br><span class="line">    res = await editAppUsingPost(&#123;</span><br><span class="line">      id: props.id as any,</span><br><span class="line">      ...form.value,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    // 创建</span><br><span class="line">    res = await addAppUsingPost(form.value);</span><br><span class="line">  &#125;</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    message.success(&quot;操作成功，即将跳转到应用详情页&quot;);</span><br><span class="line">    setTimeout(() =&gt; &#123;</span><br><span class="line">      router.push(`/app/detail/$&#123;props.id || res.data.data&#125;`);</span><br><span class="line">    &#125;, 3000);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;操作失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="创建题目"><a href="#创建题目" class="headerlink" title="创建题目"></a>创建题目</h2><p>页面效果图<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722482321248-9cd9edfa-d7a4-43a3-8cb7-0aacfacba0b8.png" alt="image.png"></p><h3 id="先完成题目名称的创建，不处理选型"><a href="#先完成题目名称的创建，不处理选型" class="headerlink" title="先完成题目名称的创建，不处理选型"></a>先完成题目名称的创建，不处理选型</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> questionContent = <span class="title function_">reactive</span>([] <span class="keyword">as</span> <span class="variable constant_">API</span>.<span class="property">QuestionContentDTO</span>[]);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加题目</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">index</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">addQuestion</span> = (<span class="params">index: <span class="built_in">number</span></span>) =&gt; &#123;</span><br><span class="line">  questionContent.<span class="title function_">splice</span>(index, <span class="number">0</span>, &#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">options</span>: [],</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除题目</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">index</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">deleteQuestion</span> = (<span class="params">index: <span class="built_in">number</span></span>) =&gt; &#123;</span><br><span class="line">  questionContent.<span class="title function_">splice</span>(index, <span class="number">1</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>题目列表表单</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-form-item label=&quot;题目列表&quot; :content-flex=&quot;false&quot; :merge-props=&quot;false&quot;&gt;</span><br><span class="line">  &lt;a-button @click=&quot;addQuestion(questionContent.length)&quot;&gt;</span><br><span class="line">    底部添加题目</span><br><span class="line">  &lt;/a-button&gt;</span><br><span class="line">  &lt;!-- 遍历每道题目 --&gt;</span><br><span class="line">  &lt;div v-for=&quot;(question, index) of questionContent&quot; :key=&quot;index&quot;&gt;</span><br><span class="line">    &lt;!-- 题目信息展示 --&gt;</span><br><span class="line">    &lt;a-space size=&quot;large&quot;&gt;</span><br><span class="line">      &lt;h3&gt;题目 &#123;&#123; index + 1 &#125;&#125;&lt;/h3&gt;</span><br><span class="line">      &lt;a-button size=&quot;mini&quot; @click=&quot;addQuestion(index + 1)&quot;&gt;</span><br><span class="line">        添加题目</span><br><span class="line">      &lt;/a-button&gt;</span><br><span class="line">      &lt;a-button</span><br><span class="line">        size=&quot;mini&quot;</span><br><span class="line">        status=&quot;danger&quot;</span><br><span class="line">        @click=&quot;deleteQuestion(index)&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        删除题目</span><br><span class="line">      &lt;/a-button&gt;</span><br><span class="line">    &lt;/a-space&gt;</span><br><span class="line">    &lt;a-form-item :label=&quot;`题目 $&#123;index + 1&#125; 标题`&quot;&gt;</span><br><span class="line">      &lt;a-input v-model=&quot;question.title&quot; placeholder=&quot;请输入标题&quot; /&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/a-form-item&gt;</span><br></pre></td></tr></table></figure><h3 id="题目选项创建"><a href="#题目选项创建" class="headerlink" title="题目选项创建"></a>题目选项创建</h3><p>定义题目选项的新增和删除函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 添加题目选项</span><br><span class="line"> * @param question</span><br><span class="line"> * @param index</span><br><span class="line"> */</span><br><span class="line">const addQuestionOption = (question: API.QuestionContentDTO, index: number) =&gt; &#123;</span><br><span class="line">  if (!question.options) &#123;</span><br><span class="line">    question.options = [];</span><br><span class="line">  &#125;</span><br><span class="line">  question.options.splice(index, 0, &#123;</span><br><span class="line">    key: &quot;&quot;,</span><br><span class="line">    value: &quot;&quot;,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 删除题目选项</span><br><span class="line"> * @param question</span><br><span class="line"> * @param index</span><br><span class="line"> */</span><br><span class="line">const deleteQuestionOption = (</span><br><span class="line">  question: API.QuestionContentDTO,</span><br><span class="line">  index: number</span><br><span class="line">) =&gt; &#123;</span><br><span class="line">  if (!question.options) &#123;</span><br><span class="line">    question.options = [];</span><br><span class="line">  &#125;</span><br><span class="line">  question.options.splice(index, 1);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>展示题目选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 展示题目选项 --&gt;</span><br><span class="line">&lt;a-space size=&quot;large&quot;&gt;</span><br><span class="line">  &lt;h4&gt;题目 &#123;&#123; index + 1 &#125;&#125; 选项列表&lt;/h4&gt;</span><br><span class="line">  &lt;a-button</span><br><span class="line">    size=&quot;mini&quot;</span><br><span class="line">    @click=&quot;addQuestionOption(question, question.options.length)&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    底部添加选项</span><br><span class="line">  &lt;/a-button&gt;</span><br><span class="line">&lt;/a-space&gt;</span><br><span class="line">&lt;!-- 遍历每个选项 --&gt;</span><br><span class="line">&lt;a-form-item</span><br><span class="line">  v-for=&quot;(option, optionIndex) of question.options&quot;</span><br><span class="line">  :label=&quot;`选项 $&#123;optionIndex + 1&#125;`&quot;</span><br><span class="line">  :key=&quot;optionIndex&quot;</span><br><span class="line">  :content-flex=&quot;false&quot;</span><br><span class="line">  :merge-props=&quot;false&quot;</span><br><span class="line">&gt;</span><br><span class="line">  &lt;a-form-item label=&quot;选项 key&quot;&gt;</span><br><span class="line">    &lt;a-input v-model=&quot;option.key&quot; placeholder=&quot;请输入选项 key&quot; /&gt;</span><br><span class="line">  &lt;/a-form-item&gt;</span><br><span class="line">  &lt;a-form-item label=&quot;选项值&quot;&gt;</span><br><span class="line">    &lt;a-input v-model=&quot;option.value&quot; placeholder=&quot;请输入选项值&quot; /&gt;</span><br><span class="line">  &lt;/a-form-item&gt;</span><br><span class="line">  &lt;a-form-item label=&quot;选项结果&quot;&gt;</span><br><span class="line">    &lt;a-input v-model=&quot;option.result&quot; placeholder=&quot;请输入选项结果&quot; /&gt;</span><br><span class="line">  &lt;/a-form-item&gt;</span><br><span class="line">  &lt;a-form-item label=&quot;选项得分&quot;&gt;</span><br><span class="line">    &lt;a-input-number</span><br><span class="line">      v-model=&quot;option.score&quot;</span><br><span class="line">      placeholder=&quot;请输入选项得分&quot;</span><br><span class="line">    /&gt; </span><br><span class="line">  &lt;/a-form-item&gt;</span><br><span class="line">  &lt;a-space&gt;</span><br><span class="line">    &lt;a-button</span><br><span class="line">      size=&quot;mini&quot;</span><br><span class="line">      @click=&quot;addQuestionOption(question, optionIndex + 1)&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      添加选项</span><br><span class="line">    &lt;/a-button&gt;</span><br><span class="line">    &lt;a-button</span><br><span class="line">      size=&quot;mini&quot;</span><br><span class="line">      status=&quot;danger&quot;</span><br><span class="line">      @click=&quot;deleteQuestionOption(question, optionIndex as number)&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      删除选项</span><br><span class="line">    &lt;/a-button&gt;</span><br><span class="line">  &lt;/a-space&gt;</span><br><span class="line">&lt;/a-form-item&gt;</span><br></pre></td></tr></table></figure><h3 id="支持修改"><a href="#支持修改" class="headerlink" title="支持修改"></a>支持修改</h3><p>通过appId查询老题目数据，将questioncontent转化为ref类型，便于重新赋值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">const questionContent = ref([] as API.QuestionContentDTO[]);</span><br><span class="line"></span><br><span class="line">const oldQuestion = ref&lt;API.QuestionVO&gt;();</span><br><span class="line"></span><br><span class="line">// 加载数据</span><br><span class="line">const loadData = async () =&gt; &#123;</span><br><span class="line">  if (!props.appId) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">  // 获取最新的题目记录</span><br><span class="line">  const res = await listQuestionVoByPageUsingPost(&#123;</span><br><span class="line">    appId: props.appId as any,</span><br><span class="line">    current: 1,</span><br><span class="line">    pageSize: 1,</span><br><span class="line">    sortField: &quot;createTime&quot;,</span><br><span class="line">    sortOrder: &quot;descend&quot;,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (res.data.code === 0 &amp;&amp; res.data.data?.records) &#123;</span><br><span class="line">    oldQuestion.value = res.data.data.records[0];</span><br><span class="line">    if (oldQuestion.value) &#123;</span><br><span class="line">      questionContent.value = oldQuestion.value.questionContent ?? [];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取数据失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 获取旧数据</span><br><span class="line">watchEffect(() =&gt; &#123;</span><br><span class="line">  loadData();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 提交</span><br><span class="line"> */</span><br><span class="line">const handleSubmit = async () =&gt; &#123;</span><br><span class="line">  if (!props.appId || !questionContent.value) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">  let res;</span><br><span class="line">  if (oldQuestion.value?.id) &#123;</span><br><span class="line">    res = await editQuestionUsingPost(&#123;</span><br><span class="line">      id: oldQuestion.value?.id,</span><br><span class="line">      questionContent: questionContent.value,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    res = await addQuestionUsingPost(&#123;</span><br><span class="line">      appId: props.appId as any,</span><br><span class="line">      questionContent: questionContent.value,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    message.success(&quot;创建成功，即将跳转到应用详情页&quot;);</span><br><span class="line">    setTimeout(() =&gt; &#123;</span><br><span class="line">      router.push(`/app/detail/$&#123;props.appId&#125;`);</span><br><span class="line">    &#125;, 3000);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;创建失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="创建评分结果"><a href="#创建评分结果" class="headerlink" title="创建评分结果"></a>创建评分结果</h2><p>页面效果图<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722483062865-4a98f5b8-7d3a-493b-aa4c-015081f58805.png" alt="image.png"></p><h3 id="创建评分表单"><a href="#创建评分表单" class="headerlink" title="创建评分表单"></a>创建评分表单</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;addScoringResultPage&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">&quot;margin-bottom: 32px&quot;</span>&gt;</span>创建评分结果<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">a-form</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">:model</span>=<span class="string">&quot;form&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">:style</span>=<span class="string">&quot;&#123; width: &#x27;480px&#x27; &#125;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">label-align</span>=<span class="string">&quot;left&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">auto-label-width</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      @<span class="attr">submit</span>=<span class="string">&quot;handleSubmit&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    &gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">a-form-item</span> <span class="attr">field</span>=<span class="string">&quot;appName&quot;</span> <span class="attr">label</span>=<span class="string">&quot;应用id&quot;</span> <span class="attr">disabled</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;&#123; appId &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">a-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">a-form-item</span> <span class="attr">field</span>=<span class="string">&quot;resultName&quot;</span> <span class="attr">label</span>=<span class="string">&quot;结果名称&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">a-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.resultName&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入结果名称&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">a-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">a-form-item</span> <span class="attr">field</span>=<span class="string">&quot;resultDesc&quot;</span> <span class="attr">label</span>=<span class="string">&quot;结果描述&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">a-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.resultDesc&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入结果描述&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">a-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">a-form-item</span> <span class="attr">field</span>=<span class="string">&quot;resultPicture&quot;</span> <span class="attr">label</span>=<span class="string">&quot;结果图标&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">a-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-model</span>=<span class="string">&quot;form.resultPicture&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">placeholder</span>=<span class="string">&quot;请输入结果图标地址&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">a-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">a-form-item</span> <span class="attr">field</span>=<span class="string">&quot;resultProp&quot;</span> <span class="attr">label</span>=<span class="string">&quot;结果集&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">a-input-tag</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-model</span>=<span class="string">&quot;form.resultProp&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:style</span>=<span class="string">&quot;&#123; width: &#x27;320px&#x27; &#125;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">placeholder</span>=<span class="string">&quot;输入结果集&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">allow-clear</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">a-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">a-form-item</span> <span class="attr">field</span>=<span class="string">&quot;resultScoreRange&quot;</span> <span class="attr">label</span>=<span class="string">&quot;结果得分范围&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">a-input-number</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-model</span>=<span class="string">&quot;form.resultScoreRange&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">placeholder</span>=<span class="string">&quot;请输入结果得分范围&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">a-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">a-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">a-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">html-type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 120px&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          提交</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">a-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">a-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">a-form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; reactive &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> <span class="variable constant_">API</span> <span class="keyword">from</span> <span class="string">&quot;@/api&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> message <span class="keyword">from</span> <span class="string">&quot;@arco-design/web-vue/es/message&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; addScoringResultUsingPost &#125; <span class="keyword">from</span> <span class="string">&quot;@/api/scoringResultController&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; defineProps, withDefaults &#125; <span class="keyword">from</span> <span class="string">&quot;vue/dist/vue&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">interface <span class="title class_">Props</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">appId</span>: string;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> props = <span class="title function_">withDefaults</span>(defineProps&lt;<span class="title class_">Props</span>&gt;(), &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">appId</span>: <span class="function">() =&gt;</span> <span class="string">&quot;&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> form = <span class="title function_">reactive</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">resultDesc</span>: <span class="string">&quot;&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">resultName</span>: <span class="string">&quot;&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">resultPicture</span>: <span class="string">&quot;&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125; <span class="keyword">as</span> <span class="variable constant_">API</span>.<span class="property">ScoringResultAddRequest</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">/**</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml"> * 提交</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml"> */</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> <span class="title function_">handleSubmit</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">if</span> (!props.<span class="property">appId</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">addScoringResultUsingPost</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">appId</span>: props.<span class="property">appId</span> <span class="keyword">as</span> any,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    ...form,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">if</span> (res.<span class="property">data</span>.<span class="property">code</span> === <span class="number">0</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    message.<span class="title function_">success</span>(<span class="string">&quot;创建成功&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    message.<span class="title function_">error</span>(<span class="string">&quot;创建失败，&quot;</span> + res.<span class="property">data</span>.<span class="property">message</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="评分管理表格"><a href="#评分管理表格" class="headerlink" title="评分管理表格"></a>评分管理表格</h3><p>表格组件代码</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">a-table</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:columns</span>=<span class="string">&quot;columns&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:data</span>=<span class="string">&quot;dataList&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:pagination</span>=<span class="string">&quot;&#123;</span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="language-xml">      showTotal: true,</span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="language-xml">      pageSize: searchParams.pageSize,</span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="language-xml">      current: searchParams.current,</span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="language-xml">      total,</span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="language-xml">    &#125;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    @<span class="attr">page-change</span>=<span class="string">&quot;onPageChange&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">resultPicture</span>=<span class="string">&quot;&#123; record &#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">a-image</span> <span class="attr">width</span>=<span class="string">&quot;64&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;record.resultPicture&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">createTime</span>=<span class="string">&quot;&#123; record &#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;&#123; dayjs(record.createTime).format(&quot;YYYY-MM-DD HH:mm:ss&quot;) &#125;&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">updateTime</span>=<span class="string">&quot;&#123; record &#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;&#123; dayjs(record.updateTime).format(&quot;YYYY-MM-DD HH:mm:ss&quot;) &#125;&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">optional</span>=<span class="string">&quot;&#123; record &#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">a-space</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">a-button</span> @<span class="attr">click</span>=<span class="string">&quot;doUpdate?.(record)&quot;</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">a-button</span> <span class="attr">status</span>=<span class="string">&quot;danger&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;doDelete(record)&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">a-space</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">a-table</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref, watchEffect, withDefaults, defineProps &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123;</span><br><span class="line">  deleteScoringResultUsingPost,</span><br><span class="line">  listScoringResultVoByPageUsingPost,</span><br><span class="line">&#125; from &quot;@/api/scoringResultController&quot;;</span><br><span class="line">import API from &quot;@/api&quot;;</span><br><span class="line">import message from &quot;@arco-design/web-vue/es/message&quot;;</span><br><span class="line">import &#123; dayjs &#125; from &quot;@arco-design/web-vue/es/_utils/date&quot;;</span><br><span class="line"></span><br><span class="line">interface Props &#123;</span><br><span class="line">  appId: string;</span><br><span class="line">  doUpdate: (scoringResult: API.ScoringResultVO) =&gt; void;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const props = withDefaults(defineProps&lt;Props&gt;(), &#123;</span><br><span class="line">  appId: () =&gt; &quot;&quot;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 初始化搜索条件（不应该被修改）</span><br><span class="line">const initSearchParams = &#123;</span><br><span class="line">  current: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">  sortField: &quot;createTime&quot;,</span><br><span class="line">  sortOrder: &quot;descend&quot;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const searchParams = ref&lt;API.ScoringResultQueryRequest&gt;(&#123;</span><br><span class="line">  ...initSearchParams,</span><br><span class="line">&#125;);</span><br><span class="line">const dataList = ref&lt;API.ScoringResultVO[]&gt;([]);</span><br><span class="line">const total = ref&lt;number&gt;(0);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 加载数据</span><br><span class="line"> */</span><br><span class="line">const loadData = async () =&gt; &#123;</span><br><span class="line">  if (!props.appId) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">  const params = &#123;</span><br><span class="line">    ...searchParams.value,</span><br><span class="line">    appId: props.appId as any,</span><br><span class="line">  &#125;;</span><br><span class="line">  const res = await listScoringResultVoByPageUsingPost(params);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    dataList.value = res.data.data?.records || [];</span><br><span class="line">    total.value = res.data.data?.total || 0;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取数据失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 当分页变化时，改变搜索条件，触发数据加载</span><br><span class="line"> * @param page</span><br><span class="line"> */</span><br><span class="line">const onPageChange = (page: number) =&gt; &#123;</span><br><span class="line">  searchParams.value = &#123;</span><br><span class="line">    ...searchParams.value,</span><br><span class="line">    current: page,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 删除</span><br><span class="line"> * @param record</span><br><span class="line"> */</span><br><span class="line">const doDelete = async (record: API.ScoringResult) =&gt; &#123;</span><br><span class="line">  if (!record.id) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  const res = await deleteScoringResultUsingPost(&#123;</span><br><span class="line">    id: record.id,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    loadData();</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;删除失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 监听 searchParams 变量，改变时触发数据的重新加载</span><br><span class="line"> */</span><br><span class="line">watchEffect(() =&gt; &#123;</span><br><span class="line">  loadData();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 表格列配置</span><br><span class="line">const columns = [</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;id&quot;,</span><br><span class="line">    dataIndex: &quot;id&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;名称&quot;,</span><br><span class="line">    dataIndex: &quot;resultName&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;描述&quot;,</span><br><span class="line">    dataIndex: &quot;resultDesc&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;图片&quot;,</span><br><span class="line">    dataIndex: &quot;resultPicture&quot;,</span><br><span class="line">    slotName: &quot;resultPicture&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;结果属性&quot;,</span><br><span class="line">    dataIndex: &quot;resultProp&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;评分范围&quot;,</span><br><span class="line">    dataIndex: &quot;resultScoreRange&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;应用 id&quot;,</span><br><span class="line">    dataIndex: &quot;appId&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;用户 id&quot;,</span><br><span class="line">    dataIndex: &quot;userId&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;创建时间&quot;,</span><br><span class="line">    dataIndex: &quot;createTime&quot;,</span><br><span class="line">    slotName: &quot;createTime&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;更新时间&quot;,</span><br><span class="line">    dataIndex: &quot;updateTime&quot;,</span><br><span class="line">    slotName: &quot;updateTime&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;操作&quot;,</span><br><span class="line">    slotName: &quot;optional&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>支持修改<br>评分页面，引入表格组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;ScoringResultTable :appId=&quot;appId&quot; :doUpdate=&quot;doUpdate&quot; /&gt;</span><br></pre></td></tr></table></figure><p>编写修改评分的逻辑</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用于判断是否更新</span></span><br><span class="line"><span class="keyword">let</span> updateId = <span class="title function_">ref</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 修改</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">scoringResult</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">doUpdate</span> = (<span class="params">scoringResult: API.ScoringResultVO</span>) =&gt; &#123;</span><br><span class="line">  updateId.<span class="property">value</span> = scoringResult.<span class="property">id</span>;</span><br><span class="line">  form.<span class="property">resultDesc</span> = scoringResult.<span class="property">resultDesc</span>;</span><br><span class="line">  form.<span class="property">resultName</span> = scoringResult.<span class="property">resultName</span>;</span><br><span class="line">  form.<span class="property">resultPicture</span> = scoringResult.<span class="property">resultPicture</span>;</span><br><span class="line">  form.<span class="property">resultProp</span> = scoringResult.<span class="property">resultProp</span>;</span><br><span class="line">  form.<span class="property">resultScoreRange</span> = scoringResult.<span class="property">resultScoreRange</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 提交</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleSubmit</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (!props.<span class="property">appId</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> res;</span><br><span class="line">  <span class="comment">// 区分创建和修改</span></span><br><span class="line">  <span class="keyword">if</span> (updateId.<span class="property">value</span>) &#123;</span><br><span class="line">    res = <span class="keyword">await</span> <span class="title function_">updateScoringResultUsingPost</span>(&#123;</span><br><span class="line">      <span class="attr">id</span>: updateId.<span class="property">value</span>,</span><br><span class="line">      ...form,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res = <span class="keyword">await</span> <span class="title function_">addScoringResultUsingPost</span>(&#123;</span><br><span class="line">      <span class="attr">appId</span>: props.<span class="property">appId</span> <span class="keyword">as</span> <span class="built_in">any</span>,</span><br><span class="line">      ...form,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (res.<span class="property">data</span>.<span class="property">code</span> === <span class="number">0</span>) &#123;</span><br><span class="line">    message.<span class="title function_">success</span>(<span class="string">&quot;操作成功&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    message.<span class="title function_">error</span>(<span class="string">&quot;操作失败，&quot;</span> + res.<span class="property">data</span>.<span class="property">message</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (tableRef.<span class="property">value</span>) &#123;</span><br><span class="line">    updateId.<span class="property">value</span> = <span class="literal">undefined</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>当新增或者修改数据时，表格需要刷新</p><ol><li><p>子组件暴露函数</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">defineExpose</span>(&#123;</span><br><span class="line">  loadData,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>父组件通过ref来调用子组件的函数，可以实现新建或者修改后刷新</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">ScoringResultTable</span> :appId=<span class="string">&quot;appId&quot;</span> :doUpdate=<span class="string">&quot;doUpdate&quot;</span> ref=<span class="string">&quot;tableRef&quot;</span> /&gt;</span><br><span class="line"><span class="comment">// 声明 ref</span></span><br><span class="line"><span class="keyword">const</span> tableRef = <span class="title function_">ref</span>();</span><br><span class="line"><span class="comment">// 调用</span></span><br><span class="line"><span class="keyword">if</span> (tableRef.<span class="property">value</span>) &#123;</span><br><span class="line">  tableRef.<span class="property">value</span>.<span class="title function_">loadData</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;addScoringResultPage&quot;&gt;</span><br><span class="line">    &lt;h2 style=&quot;margin-bottom: 32px&quot;&gt;设置评分&lt;/h2&gt;</span><br><span class="line">    &lt;a-form</span><br><span class="line">      :model=&quot;form&quot;</span><br><span class="line">      :style=&quot;&#123; width: &#x27;480px&#x27; &#125;&quot;</span><br><span class="line">      label-align=&quot;left&quot;</span><br><span class="line">      auto-label-width</span><br><span class="line">      @submit=&quot;handleSubmit&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;a-form-item label=&quot;应用 id&quot;&gt;</span><br><span class="line">        &#123;&#123; appId &#125;&#125;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">      &lt;a-form-item v-if=&quot;updateId&quot; label=&quot;修改评分 id&quot;&gt;</span><br><span class="line">        &#123;&#123; updateId &#125;&#125;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">      &lt;a-form-item field=&quot;resultName&quot; label=&quot;结果名称&quot;&gt;</span><br><span class="line">        &lt;a-input v-model=&quot;form.resultName&quot; placeholder=&quot;请输入结果名称&quot; /&gt;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">      &lt;a-form-item field=&quot;resultDesc&quot; label=&quot;结果描述&quot;&gt;</span><br><span class="line">        &lt;a-input v-model=&quot;form.resultDesc&quot; placeholder=&quot;请输入结果描述&quot; /&gt;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">      &lt;a-form-item field=&quot;resultPicture&quot; label=&quot;结果图标&quot;&gt;</span><br><span class="line">        &lt;a-input</span><br><span class="line">          v-model=&quot;form.resultPicture&quot;</span><br><span class="line">          placeholder=&quot;请输入结果图标地址&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">      &lt;a-form-item field=&quot;resultProp&quot; label=&quot;结果集&quot;&gt;</span><br><span class="line">        &lt;a-input-tag</span><br><span class="line">          v-model=&quot;form.resultProp&quot;</span><br><span class="line">          :style=&quot;&#123; width: &#x27;320px&#x27; &#125;&quot;</span><br><span class="line">          placeholder=&quot;请输出结果集，按回车确认&quot;</span><br><span class="line">          allow-clear</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">      &lt;a-form-item field=&quot;resultScoreRange&quot; label=&quot;结果得分范围&quot;&gt;</span><br><span class="line">        &lt;a-input-number</span><br><span class="line">          v-model=&quot;form.resultScoreRange&quot;</span><br><span class="line">          placeholder=&quot;请输入结果得分范围&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">      &lt;a-form-item&gt;</span><br><span class="line">        &lt;a-button type=&quot;primary&quot; html-type=&quot;submit&quot; style=&quot;width: 120px&quot;&gt;</span><br><span class="line">          提交</span><br><span class="line">        &lt;/a-button&gt;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">    &lt;/a-form&gt;</span><br><span class="line">    &lt;h2 style=&quot;margin-bottom: 32px&quot;&gt;评分管理&lt;/h2&gt;</span><br><span class="line">    &lt;ScoringResultTable :appId=&quot;appId&quot; :doUpdate=&quot;doUpdate&quot; ref=&quot;tableRef&quot; /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; defineProps, ref, withDefaults &#125; from &quot;vue&quot;;</span><br><span class="line">import API from &quot;@/api&quot;;</span><br><span class="line">import &#123; useRouter &#125; from &quot;vue-router&quot;;</span><br><span class="line">import ScoringResultTable from &quot;@/views/add/components/ScoringResultTable.vue&quot;;</span><br><span class="line">import &#123;</span><br><span class="line">  addScoringResultUsingPost,</span><br><span class="line">  editScoringResultUsingPost,</span><br><span class="line">&#125; from &quot;@/api/scoringResultController&quot;;</span><br><span class="line">import message from &quot;@arco-design/web-vue/es/message&quot;;</span><br><span class="line"></span><br><span class="line">interface Props &#123;</span><br><span class="line">  appId: string;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const props = withDefaults(defineProps&lt;Props&gt;(), &#123;</span><br><span class="line">  appId: () =&gt; &#123;</span><br><span class="line">    return &quot;&quot;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const router = useRouter();</span><br><span class="line">const tableRef = ref();</span><br><span class="line"></span><br><span class="line">// 表单参数</span><br><span class="line">const form = ref(&#123;</span><br><span class="line">  resultDesc: &quot;&quot;,</span><br><span class="line">  resultName: &quot;&quot;,</span><br><span class="line">  resultPicture: &quot;&quot;,</span><br><span class="line">&#125; as API.ScoringResultAddRequest);</span><br><span class="line"></span><br><span class="line">const updateId = ref&lt;any&gt;();</span><br><span class="line"></span><br><span class="line">const doUpdate = (scoringResult: API.ScoringResultVO) =&gt; &#123;</span><br><span class="line">  updateId.value = scoringResult.id;</span><br><span class="line">  form.value = scoringResult;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 提交</span><br><span class="line"> */</span><br><span class="line">const handleSubmit = async () =&gt; &#123;</span><br><span class="line">  if (!props.appId) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">  let res: any;</span><br><span class="line">  // 如果是修改</span><br><span class="line">  if (updateId.value) &#123;</span><br><span class="line">    res = await editScoringResultUsingPost(&#123;</span><br><span class="line">      id: updateId.value as any,</span><br><span class="line">      ...form.value,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    // 创建</span><br><span class="line">    res = await addScoringResultUsingPost(&#123;</span><br><span class="line">      appId: props.appId as any,</span><br><span class="line">      ...form.value,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    message.success(&quot;操作成功&quot;);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;操作失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">  if (tableRef.value) &#123;</span><br><span class="line">    tableRef.value.loadData();</span><br><span class="line">    updateId.value = undefined;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;a-form</span><br><span class="line">    :model=&quot;formSearchParams&quot;</span><br><span class="line">    :style=&quot;&#123; marginBottom: &#x27;20px&#x27; &#125;&quot;</span><br><span class="line">    layout=&quot;inline&quot;</span><br><span class="line">    @submit=&quot;doSearch&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;a-form-item field=&quot;resultName&quot; label=&quot;结果名称&quot;&gt;</span><br><span class="line">      &lt;a-input</span><br><span class="line">        v-model=&quot;formSearchParams.resultName&quot;</span><br><span class="line">        placeholder=&quot;请输入结果名称&quot;</span><br><span class="line">        allow-clear</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">    &lt;a-form-item field=&quot;resultDesc&quot; label=&quot;结果描述&quot;&gt;</span><br><span class="line">      &lt;a-input</span><br><span class="line">        v-model=&quot;formSearchParams.resultDesc&quot;</span><br><span class="line">        placeholder=&quot;请输入结果描述&quot;</span><br><span class="line">        allow-clear</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">    &lt;a-form-item&gt;</span><br><span class="line">      &lt;a-button type=&quot;primary&quot; html-type=&quot;submit&quot; style=&quot;width: 100px&quot;&gt;</span><br><span class="line">        搜索</span><br><span class="line">      &lt;/a-button&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">  &lt;/a-form&gt;</span><br><span class="line">  &lt;a-table</span><br><span class="line">    :columns=&quot;columns&quot;</span><br><span class="line">    :data=&quot;dataList&quot;</span><br><span class="line">    :pagination=&quot;&#123;</span><br><span class="line">      showTotal: true,</span><br><span class="line">      pageSize: searchParams.pageSize,</span><br><span class="line">      current: searchParams.current,</span><br><span class="line">      total,</span><br><span class="line">    &#125;&quot;</span><br><span class="line">    @page-change=&quot;onPageChange&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;template #resultPicture=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &lt;a-image width=&quot;64&quot; :src=&quot;record.resultPicture&quot; /&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #createTime=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123; dayjs(record.createTime).format(&quot;YYYY-MM-DD HH:mm:ss&quot;) &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #updateTime=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123; dayjs(record.updateTime).format(&quot;YYYY-MM-DD HH:mm:ss&quot;) &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #optional=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &lt;a-space&gt;</span><br><span class="line">        &lt;a-button status=&quot;success&quot; @click=&quot;doUpdate?.(record)&quot;&gt;修改&lt;/a-button&gt;</span><br><span class="line">        &lt;a-button status=&quot;danger&quot; @click=&quot;doDelete(record)&quot;&gt;删除&lt;/a-button&gt;</span><br><span class="line">      &lt;/a-space&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/a-table&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; defineExpose, defineProps, ref, watchEffect, withDefaults &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123;</span><br><span class="line">  deleteScoringResultUsingPost,</span><br><span class="line">  listScoringResultVoByPageUsingPost,</span><br><span class="line">&#125; from &quot;@/api/scoringResultController&quot;;</span><br><span class="line">import API from &quot;@/api&quot;;</span><br><span class="line">import message from &quot;@arco-design/web-vue/es/message&quot;;</span><br><span class="line">import &#123; dayjs &#125; from &quot;@arco-design/web-vue/es/_utils/date&quot;;</span><br><span class="line"></span><br><span class="line">interface Props &#123;</span><br><span class="line">  appId: string;</span><br><span class="line">  doUpdate: (scoringResult: API.ScoringResultVO) =&gt; void;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const props = withDefaults(defineProps&lt;Props&gt;(), &#123;</span><br><span class="line">  appId: () =&gt; &#123;</span><br><span class="line">    return &quot;&quot;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const formSearchParams = ref&lt;API.ScoringResultQueryRequest&gt;(&#123;&#125;);</span><br><span class="line"></span><br><span class="line">// 初始化搜索条件（不应该被修改）</span><br><span class="line">const initSearchParams = &#123;</span><br><span class="line">  current: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">  sortField: &quot;createTime&quot;,</span><br><span class="line">  sortOrder: &quot;descend&quot;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const searchParams = ref&lt;API.ScoringResultQueryRequest&gt;(&#123;</span><br><span class="line">  ...initSearchParams,</span><br><span class="line">&#125;);</span><br><span class="line">const dataList = ref&lt;API.ScoringResultVO[]&gt;([]);</span><br><span class="line">const total = ref&lt;number&gt;(0);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 加载数据</span><br><span class="line"> */</span><br><span class="line">const loadData = async () =&gt; &#123;</span><br><span class="line">  if (!props.appId) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">  const params = &#123;</span><br><span class="line">    appId: props.appId as any,</span><br><span class="line">    ...searchParams.value,</span><br><span class="line">  &#125;;</span><br><span class="line">  const res = await listScoringResultVoByPageUsingPost(params);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    dataList.value = res.data.data?.records || [];</span><br><span class="line">    total.value = res.data.data?.total || 0;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取数据失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 暴露函数给父组件</span><br><span class="line">defineExpose(&#123;</span><br><span class="line">  loadData,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 执行搜索</span><br><span class="line"> */</span><br><span class="line">const doSearch = () =&gt; &#123;</span><br><span class="line">  searchParams.value = &#123;</span><br><span class="line">    ...initSearchParams,</span><br><span class="line">    ...formSearchParams.value,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 当分页变化时，改变搜索条件，触发数据加载</span><br><span class="line"> * @param page</span><br><span class="line"> */</span><br><span class="line">const onPageChange = (page: number) =&gt; &#123;</span><br><span class="line">  searchParams.value = &#123;</span><br><span class="line">    ...searchParams.value,</span><br><span class="line">    current: page,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 删除</span><br><span class="line"> * @param record</span><br><span class="line"> */</span><br><span class="line">const doDelete = async (record: API.ScoringResult) =&gt; &#123;</span><br><span class="line">  if (!record.id) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  const res = await deleteScoringResultUsingPost(&#123;</span><br><span class="line">    id: record.id,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    loadData();</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;删除失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 监听 searchParams 变量，改变时触发数据的重新加载</span><br><span class="line"> */</span><br><span class="line">watchEffect(() =&gt; &#123;</span><br><span class="line">  loadData();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 表格列配置</span><br><span class="line">const columns = [</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;id&quot;,</span><br><span class="line">    dataIndex: &quot;id&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;名称&quot;,</span><br><span class="line">    dataIndex: &quot;resultName&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;描述&quot;,</span><br><span class="line">    dataIndex: &quot;resultDesc&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;图片&quot;,</span><br><span class="line">    dataIndex: &quot;resultPicture&quot;,</span><br><span class="line">    slotName: &quot;resultPicture&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;结果属性&quot;,</span><br><span class="line">    dataIndex: &quot;resultProp&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;评分范围&quot;,</span><br><span class="line">    dataIndex: &quot;resultScoreRange&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;创建时间&quot;,</span><br><span class="line">    dataIndex: &quot;createTime&quot;,</span><br><span class="line">    slotName: &quot;createTime&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;更新时间&quot;,</span><br><span class="line">    dataIndex: &quot;updateTime&quot;,</span><br><span class="line">    slotName: &quot;updateTime&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;操作&quot;,</span><br><span class="line">    slotName: &quot;optional&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h1 id="答题模块"><a href="#答题模块" class="headerlink" title="答题模块"></a>答题模块</h1><p>路由中需要添加配置，仅登录用户才可以答题</p><h2 id="应用答题页"><a href="#应用答题页" class="headerlink" title="应用答题页"></a>应用答题页</h2><p>页面效果<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722484349411-8eb2c833-9738-4e45-ad38-9ac9b931994b.png" alt="image.png"><br>应用详情页需要添加到答题页面的路由跳转</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-button <span class="keyword">type</span>=<span class="string">&quot;primary&quot;</span> :href=<span class="string">&quot;`/answer/do/$&#123;props.id&#125;`&quot;</span>&gt;</span><br><span class="line">  开始答题</span><br><span class="line">&lt;/a-button&gt;</span><br></pre></td></tr></table></figure><p>需要先加载应用和题目信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">const loadData = async () =&gt; &#123;</span><br><span class="line">  if (!props.appId) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">  let res: any = await getAppVoByIdUsingGet(&#123;</span><br><span class="line">    id: props.appId as any,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (res.data.code === 0 &amp;&amp; res.data.data) &#123;</span><br><span class="line">    app.value = res.data.data;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取应用失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">  res = await listQuestionVoByPageUsingPost(&#123;</span><br><span class="line">    appId: props.appId as any,</span><br><span class="line">    current: 1,</span><br><span class="line">    pageSize: 1,</span><br><span class="line">    sortField: &quot;createTime&quot;,</span><br><span class="line">    sortOrder: &quot;descend&quot;,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (res.data.code === 0 &amp;&amp; res.data.data?.records) &#123;</span><br><span class="line">    questionContent.value = res.data.data.records[0].questionContent;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取题目失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>然后定义变量，包括当前题目、当前答案、历史答案、当前题目选项等</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// 当前题目序号（从 1 开始）</span><br><span class="line">const current = ref(1);</span><br><span class="line">// 当前题目</span><br><span class="line">const currentQuestion = ref&lt;API.QuestionContentDTO&gt;(&#123;&#125;);</span><br><span class="line">const questionOptions = computed(() =&gt; &#123;</span><br><span class="line">  return currentQuestion.value.options</span><br><span class="line">    ? currentQuestion.value.options.map((option) =&gt; (&#123;</span><br><span class="line">        label: `$&#123;option.key&#125;. $&#123;option.value&#125;`,</span><br><span class="line">        value: option.key,</span><br><span class="line">      &#125;))</span><br><span class="line">    : [];</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 当前答案</span><br><span class="line">const currentAnswer = ref&lt;string&gt;();</span><br><span class="line">// 回答列表</span><br><span class="line">const answerList = reactive&lt;string[]&gt;([]);</span><br></pre></td></tr></table></figure><p>questionOption计算时必须使用computed语法，不然题目变更，不会重新计算<br>使用radio组件展示选项，点击选项时记录回答</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;a-radio-group</span><br><span class="line">    v-model=&quot;currentAnswer&quot;</span><br><span class="line">    direction=&quot;vertical&quot;</span><br><span class="line">    :options=&quot;questionOptions&quot;</span><br><span class="line">    @change=&quot;onRadioChange&quot;</span><br><span class="line">    size=&quot;large&quot;</span><br><span class="line">  /&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">const onRadioChange = (value: string) =&gt; &#123;</span><br><span class="line">  currentAnswer.value = value;</span><br><span class="line">  // 记录回答</span><br><span class="line">  answerList[current.value - 1] = value;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>题目操作栏</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;margin-top: 24px&quot;&gt;</span><br><span class="line">  &lt;a-space size=&quot;large&quot;&gt;</span><br><span class="line">    &lt;a-button</span><br><span class="line">      type=&quot;primary&quot;</span><br><span class="line">      circle</span><br><span class="line">      v-if=&quot;current &lt; questionContent.length&quot;</span><br><span class="line">      :disabled=&quot;!currentAnswer&quot;</span><br><span class="line">      @click=&quot;current += 1&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      下一题</span><br><span class="line">    &lt;/a-button&gt;</span><br><span class="line">    &lt;a-button</span><br><span class="line">      type=&quot;primary&quot;</span><br><span class="line">      v-if=&quot;current === questionContent.length&quot;</span><br><span class="line">      circle</span><br><span class="line">      :disabled=&quot;!currentAnswer&quot;</span><br><span class="line">      @click=&quot;doSubmit&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      查看结果</span><br><span class="line">    &lt;/a-button&gt;</span><br><span class="line">    &lt;a-button v-if=&quot;current &gt; 1&quot; circle @click=&quot;current -= 1&quot;&gt;</span><br><span class="line">      上一题</span><br><span class="line">    &lt;/a-button&gt;</span><br><span class="line">  &lt;/a-space&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>提交回答并跳转到结果页</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">const doSubmit = async () =&gt; &#123;</span><br><span class="line">  const res = await addUserAnswerUsingPost(&#123;</span><br><span class="line">    appId: props.appId as any,</span><br><span class="line">    choices: answerList,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  if (res.data.code === 0 &amp;&amp; res.data.data) &#123;</span><br><span class="line">    router.push(`/answer/result/$&#123;res.data.data&#125;`);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;提交答案失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>最终代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;doAnswerPage&quot;&gt;</span><br><span class="line">    &lt;a-card&gt;</span><br><span class="line">      &lt;h1&gt;&#123;&#123; app.appName &#125;&#125;&lt;/h1&gt;</span><br><span class="line">      &lt;p&gt;&#123;&#123; app.appDesc &#125;&#125;&lt;/p&gt;</span><br><span class="line">      &lt;h2 style=&quot;margin-bottom: 16px&quot;&gt;</span><br><span class="line">        &#123;&#123; current &#125;&#125;、&#123;&#123; currentQuestion?.title &#125;&#125;</span><br><span class="line">      &lt;/h2&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;a-radio-group</span><br><span class="line">          direction=&quot;vertical&quot;</span><br><span class="line">          v-model=&quot;currentAnswer&quot;</span><br><span class="line">          :options=&quot;questionOptions&quot;</span><br><span class="line">          @change=&quot;doRadioChange&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div style=&quot;margin-top: 24px&quot;&gt;</span><br><span class="line">        &lt;a-space size=&quot;large&quot;&gt;</span><br><span class="line">          &lt;a-button</span><br><span class="line">            type=&quot;primary&quot;</span><br><span class="line">            circle</span><br><span class="line">            v-if=&quot;current &lt; questionContent.length&quot;</span><br><span class="line">            :disabled=&quot;!currentAnswer&quot;</span><br><span class="line">            @click=&quot;current += 1&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            下一题</span><br><span class="line">          &lt;/a-button&gt;</span><br><span class="line">          &lt;a-button</span><br><span class="line">            type=&quot;primary&quot;</span><br><span class="line">            v-if=&quot;current === questionContent.length&quot;</span><br><span class="line">            :loading=&quot;submitting&quot;</span><br><span class="line">            circle</span><br><span class="line">            :disabled=&quot;!currentAnswer&quot;</span><br><span class="line">            @click=&quot;doSubmit&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            &#123;&#123; submitting ? &quot;评分中&quot; : &quot;查看结果&quot; &#125;&#125;</span><br><span class="line">          &lt;/a-button&gt;</span><br><span class="line">          &lt;a-button v-if=&quot;current &gt; 1&quot; circle @click=&quot;current -= 1&quot;&gt;</span><br><span class="line">            上一题</span><br><span class="line">          &lt;/a-button&gt;</span><br><span class="line">        &lt;/a-space&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/a-card&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123;</span><br><span class="line">  computed,</span><br><span class="line">  defineProps,</span><br><span class="line">  reactive,</span><br><span class="line">  ref,</span><br><span class="line">  watchEffect,</span><br><span class="line">  withDefaults,</span><br><span class="line">&#125; from &quot;vue&quot;;</span><br><span class="line">import API from &quot;@/api&quot;;</span><br><span class="line">import &#123; useRouter &#125; from &quot;vue-router&quot;;</span><br><span class="line">import &#123; listQuestionVoByPageUsingPost &#125; from &quot;@/api/questionController&quot;;</span><br><span class="line">import message from &quot;@arco-design/web-vue/es/message&quot;;</span><br><span class="line">import &#123; getAppVoByIdUsingGet &#125; from &quot;@/api/appController&quot;;</span><br><span class="line">import &#123;</span><br><span class="line">  addUserAnswerUsingPost,</span><br><span class="line">  generateUserAnswerIdUsingGet,</span><br><span class="line">&#125; from &quot;@/api/userAnswerController&quot;;</span><br><span class="line"></span><br><span class="line">interface Props &#123;</span><br><span class="line">  appId: string;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const props = withDefaults(defineProps&lt;Props&gt;(), &#123;</span><br><span class="line">  appId: () =&gt; &#123;</span><br><span class="line">    return &quot;&quot;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const router = useRouter();</span><br><span class="line"></span><br><span class="line">const app = ref&lt;API.AppVO&gt;(&#123;&#125;);</span><br><span class="line">// 题目内容结构（理解为题目列表）</span><br><span class="line">const questionContent = ref&lt;API.QuestionContentDTO[]&gt;([]);</span><br><span class="line"></span><br><span class="line">// 当前题目的序号（从 1 开始）</span><br><span class="line">const current = ref(1);</span><br><span class="line">// 当前题目</span><br><span class="line">const currentQuestion = ref&lt;API.QuestionContentDTO&gt;(&#123;&#125;);</span><br><span class="line">// 当前题目选项</span><br><span class="line">const questionOptions = computed(() =&gt; &#123;</span><br><span class="line">  return currentQuestion.value?.options</span><br><span class="line">    ? currentQuestion.value.options.map((option) =&gt; &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">          label: `$&#123;option.key&#125;. $&#123;option.value&#125;`,</span><br><span class="line">          value: option.key,</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;)</span><br><span class="line">    : [];</span><br><span class="line">&#125;);</span><br><span class="line">// 当前答案</span><br><span class="line">const currentAnswer = ref&lt;string&gt;();</span><br><span class="line">// 回答列表</span><br><span class="line">const answerList = reactive&lt;string[]&gt;([]);</span><br><span class="line">// 是否正在提交结果</span><br><span class="line">const submitting = ref(false);</span><br><span class="line"></span><br><span class="line">//唯一id</span><br><span class="line">const id = ref&lt;number&gt;();</span><br><span class="line">//获取唯一id</span><br><span class="line">const generateId = async () =&gt; &#123;</span><br><span class="line">  const res = await generateUserAnswerIdUsingGet();</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    id.value = res.data.data;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取唯一id失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 进入页面时，加载唯一id</span><br><span class="line"> */</span><br><span class="line">watchEffect(() =&gt; &#123;</span><br><span class="line">  generateId();</span><br><span class="line">&#125;);</span><br><span class="line">/**</span><br><span class="line"> * 加载数据</span><br><span class="line"> */</span><br><span class="line">const loadData = async () =&gt; &#123;</span><br><span class="line">  if (!props.appId) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">  // 获取 app</span><br><span class="line">  let res: any = await getAppVoByIdUsingGet(&#123;</span><br><span class="line">    id: props.appId as any,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    app.value = res.data.data as any;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取应用失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">  // 获取题目</span><br><span class="line">  res = await listQuestionVoByPageUsingPost(&#123;</span><br><span class="line">    appId: props.appId as any,</span><br><span class="line">    current: 1,</span><br><span class="line">    pageSize: 1,</span><br><span class="line">    sortField: &quot;createTime&quot;,</span><br><span class="line">    sortOrder: &quot;descend&quot;,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (res.data.code === 0 &amp;&amp; res.data.data?.records) &#123;</span><br><span class="line">    questionContent.value = res.data.data.records[0].questionContent;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取题目失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 获取旧数据</span><br><span class="line">watchEffect(() =&gt; &#123;</span><br><span class="line">  loadData();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 改变 current 题号后，会自动更新当前题目和答案</span><br><span class="line">watchEffect(() =&gt; &#123;</span><br><span class="line">  currentQuestion.value = questionContent.value[current.value - 1];</span><br><span class="line">  currentAnswer.value = answerList[current.value - 1];</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 选中选项后，保存选项记录</span><br><span class="line"> * @param value</span><br><span class="line"> */</span><br><span class="line">const doRadioChange = (value: string) =&gt; &#123;</span><br><span class="line">  answerList[current.value - 1] = value;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 提交</span><br><span class="line"> */</span><br><span class="line">const doSubmit = async () =&gt; &#123;</span><br><span class="line">  if (!props.appId || !answerList) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">  submitting.value = true;</span><br><span class="line">  const res = await addUserAnswerUsingPost(&#123;</span><br><span class="line">    appId: props.appId as any,</span><br><span class="line">    choices: answerList,</span><br><span class="line">    id: id.value,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (res.data.code === 0 &amp;&amp; res.data.data) &#123;</span><br><span class="line">    router.push(`/answer/result/$&#123;res.data.data&#125;`);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;提交答案失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">  submitting.value = false;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="答题结果页"><a href="#答题结果页" class="headerlink" title="答题结果页"></a>答题结果页</h2><p>页面展示效果<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722501187544-1a1b2deb-5d74-4a63-9b6a-5404e1f40b84.png" alt="image.png"><br>代码如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;answerResultPage&quot;&gt;</span><br><span class="line">    &lt;a-card&gt;</span><br><span class="line">      &lt;a-row style=&quot;margin-bottom: 16px&quot;&gt;</span><br><span class="line">        &lt;a-col flex=&quot;auto&quot; class=&quot;content-wrapper&quot;&gt;</span><br><span class="line">          &lt;h2&gt;&#123;&#123; data.resultName &#125;&#125;&lt;/h2&gt;</span><br><span class="line">          &lt;p&gt;结果描述：&#123;&#123; data.resultDesc &#125;&#125;&lt;/p&gt;</span><br><span class="line">          &lt;p&gt;结果 id：&#123;&#123; data.resultId &#125;&#125;&lt;/p&gt;</span><br><span class="line">          &lt;p&gt;结果得分：&#123;&#123; data.resultScore &#125;&#125;&lt;/p&gt;</span><br><span class="line">          &lt;p&gt;我的答案：&#123;&#123; data.choices &#125;&#125;&lt;/p&gt;</span><br><span class="line">          &lt;p&gt;应用 id：&#123;&#123; data.appId &#125;&#125;&lt;/p&gt;</span><br><span class="line">          &lt;p&gt;应用类型：&#123;&#123; APP_TYPE_MAP[data.appType] &#125;&#125;&lt;/p&gt;</span><br><span class="line">          &lt;p&gt;评分策略：&#123;&#123; APP_SCORING_STRATEGY_MAP[data.scoringStrategy] &#125;&#125;&lt;/p&gt;</span><br><span class="line">          &lt;p&gt;</span><br><span class="line">            &lt;a-space&gt;</span><br><span class="line">              答题人：</span><br><span class="line">              &lt;div :style=&quot;&#123; display: &#x27;flex&#x27;, alignItems: &#x27;center&#x27; &#125;&quot;&gt;</span><br><span class="line">                &lt;a-avatar</span><br><span class="line">                  :size=&quot;24&quot;</span><br><span class="line">                  :image-url=&quot;data.user?.userAvatar&quot;</span><br><span class="line">                  :style=&quot;&#123; marginRight: &#x27;8px&#x27; &#125;&quot;</span><br><span class="line">                /&gt;</span><br><span class="line">                &lt;a-typography-text</span><br><span class="line">                  &gt;&#123;&#123; data.user?.userName ?? &quot;无名&quot; &#125;&#125;</span><br><span class="line">                &lt;/a-typography-text&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/a-space&gt;</span><br><span class="line">          &lt;/p&gt;</span><br><span class="line">          &lt;p&gt;</span><br><span class="line">            答题时间：&#123;&#123; dayjs(data.createTime).format(&quot;YYYY-MM-DD HH:mm:ss&quot;) &#125;&#125;</span><br><span class="line">          &lt;/p&gt;</span><br><span class="line">          &lt;a-space size=&quot;medium&quot;&gt;</span><br><span class="line">            &lt;a-button type=&quot;primary&quot; :href=&quot;`/answer/do/$&#123;data.appId&#125;`&quot;</span><br><span class="line">              &gt;再答一次</span><br><span class="line">            &lt;/a-button&gt;</span><br><span class="line">          &lt;/a-space&gt;</span><br><span class="line">        &lt;/a-col&gt;</span><br><span class="line">        &lt;a-col flex=&quot;320px&quot;&gt;</span><br><span class="line">          &lt;a-image width=&quot;100%&quot; :src=&quot;data.userAnswerIcon&quot; /&gt;</span><br><span class="line">        &lt;/a-col&gt;</span><br><span class="line">      &lt;/a-row&gt;</span><br><span class="line">    &lt;/a-card&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; defineProps, ref, watchEffect, withDefaults &#125; from &quot;vue&quot;;</span><br><span class="line">import API from &quot;@/api&quot;;</span><br><span class="line">import &#123; getUserAnswerVoByIdUsingGet &#125; from &quot;@/api/userAnswerController&quot;;</span><br><span class="line">import message from &quot;@arco-design/web-vue/es/message&quot;;</span><br><span class="line">import &#123; useRouter &#125; from &quot;vue-router&quot;;</span><br><span class="line">import &#123; dayjs &#125; from &quot;@arco-design/web-vue/es/_utils/date&quot;;</span><br><span class="line">import &#123; APP_SCORING_STRATEGY_MAP, APP_TYPE_MAP &#125; from &quot;../../constant/app&quot;;</span><br><span class="line"></span><br><span class="line">interface Props &#123;</span><br><span class="line">  id: string;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const props = withDefaults(defineProps&lt;Props&gt;(), &#123;</span><br><span class="line">  id: () =&gt; &#123;</span><br><span class="line">    return &quot;&quot;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const router = useRouter();</span><br><span class="line"></span><br><span class="line">const data = ref&lt;API.UserAnswerVO&gt;(&#123;&#125;);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 加载数据</span><br><span class="line"> */</span><br><span class="line">const loadData = async () =&gt; &#123;</span><br><span class="line">  if (!props.id) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">  const res = await getUserAnswerVoByIdUsingGet(&#123;</span><br><span class="line">    id: props.id as any,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    data.value = res.data.data as any;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取数据失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 监听 searchParams 变量，改变时触发数据的重新加载</span><br><span class="line"> */</span><br><span class="line">watchEffect(() =&gt; &#123;</span><br><span class="line">  loadData();</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">#answerResultPage &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#answerResultPage .content-wrapper &gt; * &#123;</span><br><span class="line">  margin-bottom: 24px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="查看我的回答页"><a href="#查看我的回答页" class="headerlink" title="查看我的回答页"></a>查看我的回答页</h2><p>页面效果<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722501301236-f602fcf5-4113-4b22-acc5-3de8d8fa4f9d.png" alt="image.png"><br>代码如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;a-form</span><br><span class="line">    :model=&quot;formSearchParams&quot;</span><br><span class="line">    :style=&quot;&#123; marginBottom: &#x27;20px&#x27; &#125;&quot;</span><br><span class="line">    layout=&quot;inline&quot;</span><br><span class="line">    @submit=&quot;doSearch&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;a-form-item field=&quot;resultName&quot; label=&quot;结果名称&quot;&gt;</span><br><span class="line">      &lt;a-input</span><br><span class="line">        v-model=&quot;formSearchParams.resultName&quot;</span><br><span class="line">        placeholder=&quot;请输入结果名称&quot;</span><br><span class="line">        allow-clear</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">    &lt;a-form-item field=&quot;resultDesc&quot; label=&quot;结果描述&quot;&gt;</span><br><span class="line">      &lt;a-input</span><br><span class="line">        v-model=&quot;formSearchParams.resultDesc&quot;</span><br><span class="line">        placeholder=&quot;请输入结果描述&quot;</span><br><span class="line">        allow-clear</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">    &lt;a-form-item field=&quot;appId&quot; label=&quot;应用 id&quot;&gt;</span><br><span class="line">      &lt;a-input</span><br><span class="line">        v-model=&quot;formSearchParams.appId&quot;</span><br><span class="line">        placeholder=&quot;请输入应用 id&quot;</span><br><span class="line">        allow-clear</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">    &lt;a-form-item&gt;</span><br><span class="line">      &lt;a-button type=&quot;primary&quot; html-type=&quot;submit&quot; style=&quot;width: 100px&quot;&gt;</span><br><span class="line">        搜索</span><br><span class="line">      &lt;/a-button&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">  &lt;/a-form&gt;</span><br><span class="line">  &lt;a-table</span><br><span class="line">    :columns=&quot;columns&quot;</span><br><span class="line">    :data=&quot;dataList&quot;</span><br><span class="line">    :pagination=&quot;&#123;</span><br><span class="line">      showTotal: true,</span><br><span class="line">      pageSize: searchParams.pageSize,</span><br><span class="line">      current: searchParams.current,</span><br><span class="line">      total,</span><br><span class="line">    &#125;&quot;</span><br><span class="line">    @page-change=&quot;onPageChange&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;template #resultPicture=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &lt;a-image width=&quot;64&quot; :src=&quot;record.resultPicture&quot; /&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #appType=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123; APP_TYPE_MAP[record.appType] &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #scoringStrategy=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123; APP_SCORING_STRATEGY_MAP[record.scoringStrategy] &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #createTime=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123; dayjs(record.createTime).format(&quot;YYYY-MM-DD HH:mm:ss&quot;) &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #updateTime=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123; dayjs(record.updateTime).format(&quot;YYYY-MM-DD HH:mm:ss&quot;) &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #optional=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &lt;a-space&gt;</span><br><span class="line">        &lt;a-button status=&quot;danger&quot; @click=&quot;doDelete(record)&quot;&gt;删除&lt;/a-button&gt;</span><br><span class="line">      &lt;/a-space&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/a-table&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref, watchEffect &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123;</span><br><span class="line">  deleteUserAnswerUsingPost,</span><br><span class="line">  listMyUserAnswerVoByPageUsingPost,</span><br><span class="line">&#125; from &quot;@/api/userAnswerController&quot;;</span><br><span class="line">import API from &quot;@/api&quot;;</span><br><span class="line">import message from &quot;@arco-design/web-vue/es/message&quot;;</span><br><span class="line">import &#123; dayjs &#125; from &quot;@arco-design/web-vue/es/_utils/date&quot;;</span><br><span class="line">import &#123; APP_SCORING_STRATEGY_MAP, APP_TYPE_MAP &#125; from &quot;@/constant/app&quot;;</span><br><span class="line"></span><br><span class="line">const formSearchParams = ref&lt;API.UserAnswerQueryRequest&gt;(&#123;&#125;);</span><br><span class="line"></span><br><span class="line">// 初始化搜索条件（不应该被修改）</span><br><span class="line">const initSearchParams = &#123;</span><br><span class="line">  current: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const searchParams = ref&lt;API.UserAnswerQueryRequest&gt;(&#123;</span><br><span class="line">  ...initSearchParams,</span><br><span class="line">&#125;);</span><br><span class="line">const dataList = ref&lt;API.UserAnswerVO[]&gt;([]);</span><br><span class="line">const total = ref&lt;number&gt;(0);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 加载数据</span><br><span class="line"> */</span><br><span class="line">const loadData = async () =&gt; &#123;</span><br><span class="line">  const res = await listMyUserAnswerVoByPageUsingPost(searchParams.value);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    dataList.value = res.data.data?.records || [];</span><br><span class="line">    total.value = res.data.data?.total || 0;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取数据失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 执行搜索</span><br><span class="line"> */</span><br><span class="line">const doSearch = () =&gt; &#123;</span><br><span class="line">  searchParams.value = &#123;</span><br><span class="line">    ...initSearchParams,</span><br><span class="line">    ...formSearchParams.value,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 当分页变化时，改变搜索条件，触发数据加载</span><br><span class="line"> * @param page</span><br><span class="line"> */</span><br><span class="line">const onPageChange = (page: number) =&gt; &#123;</span><br><span class="line">  searchParams.value = &#123;</span><br><span class="line">    ...searchParams.value,</span><br><span class="line">    current: page,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 删除</span><br><span class="line"> * @param record</span><br><span class="line"> */</span><br><span class="line">const doDelete = async (record: API.UserAnswer) =&gt; &#123;</span><br><span class="line">  if (!record.id) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  const res = await deleteUserAnswerUsingPost(&#123;</span><br><span class="line">    id: record.id,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    loadData();</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;删除失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 监听 searchParams 变量，改变时触发数据的重新加载</span><br><span class="line"> */</span><br><span class="line">watchEffect(() =&gt; &#123;</span><br><span class="line">  loadData();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 表格列配置</span><br><span class="line">const columns = [</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;id&quot;,</span><br><span class="line">    dataIndex: &quot;id&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;选项&quot;,</span><br><span class="line">    dataIndex: &quot;choices&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;结果 id&quot;,</span><br><span class="line">    dataIndex: &quot;resultId&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;名称&quot;,</span><br><span class="line">    dataIndex: &quot;resultName&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;描述&quot;,</span><br><span class="line">    dataIndex: &quot;resultDesc&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;图片&quot;,</span><br><span class="line">    dataIndex: &quot;resultPicture&quot;,</span><br><span class="line">    slotName: &quot;resultPicture&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;得分&quot;,</span><br><span class="line">    dataIndex: &quot;resultScore&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;应用 id&quot;,</span><br><span class="line">    dataIndex: &quot;appId&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;应用类型&quot;,</span><br><span class="line">    dataIndex: &quot;appType&quot;,</span><br><span class="line">    slotName: &quot;appType&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;评分策略&quot;,</span><br><span class="line">    dataIndex: &quot;scoringStrategy&quot;,</span><br><span class="line">    slotName: &quot;scoringStrategy&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;创建时间&quot;,</span><br><span class="line">    dataIndex: &quot;createTime&quot;,</span><br><span class="line">    slotName: &quot;createTime&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;操作&quot;,</span><br><span class="line">    slotName: &quot;optional&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> AI答题应用平台 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java项目 </tag>
            
            <tag> AI答题应用平台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI答题应用平台_3前端基础开发</title>
      <link href="/2024/07/05/AI%E7%AD%94%E9%A2%98%E5%BA%94%E7%94%A8%E5%B9%B3%E5%8F%B0_3.%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91/"/>
      <url>/2024/07/05/AI%E7%AD%94%E9%A2%98%E5%BA%94%E7%94%A8%E5%B9%B3%E5%8F%B0_3.%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<h1 id="前端技术选型"><a href="#前端技术选型" class="headerlink" title="前端技术选型"></a>前端技术选型</h1><ul><li>Vue3</li><li>Vue-cli脚手架</li><li>Pinia状态管理</li><li>Axios请求库</li><li>AcroDesign组件库</li><li>前端工程化：ESLint+Prettier+TypeScript</li><li>QRCode.js前端代码生成</li><li>OpenAPI前端代码生成</li></ul><h1 id="web前端项目初始化"><a href="#web前端项目初始化" class="headerlink" title="web前端项目初始化"></a>web前端项目初始化</h1><h2 id="确认环境"><a href="#确认环境" class="headerlink" title="确认环境"></a>确认环境</h2><p>首先需要确认环境：node.js版本：18.16.0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查node版本</span></span><br><span class="line">node -v</span><br></pre></td></tr></table></figure><p>也可以使用切换和管理node版本的工具<a href="https://github.com/nvm-sh/nvm">nvm</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查nvm版本</span></span><br><span class="line">nvm -v</span><br></pre></td></tr></table></figure><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>使用Vue-CLI来快速初始化vue3的项目，它自动整合了vue-router，TypeSscript、前端工程化等库<br><a href="https://cli.vuejs.org/zh/">Vue CLI</a><br>安装命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br></pre></td></tr></table></figure><p>安装完之后，使用<code>vue -V</code>来检查是否安装成功。<br>安装成功后，使用如下命令创建初始化工程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create [项目名称]</span><br></pre></td></tr></table></figure><p>手动选择特性<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722319928745-62b4e0f2-f3e3-4119-a9bc-b9bc0c04491d.png" alt="image.png"><br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722320117049-11ab89d4-13f7-4ca5-b280-383e9eaaf46e.png" alt="image.png"><br>选择完之后项目就会自动加载这些依赖，然后打开WebStorm，运行<code>npm run server</code>,能正常访问页面，说明初始化成功了。</p><h2 id="前端工程化配置"><a href="#前端工程化配置" class="headerlink" title="前端工程化配置"></a><strong>前端工程化配置</strong></h2><p>脚手架已经配置了prettier代码美化、ESLint代码校验，TypeScript类型校验，格式化插件等，不需要自己再配置了。不过webStorm上还需要开启美化插件<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722320592189-0fbe51b3-f377-4303-a358-ee9966560c3a.png" alt="image.png"><br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722320646226-123c521f-ac87-4d50-8a6c-761139aa403e.png" alt="image.png"><br>:::info<br>有时候ESLint校验比较严格，如果因为它导致的编译错误，可以在.eslintrc.js添加如下”@typescript-eslint&#x2F;ban-ts-comment”: “off”,<br>:::<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722320818280-9c447deb-7da6-4a3d-8dbe-8cb9b5297954.png" alt="image.png"></p><h2 id="引入组件库"><a href="#引入组件库" class="headerlink" title="引入组件库"></a>引入组件库</h2><p>引入Acro Design组件库：<br><a href="https://arco.design/vue/docs/start">Arco Design Vue</a></p><blockquote><p><strong>注意</strong>：vue的版本需要&gt;&#x3D;3.2.0</p></blockquote><p>执行安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev @arco-design/web-vue</span><br></pre></td></tr></table></figure><p>改变主入口文件main.ts,引入组件库</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ArcoVue</span> <span class="keyword">from</span> <span class="string">&quot;@arco-design/web-vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;@arco-design/web-vue/dist/arco.css&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;./router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line">app.<span class="title function_">use</span>(router);</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title class_">ArcoVue</span>);</span><br><span class="line">app.<span class="title function_">use</span>(pinia);</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure><p>之后可以在app.vue中随便引入一个组件，看有没有效果。</p><h2 id="开发规范"><a href="#开发规范" class="headerlink" title="开发规范"></a>开发规范</h2><p>遵循vue3的组合式API<br><a href="https://cn.vuejs.org/guide/introduction.html#what-is-vue">Vue.js</a><br><a href="https://cn.vuejs.org/guide/extras/composition-api-faq.html">组合式 API 常见问答 | Vue.js (vuejs.org)</a><br>示例代码</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup lang=<span class="string">&quot;ts&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="全局通用布局"><a href="#全局通用布局" class="headerlink" title="全局通用布局"></a>全局通用布局</h2><h3 id="基础布局结构"><a href="#基础布局结构" class="headerlink" title="基础布局结构"></a>基础布局结构</h3><p>在建前端页面的时候，首先需要有一个全局的布局的想象，之后在Layouts目录下新建一个布局，<code>BasitcLayout.vue</code>,在app.vue根组件中引入布局，</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">BasicLayout</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> <span class="title class_">BasicLayout</span> <span class="keyword">from</span> <span class="string">&quot;@/layouts/BasicLayout.vue&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>然后再AcroDesign组件库中引入布局Layout组件<br><a href="https://arco.design/vue/component/layout">Arco Design Vue</a><br>选择自己觉得合适的布局<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722325445610-e3056965-b7f4-4b5b-9ccd-72c4417e90cd.png" alt="image.png"></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basicLayout&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">a-layout</span> <span class="attr">style</span>=<span class="string">&quot;height: 100vh&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">a-layout-header</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        首部</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">a-layout-header</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">a-layout-content</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        内容</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">a-layout-content</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">a-layout-footer</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        底部</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">a-layout-footer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">a-layout</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h3 id="全局底部栏"><a href="#全局底部栏" class="headerlink" title="全局底部栏"></a>全局底部栏</h3><p>对于底部的内容，通常会添加一些版权信息。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-layout-footer <span class="keyword">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://xxx&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>xxxx<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">      &lt;/a-layout-footer&gt;</span><br></pre></td></tr></table></figure><h3 id="动态替换内容"><a href="#动态替换内容" class="headerlink" title="动态替换内容"></a>动态替换内容</h3><p>对于content部分，我们需要对于不同的页面展示不同的内容，这时候就需要用到<strong>vue-router</strong>路由组件了<br>具体操作是在router&#x2F;index.ts中，添加页面的路由信息，之后在content中，直接添加<router-view>,这样它就会在页面地址发生改变的时候，自动渲染不同的页面</router-view></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-layout-content <span class="keyword">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span></span><br><span class="line">      &lt;/a-layout-content&gt;</span><br></pre></td></tr></table></figure><h3 id="全局顶部栏"><a href="#全局顶部栏" class="headerlink" title="全局顶部栏"></a>全局顶部栏</h3><p>对于顶部展示的信息，可以使用AcroDesign提供的菜单组件<strong>Menu</strong>来创建<code>GlobalHeader</code>头部组件。<br><a href="https://arco.design/vue/component/menu">Arco Design Vue</a></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-menu-item</span><br><span class="line">              key=<span class="string">&quot;0&quot;</span></span><br><span class="line">              :style=<span class="string">&quot;&#123; padding: 0, marginRight: &#x27;38px&#x27; &#125;&quot;</span></span><br><span class="line">              disabled</span><br><span class="line">            &gt;</span><br><span class="line">              <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;titleBar&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;logo&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../assets/logo.png&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>范答答<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">            &lt;/a-menu-item&gt;</span><br></pre></td></tr></table></figure><h3 id="通用路由菜单"><a href="#通用路由菜单" class="headerlink" title="通用路由菜单"></a>通用路由菜单</h3><p>现有问题：菜单栏都是写死的，而且点击不会跳转到不同页面，可以通过路由功能来灵活展示<br>目标：根据路由配置信息，自动生成菜单的内容<br>实现步骤：</p><ol><li>提取通用路由文件</li><li>菜单组件读取路由，动态渲染不同页面</li><li>绑定跳转事件</li><li>同步路由的更新到菜单栏高亮</li></ol><p><strong>提取通用路由文件</strong><br>把router&#x2F;index.ts中的路由变量定义为单独的路由文件routes.ts</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="attr">routes</span>: <span class="title class_">Array</span>&lt;<span class="title class_">RouteRecordRaw</span>&gt; = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;主页&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">HomePage</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  ];</span><br></pre></td></tr></table></figure><p>然后在router&#x2F;index.ts中引入路由</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; routes &#125; <span class="keyword">from</span> <span class="string">&quot;@/router/routes&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(process.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  routes,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>菜单组件读取路由，动态渲染菜单项</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; routes &#125; <span class="keyword">from</span> <span class="string">&quot;@/router/routes&quot;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-menu-item v-<span class="keyword">for</span>=<span class="string">&quot;item in visibleRoutes&quot;</span> :key=<span class="string">&quot;item.path&quot;</span>&gt;</span><br><span class="line">             &#123;&#123; item.<span class="property">name</span> &#125;&#125;</span><br><span class="line">           &lt;/a-menu-item&gt;</span><br></pre></td></tr></table></figure><p><strong>绑定跳转事件</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="title function_">useRouter</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//点击菜单跳转到对应页面</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">doMenuClick</span> = (<span class="params">key: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">  router.<span class="title function_">push</span>(&#123;</span><br><span class="line">    <span class="attr">path</span>: key,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-col flex=<span class="string">&quot;auto&quot;</span>&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">          <span class="language-xml"><span class="tag">&lt;<span class="name">a-menu</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">mode</span>=<span class="string">&quot;horizontal&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:default-selected-keys</span>=<span class="string">&quot;selectKeys&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            @<span class="attr">menu-item-click</span>=<span class="string">&quot;doMenuClick&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span></span></span><br><span class="line"><span class="language-xml">              ...</span></span><br></pre></td></tr></table></figure><p><strong>同步路由的更新到菜单栏高亮</strong><br>原理：首先点击菜单项&#x3D;》触发点击事件更新路由&#x3D;》更新路由后，同步去更新菜单栏的高亮</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//顶部栏当前选中的菜单项,默认是首页</span></span><br><span class="line"><span class="keyword">const</span> selectKeys = <span class="title function_">ref</span>([<span class="string">&quot;/&quot;</span>]);</span><br><span class="line"><span class="comment">//当发生路由跳转时，自动更新选中的菜单项，由于它是响应式变量，自动渲染选中菜单项对应的页面</span></span><br><span class="line">router.<span class="title function_">afterEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, failure</span>) =&gt;</span> &#123;</span><br><span class="line">  selectKeys.<span class="property">value</span> = [to.<span class="property">path</span>];</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>并在模板中引入变量</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-col flex=<span class="string">&quot;auto&quot;</span>&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">          <span class="language-xml"><span class="tag">&lt;<span class="name">a-menu</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">mode</span>=<span class="string">&quot;horizontal&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:default-selected-keys</span>=<span class="string">&quot;selectKeys&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            @<span class="attr">menu-item-click</span>=<span class="string">&quot;doMenuClick&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span></span></span><br><span class="line"><span class="language-xml">              ...</span></span><br></pre></td></tr></table></figure><p><strong>其他能力</strong><br>通过在路由中添加字段，来展示菜单的显隐</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/hide&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;隐藏页&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">HidePage</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">hideInMenu</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>然后就可以使用该字段来过滤路由数组，只展示需要显示的内容</p><h3 id="支持多套布局"><a href="#支持多套布局" class="headerlink" title="支持多套布局"></a>支持多套布局</h3><p>并不是所有的页面都使用一套布局，比如用户的注册登录页，没必要设置顶部栏的信息。<br><strong>思路</strong><br>使用vue-router自带的子路由机制，可以天然的实现布局和路由的嵌套，不同的父路由指定不同的layout</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/user&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;用户页&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">UserLayout</span>,</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123; <span class="attr">path</span>: <span class="string">&quot;/user/login&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;用户登录页&quot;</span>, <span class="attr">component</span>: <span class="title class_">UserLoginPage</span> &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;/user/register&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;用户注册页&quot;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="title class_">UserRegisterPage</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">hideInMenu</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>在App.vue中，需要选择哪些路由使用哪一种布局，根据不同路由自动渲染</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;route.path.startsWith(&#x27;/user&#x27;)&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">router-view</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-else</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">BasicLayout</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> <span class="title class_">BasicLayout</span> <span class="keyword">from</span> <span class="string">&quot;@/layouts/BasicLayout.vue&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; useRoute &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> route = <span class="title function_">useRoute</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="请求"><a href="#请求" class="headerlink" title="请求"></a>请求</h2><p>前后端怎么进行连接呢？需要前端发送<strong>请求</strong>调用后端的<strong>接口。</strong><br><strong>思路：</strong></p><ol><li>使用Axios网络请求库来自定义请求和响应拦截器、请求地址等相关配置</li><li>使用OpenAPI自动生成前端请求后端的接口</li></ol><hr><h3 id="请求工具库Axios"><a href="#请求工具库Axios" class="headerlink" title="请求工具库Axios"></a>请求工具库Axios</h3><p>Axiox官网<br><a href="https://axios-http.com/docs/intro">Getting Started | Axios Docs</a><br>下载axios</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install axios</span><br></pre></td></tr></table></figure><h3 id="全局自定义请求"><a href="#全局自定义请求" class="headerlink" title="全局自定义请求"></a>全局自定义请求</h3><p>需要编写request.ts，自定义全局的请求地址，超时时间、请求和响应拦截器等信息。<br>比如可以在全局响应拦截器中，通过响应的data中，获取后端返回的数据，比如code，检验code是否合法。</p><blockquote><p>注意：在创建axios请求时，一定要加<code>**withCredentials: true**</code>**,**否则在发送请求的时候不会携带cookie，无法完成登录功能</p></blockquote><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Message</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@arco-design/web-vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> myAxios = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">60000</span>,</span><br><span class="line">  <span class="attr">withCredentials</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Add a request interceptor</span></span><br><span class="line">myAxios.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="keyword">function</span> (<span class="params">config</span>) &#123;</span><br><span class="line">    <span class="comment">// Do something before request is sent</span></span><br><span class="line">    <span class="keyword">return</span> config;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">function</span> (<span class="params">error</span>) &#123;</span><br><span class="line">    <span class="comment">// Do something with request error</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Add a response interceptor</span></span><br><span class="line">myAxios.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="keyword">function</span> (<span class="params">response</span>) &#123;</span><br><span class="line">    <span class="comment">// Any status code that lie within the range of 2xx cause this function to trigger</span></span><br><span class="line">    <span class="comment">// Do something with response data</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(response);</span><br><span class="line">    <span class="keyword">const</span> &#123; data &#125; = response;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (data.<span class="property">code</span> === <span class="number">40100</span>) &#123;</span><br><span class="line">      <span class="comment">//如果不是获取用户信息的请求，或者当前页面已经在登录页，则跳转到登录页</span></span><br><span class="line">      <span class="keyword">if</span> (</span><br><span class="line">        !response.<span class="property">request</span>.<span class="property">responseURL</span>.<span class="title function_">includes</span>(<span class="string">&quot;/user/get/login&quot;</span>) &amp;&amp;</span><br><span class="line">        !<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">pathname</span>.<span class="title function_">includes</span>(<span class="string">&quot;/user/login&quot;</span>)</span><br><span class="line">      ) &#123;</span><br><span class="line">        <span class="title class_">Message</span>.<span class="title function_">warning</span>(<span class="string">&quot;请先登录&quot;</span>);</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">`/user/login?redirect=<span class="subst">$&#123;<span class="variable language_">window</span>.location.href&#125;</span>`</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> response;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">function</span> (<span class="params">error</span>) &#123;</span><br><span class="line">    <span class="comment">// Any status codes that falls outside the range of 2xx cause this function to trigger</span></span><br><span class="line">    <span class="comment">// Do something with response error</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> myAxios;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="自动生成请求代码"><a href="#自动生成请求代码" class="headerlink" title="自动生成请求代码"></a>自动生成请求代码</h3><p>传统的方法需要为每一个接口，编写一个请求，现在OpenAPI可以通过后端生成的接口文档，自动生成对后端接口的请求。<br><a href="https://www.npmjs.com/package/@umijs/openapi">@umijs&#x2F;openapi</a><br>安装命令</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save-dev <span class="meta">@umijs</span>/openapi</span><br></pre></td></tr></table></figure><p>在项目根目录下，新建<code>openapi.config.ts</code>文件，根据自己的需要定制生成的代码</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; generateService &#125; = <span class="built_in">require</span>(<span class="string">&quot;@umijs/openapi&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">generateService</span>(&#123;</span><br><span class="line">  <span class="attr">requestLibPath</span>: <span class="string">&quot;import request from &#x27;@/request&#x27;&quot;</span>,</span><br><span class="line">  <span class="attr">schemaPath</span>: <span class="string">&quot;http://localhost:8101/api/v2/api-docs&quot;</span>,</span><br><span class="line">  <span class="attr">serversPath</span>: <span class="string">&quot;./src&quot;</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>requestLibPath：请求库路径，这里选择自己通过axios自定义的请求文件</li><li>schemaPath：请求的接口文档地址</li><li>serversPath：生成文件保存的位置</li></ul><p>在package.json中，在script添加<code>&quot;openapi&quot; : &quot;ts-node openapi.config.ts&quot;</code><br>然后运行openapi，如果报错，可以把ts-node换成node<br>如果有报错，需要在.eslintrc.js中添加校验规则</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">rules</span>: &#123;</span><br><span class="line">    <span class="string">&quot;no-console&quot;</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&quot;production&quot;</span> ? <span class="string">&quot;warn&quot;</span> : <span class="string">&quot;off&quot;</span>,</span><br><span class="line">    <span class="string">&quot;no-debugger&quot;</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&quot;production&quot;</span> ? <span class="string">&quot;warn&quot;</span> : <span class="string">&quot;off&quot;</span>,</span><br><span class="line">    <span class="string">&quot;@typescript-eslint/ban-ts-comment&quot;</span>: <span class="string">&quot;off&quot;</span>,</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><h2 id="全局状态管理"><a href="#全局状态管理" class="headerlink" title="全局状态管理"></a>全局状态管理</h2><p>全局状态管理就是对于所有的页面，都共享的变量，而不是属于某一个具体的页面。<br>通常把用户的登录信息作为全局共享的变量，因为每个页面都需要用到用户登录信息。<br><strong>Pinia</strong>是一个主流的全局状态管理库<br><a href="https://pinia.vuejs.org/zh/getting-started.html">Pinia 🍍</a><br>1.首先安装pinia</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install pinia</span><br></pre></td></tr></table></figure><p>2.之后在项目入口文件<code>main.ts</code>中引入组件</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>();</span><br><span class="line">app.<span class="title function_">use</span>(pinia);</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.定义状态，在store目录下新建user模块，定义用户的状态、远程获取、修改状态等</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; getLoginUserUsingGet &#125; <span class="keyword">from</span> <span class="string">&quot;@/api/userController&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AccessEnum</span> <span class="keyword">from</span> <span class="string">&quot;@/access/accessEnum&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//登录用户信息全局状态</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useLoginUserStore = <span class="title function_">defineStore</span>(<span class="string">&quot;loginUser&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> loginUser = ref&lt;<span class="variable constant_">API</span>.<span class="property">LoginUserVO</span>&gt;(&#123;</span><br><span class="line">    <span class="attr">userName</span>: <span class="string">&quot;未登录&quot;</span>,</span><br><span class="line">    <span class="attr">userAvatar</span>:</span><br><span class="line">      <span class="string">&quot;https://p1-arco.byteimg.com/tos-cn-i-uwbnlip3yd/3ee5f13fb09879ecb5185e440cef6eb9123.png~tplv-uwbnlip3yd-webp.webp&quot;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">setLoginUser</span>(<span class="params">newLoginUser: API.LoginUserVO</span>) &#123;</span><br><span class="line">    loginUser.<span class="property">value</span> = newLoginUser;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取登录用户信息</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fetchLoginUser</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">getLoginUserUsingGet</span>();</span><br><span class="line">    <span class="keyword">if</span> (res.<span class="property">data</span>.<span class="property">code</span> === <span class="number">0</span> &amp;&amp; res.<span class="property">data</span>.<span class="property">data</span>) &#123;</span><br><span class="line">      loginUser.<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">data</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      loginUser.<span class="property">value</span> = &#123; <span class="attr">userRole</span>: <span class="title class_">AccessEnum</span>.<span class="property">NOT_LOGIN</span>, <span class="attr">userName</span>: <span class="string">&quot;未登录&quot;</span> &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123; loginUser, setLoginUser, fetchLoginUser &#125;;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.使用状态，可以直接使用store中导出的状态变量和函数<br>可以在首次进入页面时，尝试获取用户登录信息</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> loginUserStore = <span class="title function_">useLoginUserStore</span>();</span><br><span class="line">loginUserStore.<span class="title function_">fetchLoginUser</span>();</span><br></pre></td></tr></table></figure><p>在任何页面都可以直接使用该状态变量</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(loginUserStore.<span class="property">loginUser</span>) &#125;&#125;</span><br></pre></td></tr></table></figure><p>顶部栏右侧展示用户信息</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-col flex=<span class="string">&quot;100px&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;loginUserStore.loginUser.id&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    &#123;&#123; loginUserStore.loginUser.userName ?? &quot;无名&quot; &#125;&#125;</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">a-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/user/login&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/a-col&gt;</span><br></pre></td></tr></table></figure><h2 id="全局权限管理"><a href="#全局权限管理" class="headerlink" title="全局权限管理"></a>全局权限管理</h2><p>需求：能够灵活的配置每个页面的访问权限，由全局的权限校验管理进行校验和拦截，不需要在每个页面中添加权限校验，简化开发<br>实现方案：</p><ol><li>在路由配置文件，定义页面的访问权限</li><li>使用全局权限校验器，当每次访问一个页面时，先看该页面的路由中是否配置相关权限，并进行相应的拦截</li></ol><p>新建一个access目录，所有权限相关的文件都放在这里面，模块化管理，只要不引入，就不会生效<br>定义权限枚举</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 权限定义</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">AccessEnum</span> = &#123;</span><br><span class="line">  <span class="attr">NOT_LOGIN</span>: <span class="string">&quot;notLogin&quot;</span>,</span><br><span class="line">  <span class="attr">USER</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">  <span class="attr">ADMIN</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">AccessEnum</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>routes.ts中添加测试路由</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="attr">path</span>: <span class="string">&quot;/admin/user&quot;</span>,</span><br><span class="line">   <span class="attr">name</span>: <span class="string">&quot;用户管理&quot;</span>,</span><br><span class="line">   <span class="attr">component</span>: <span class="title class_">AdminUserPage</span>,</span><br><span class="line">   <span class="attr">meta</span>: &#123;</span><br><span class="line">     <span class="attr">access</span>: <span class="title class_">AccessEnum</span>.<span class="property">ADMIN</span>,</span><br><span class="line">   &#125;,</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><p>编写通用的权限校验方法<br>将权限校验方法抽离出一个公共的方法，checkAccess.ts</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">AccessEnum</span> <span class="keyword">from</span> <span class="string">&quot;@/access/accessEnum&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">checkAccess</span> = (<span class="params"></span></span><br><span class="line"><span class="params">  loginUser: API.LoginUserVO,</span></span><br><span class="line"><span class="params">  needAccess = AccessEnum.NOT_LOGIN</span></span><br><span class="line"><span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> loginUserAccess = loginUser?.<span class="property">userRole</span> ?? <span class="title class_">AccessEnum</span>.<span class="property">NOT_LOGIN</span>;</span><br><span class="line">  <span class="comment">//如果不需要登录权限，直接通行</span></span><br><span class="line">  <span class="keyword">if</span> (needAccess === <span class="title class_">AccessEnum</span>.<span class="property">NOT_LOGIN</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//如果需要用户权限才能访问</span></span><br><span class="line">  <span class="keyword">if</span> (needAccess === <span class="title class_">AccessEnum</span>.<span class="property">USER</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (loginUserAccess === <span class="title class_">AccessEnum</span>.<span class="property">NOT_LOGIN</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//如果需要管理员权限才能访问</span></span><br><span class="line">  <span class="keyword">if</span> (needAccess === <span class="title class_">AccessEnum</span>.<span class="property">ADMIN</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (loginUserAccess !== <span class="title class_">AccessEnum</span>.<span class="property">ADMIN</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> checkAccess;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>编写全局权限校验核心文件index.ts<br>思路：</p><ol><li>首先判断页面是否需要登录权限，如果不需要，直接放行</li><li>如果需要登录<ol><li>如果未登录，跳转到登录页面</li><li>如果已登录，判断已登录用户是否有访问页面的权限，如果没有，则跳转到无权限页面</li></ol></li></ol><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;@/router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useLoginUserStore &#125; <span class="keyword">from</span> <span class="string">&quot;@/store/userStore&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AccessEnum</span> <span class="keyword">from</span> <span class="string">&quot;@/access/accessEnum&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> checkAccess <span class="keyword">from</span> <span class="string">&quot;@/access/checkAccess&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//进入页面前，进行拦截校验</span></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="keyword">async</span> (to, <span class="keyword">from</span>, next) =&gt; &#123;</span><br><span class="line">  <span class="comment">//获取当前登录用户</span></span><br><span class="line">  <span class="keyword">const</span> loginUserStore = <span class="title function_">useLoginUserStore</span>();</span><br><span class="line">  <span class="keyword">let</span> loginUser = loginUserStore.<span class="property">loginUser</span>;</span><br><span class="line">  <span class="keyword">if</span> (!loginUser || !loginUser.<span class="property">userRole</span>) &#123;</span><br><span class="line">    <span class="keyword">await</span> loginUserStore.<span class="title function_">fetchLoginUser</span>();</span><br><span class="line">    loginUser = loginUserStore.<span class="property">loginUser</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//获取当前想要访问的页面需要的权限</span></span><br><span class="line">  <span class="keyword">const</span> needAccess = (to.<span class="property">meta</span>?.<span class="property">access</span> <span class="keyword">as</span> <span class="built_in">string</span>) ?? <span class="title class_">AccessEnum</span>.<span class="property">NOT_LOGIN</span>;</span><br><span class="line">  <span class="comment">//要跳转的页面必须登录</span></span><br><span class="line">  <span class="keyword">if</span> (needAccess != <span class="title class_">AccessEnum</span>.<span class="property">NOT_LOGIN</span>) &#123;</span><br><span class="line">    <span class="comment">//如果当前用户没有登录，需要跳转到登录页面，先进行登录</span></span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      !loginUser ||</span><br><span class="line">      !loginUser.<span class="property">userRole</span> ||</span><br><span class="line">      loginUser.<span class="property">userRole</span> === <span class="title class_">AccessEnum</span>.<span class="property">NOT_LOGIN</span></span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="title function_">next</span>(<span class="string">`/user/login?redirect=<span class="subst">$&#123;to.fullPath&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//如果已经登录，那么判断权限是否足够，如果不够，跳转到无权限页</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_">checkAccess</span>(loginUser, needAccess)) &#123;</span><br><span class="line">      <span class="title function_">next</span>(<span class="string">`/noAuth`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">next</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>注意：pinia的初始化，必须放在这段代码的前面，所以需要将useLoginUserState放到router.beforeEach()里面</p></blockquote><p><a href="https://pinia.vuejs.org/zh/core-concepts/outside-component-usage.html">Pinia</a><a href="https://pinia.vuejs.org/zh/core-concepts/outside-component-usage.html"> 🍍</a><br>在程序入口文件main.ts中引入该目录就可以了</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;@/access&quot;</span>;</span><br></pre></td></tr></table></figure><p><strong>根据不同权限渲染不同菜单栏</strong><br>需求：根据不同的权限显示不同的菜单栏<br>原理：跟上面控制路由的显隐一样，通过在路由中添加权限字段，来进行筛选<br>例如</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/answer/result/:id&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;答题结果&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">AnswerResultPage</span>,</span><br><span class="line">    <span class="attr">props</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">hideInMenu</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">access</span>: <span class="title class_">AccessEnum</span>.<span class="property">USER</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> visibleRoutes = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> routes.<span class="title function_">filter</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (item.<span class="property">meta</span>?.<span class="property">hideInMenu</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//根据权限隐藏菜单栏</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_">checkAccess</span>(loginUserStore.<span class="property">loginUser</span>, item.<span class="property">meta</span>?.<span class="property">access</span> <span class="keyword">as</span> <span class="built_in">string</span>)) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">useRouter</span>();</span><br><span class="line"><span class="comment">//顶部栏当前选中的菜单项,默认是首页</span></span><br><span class="line"><span class="keyword">const</span> selectKeys = <span class="title function_">ref</span>([<span class="string">&quot;/&quot;</span>]);</span><br><span class="line"><span class="comment">//当发生路由跳转时，自动更新选中的菜单项，由于它是响应式变量，自动渲染选中菜单项对应的页面</span></span><br><span class="line">router.<span class="title function_">afterEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, failure</span>) =&gt;</span> &#123;</span><br><span class="line">  selectKeys.<span class="property">value</span> = [to.<span class="property">path</span>];</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//点击菜单跳转到对应页面</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">doMenuClick</span> = (<span class="params">key: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">  router.<span class="title function_">push</span>(&#123;</span><br><span class="line">    <span class="attr">path</span>: key,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="全局入口文件"><a href="#全局入口文件" class="headerlink" title="全局入口文件"></a>全局入口文件</h2><p>可以在App.vue中预留一个初始化逻辑代码</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 全局初始化函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">init</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;欢迎来到范答答AI答题应用平台&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">init</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="通用组件-MarkDown编辑器"><a href="#通用组件-MarkDown编辑器" class="headerlink" title="通用组件-MarkDown编辑器"></a>通用组件-MarkDown编辑器</h2><p>推荐的一套markdown编辑器：<a href="https://github.com/bytedance/bytemd">GitHub - bytedance&#x2F;bytemd: ByteMD v1 repository</a><br>下载编辑器主题、gfm表格支持、highlight代码高亮等插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i @bytemd/vue-next</span><br><span class="line">npm i @bytemd/plugin-highlight @bytemd/plugin-gfm</span><br></pre></td></tr></table></figure><p>新建MdEditor组件</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Editor</span> <span class="attr">:value</span>=<span class="string">&quot;value&quot;</span> <span class="attr">:plugins</span>=<span class="string">&quot;plugins&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;handleChange&quot;</span> /&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> gfm <span class="keyword">from</span> <span class="string">&quot;@bytemd/plugin-gfm&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; <span class="title class_">Editor</span>, <span class="title class_">Viewer</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@bytemd/vue&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> plugins = [</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">gfm</span>(),</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">// Add more plugins here</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">components</span>: &#123; <span class="title class_">Editor</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123; <span class="attr">value</span>: <span class="string">&quot;&quot;</span>, plugins &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">handleChange</span>(<span class="params">v</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">value</span> = v;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>新建MdViewer组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;Viewer :value=&quot;value&quot; :plugins=&quot;plugins&quot; /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">  import &#123; Viewer &#125; from &quot;@bytemd/vue-next&quot;;</span><br><span class="line">  import highlight from &quot;@bytemd/plugin-highlight&quot;;</span><br><span class="line">  import gfm from &quot;@bytemd/plugin-gfm&quot;;</span><br><span class="line">  import &#123; withDefaults, defineProps &#125; from &quot;vue&quot;;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line"> * 定义组件类型</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">  interface Props &#123;</span><br><span class="line">    value: string;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  const plugins = [gfm(), highlight()];</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line"> * 给组件指定初始值</span><br><span class="line"> */</span><br><span class="line">  const props = withDefaults(defineProps&lt;Props&gt;(), &#123;</span><br><span class="line">    value: () =&gt; &quot;&quot;,</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="通用组件-图片上传"><a href="#通用组件-图片上传" class="headerlink" title="通用组件-图片上传"></a>通用组件-图片上传</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;a-space direction=&quot;vertical&quot; :style=&quot;&#123; width: &#x27;100%&#x27; &#125;&quot;&gt;</span><br><span class="line">    &lt;a-upload</span><br><span class="line">      :fileList=&quot;file ? [file] : []&quot;</span><br><span class="line">      :show-file-list=&quot;false&quot;</span><br><span class="line">      :custom-request=&quot;customRequest&quot;</span><br><span class="line">      &gt;</span><br><span class="line">      &lt;template #upload-button&gt;</span><br><span class="line">        &lt;div</span><br><span class="line">          :class=&quot;`arco-upload-list-item$&#123;</span><br><span class="line">          file &amp;&amp; file.status === &#x27;error&#x27;</span><br><span class="line">          ? &#x27; arco-upload-list-item-error&#x27;</span><br><span class="line">          : &#x27;&#x27;</span><br><span class="line">          &#125;`&quot;</span><br><span class="line">          &gt;</span><br><span class="line">          &lt;div</span><br><span class="line">            class=&quot;arco-upload-list-picture custom-upload-avatar&quot;</span><br><span class="line">            v-if=&quot;file &amp;&amp; file.url&quot;</span><br><span class="line">            &gt;</span><br><span class="line">            &lt;img :src=&quot;file.url&quot; /&gt;</span><br><span class="line">            &lt;div class=&quot;arco-upload-list-picture-mask&quot;&gt;</span><br><span class="line">              &lt;IconEdit /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;a-progress</span><br><span class="line">              v-if=&quot;file.status === &#x27;uploading&#x27; &amp;&amp; file.percent &lt; 100&quot;</span><br><span class="line">              :percent=&quot;file.percent&quot;</span><br><span class="line">              type=&quot;circle&quot;</span><br><span class="line">              size=&quot;mini&quot;</span><br><span class="line">              :style=&quot;&#123;</span><br><span class="line">              position: &#x27;absolute&#x27;,</span><br><span class="line">              left: &#x27;50%&#x27;,</span><br><span class="line">              top: &#x27;50%&#x27;,</span><br><span class="line">              transform: &#x27;translateX(-50%) translateY(-50%)&#x27;,</span><br><span class="line">              &#125;&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;arco-upload-picture-card&quot; v-else&gt;</span><br><span class="line">            &lt;div class=&quot;arco-upload-picture-card-text&quot;&gt;</span><br><span class="line">              &lt;IconPlus /&gt;</span><br><span class="line">              &lt;div style=&quot;margin-top: 10px; font-weight: 600&quot;&gt;上传&lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/a-upload&gt;</span><br><span class="line">  &lt;/a-space&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">  import &#123; IconEdit, IconPlus &#125; from &quot;@arco-design/web-vue/es/icon&quot;;</span><br><span class="line">  import &#123; ref, withDefaults, defineProps &#125; from &quot;vue&quot;;</span><br><span class="line">  import &#123; uploadFileUsingPost &#125; from &quot;@/api/fileController&quot;;</span><br><span class="line">  import &#123; Message &#125; from &quot;@arco-design/web-vue&quot;;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line"> * 定义组件属性类型</span><br><span class="line"> */</span><br><span class="line">  interface Props &#123;</span><br><span class="line">    biz: string;</span><br><span class="line">    onChange?: (url: string) =&gt; void;</span><br><span class="line">      value?: string;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line"> * 给组件指定初始值</span><br><span class="line"> */</span><br><span class="line">  const props = withDefaults(defineProps&lt;Props&gt;(), &#123;</span><br><span class="line">    value: () =&gt; &quot;&quot;,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  const file = ref();</span><br><span class="line">  if (props.value) &#123;</span><br><span class="line">    file.value = &#123;</span><br><span class="line">      url: props.value,</span><br><span class="line">      percent: 100,</span><br><span class="line">      status: &quot;done&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 自定义请求</span><br><span class="line">  const customRequest = async (option: any) =&gt; &#123;</span><br><span class="line">    const &#123; onError, onSuccess, fileItem &#125; = option;</span><br><span class="line"></span><br><span class="line">    const res: any = await uploadFileUsingPost(</span><br><span class="line">      &#123; biz: props.biz &#125;,</span><br><span class="line">      &#123;&#125;,</span><br><span class="line">      fileItem.file</span><br><span class="line">    );</span><br><span class="line">    if (res.data.code === 0 &amp;&amp; res.data.data) &#123;</span><br><span class="line">      const url = res.data.data;</span><br><span class="line">      file.value = &#123;</span><br><span class="line">        name: fileItem.name,</span><br><span class="line">        file: fileItem.file,</span><br><span class="line">        url,</span><br><span class="line">      &#125;;</span><br><span class="line">      props.onChange?.(url);</span><br><span class="line">      onSuccess();</span><br><span class="line">      console.log(file.value);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      Message.error(&quot;上传失败，&quot; + res.data.message || &quot;&quot;);</span><br><span class="line">      onError(new Error(res.data.message));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="前端基础页面的开发"><a href="#前端基础页面的开发" class="headerlink" title="前端基础页面的开发"></a>前端基础页面的开发</h1><h2 id="用户模块"><a href="#用户模块" class="headerlink" title="用户模块"></a>用户模块</h2><h3 id="添加路由"><a href="#添加路由" class="headerlink" title="添加路由"></a>添加路由</h3><p>首先需要在routes.ts中配置路由信息</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/user&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;用户页&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">UserLayout</span>,</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123; <span class="attr">path</span>: <span class="string">&quot;/user/login&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;用户登录页&quot;</span>, <span class="attr">component</span>: <span class="title class_">UserLoginPage</span> &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;/user/register&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;用户注册页&quot;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="title class_">UserRegisterPage</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">hideInMenu</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><h3 id="用户注册页面"><a href="#用户注册页面" class="headerlink" title="用户注册页面"></a>用户注册页面</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;userRegisterPage&quot;&gt;</span><br><span class="line">    &lt;h2 style=&quot;margin-bottom: 16px&quot;&gt;用户注册&lt;/h2&gt;</span><br><span class="line">    &lt;a-form</span><br><span class="line">      :model=&quot;form&quot;</span><br><span class="line">      :style=&quot;&#123; width: &#x27;480px&#x27;, margin: &#x27;50px auto&#x27; &#125;&quot;</span><br><span class="line">      label-align=&quot;left&quot;</span><br><span class="line">      @submit=&quot;handleSubmit&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;a-form-item field=&quot;userAccount&quot; label=&quot;账号&quot;&gt;</span><br><span class="line">        &lt;a-input v-model=&quot;form.userAccount&quot; placeholder=&quot;请输入账号...&quot; /&gt;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">      &lt;a-form-item field=&quot;userPassword&quot; tooltip=&quot;密码不小于8位&quot; label=&quot;密码&quot;&gt;</span><br><span class="line">        &lt;a-input-password</span><br><span class="line">          v-model=&quot;form.userPassword&quot;</span><br><span class="line">          placeholder=&quot;请输入密码...&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">      &lt;a-form-item</span><br><span class="line">        field=&quot;checkPassword&quot;</span><br><span class="line">        tooltip=&quot;密码不小于8位&quot;</span><br><span class="line">        label=&quot;确认密码&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;a-input-password</span><br><span class="line">          v-model=&quot;form.checkPassword&quot;</span><br><span class="line">          placeholder=&quot;请再次确认密码...&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">      &lt;a-form-item&gt;</span><br><span class="line">        &lt;div</span><br><span class="line">          style=&quot;</span><br><span class="line">            display: flex;</span><br><span class="line">            width: 100%;</span><br><span class="line">            align-items: center;</span><br><span class="line">            justify-content: space-between;</span><br><span class="line">          &quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;a-button</span><br><span class="line">            type=&quot;primary&quot;</span><br><span class="line">            shape=&quot;round&quot;</span><br><span class="line">            long</span><br><span class="line">            style=&quot;width: 100px&quot;</span><br><span class="line">            html-type=&quot;submit&quot;</span><br><span class="line">            &gt;注册</span><br><span class="line">          &lt;/a-button&gt;</span><br><span class="line">          &lt;a-link href=&quot;/user/login&quot;&gt;老用户登录&lt;/a-link&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">    &lt;/a-form&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import API from &quot;@/api&quot;;</span><br><span class="line">import &#123; userRegisterUsingPost &#125; from &quot;@/api/userController&quot;;</span><br><span class="line">import message from &quot;@arco-design/web-vue/es/message&quot;;</span><br><span class="line">import &#123; useRouter &#125; from &quot;vue-router&quot;;</span><br><span class="line"></span><br><span class="line">const router = useRouter();</span><br><span class="line">const form = reactive(&#123;</span><br><span class="line">  userAccount: &quot;&quot;,</span><br><span class="line">  userPassword: &quot;&quot;,</span><br><span class="line">  checkPassword: &quot;&quot;,</span><br><span class="line">&#125; as API.UserRegisterRequest);</span><br><span class="line">const handleSubmit = async () =&gt; &#123;</span><br><span class="line">  const res = await userRegisterUsingPost(form);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    message.success(&quot;注册成功&quot;);</span><br><span class="line">    router.push(&#123;</span><br><span class="line">      path: &quot;/user/login&quot;,</span><br><span class="line">      replace: true,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;注册失败,&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="用户登录页面"><a href="#用户登录页面" class="headerlink" title="用户登录页面"></a>用户登录页面</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;userLoginPage&quot;&gt;</span><br><span class="line">    &lt;h2 style=&quot;margin-bottom: 16px&quot;&gt;用户登录&lt;/h2&gt;</span><br><span class="line">    &lt;a-form</span><br><span class="line">      :model=&quot;form&quot;</span><br><span class="line">      :style=&quot;&#123; width: &#x27;480px&#x27;, margin: &#x27;50px auto&#x27; &#125;&quot;</span><br><span class="line">      label-align=&quot;left&quot;</span><br><span class="line">      @submit=&quot;handleSubmit&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;a-form-item field=&quot;userAccount&quot; label=&quot;账号&quot;&gt;</span><br><span class="line">        &lt;a-input v-model=&quot;form.userAccount&quot; placeholder=&quot;请输入账号...&quot; /&gt;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">      &lt;a-form-item field=&quot;userPassword&quot; tooltip=&quot;密码不小于8位&quot; label=&quot;密码&quot;&gt;</span><br><span class="line">        &lt;a-input-password</span><br><span class="line">          v-model=&quot;form.userPassword&quot;</span><br><span class="line">          placeholder=&quot;请输入密码...&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">      &lt;a-form-item&gt;</span><br><span class="line">        &lt;div</span><br><span class="line">          style=&quot;</span><br><span class="line">            display: flex;</span><br><span class="line">            width: 100%;</span><br><span class="line">            align-items: center;</span><br><span class="line">            justify-content: space-between;</span><br><span class="line">          &quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;a-button</span><br><span class="line">            type=&quot;primary&quot;</span><br><span class="line">            shape=&quot;round&quot;</span><br><span class="line">            long</span><br><span class="line">            style=&quot;width: 100px&quot;</span><br><span class="line">            html-type=&quot;submit&quot;</span><br><span class="line">            &gt;登录</span><br><span class="line">          &lt;/a-button&gt;</span><br><span class="line">          &lt;a-link href=&quot;/user/register&quot;&gt;新用户注册&lt;/a-link&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/a-form-item&gt;</span><br><span class="line">    &lt;/a-form&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">import API from &quot;@/api&quot;;</span><br><span class="line">import &#123; userLoginUsingPost &#125; from &quot;@/api/userController&quot;;</span><br><span class="line">import &#123; useLoginUserStore &#125; from &quot;@/store/userStore&quot;;</span><br><span class="line">import message from &quot;@arco-design/web-vue/es/message&quot;;</span><br><span class="line">import &#123; useRouter &#125; from &quot;vue-router&quot;;</span><br><span class="line"></span><br><span class="line">const router = useRouter();</span><br><span class="line">const loginUserStore = useLoginUserStore();</span><br><span class="line">const form = reactive(&#123;</span><br><span class="line">  userAccount: &quot;&quot;,</span><br><span class="line">  userPassword: &quot;&quot;,</span><br><span class="line">&#125; as API.UserLoginRequest);</span><br><span class="line">const handleSubmit = async () =&gt; &#123;</span><br><span class="line">  const res = await userLoginUsingPost(form);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    await loginUserStore.fetchLoginUser();</span><br><span class="line">    message.success(&quot;登录成功&quot;);</span><br><span class="line">    router.push(&#123;</span><br><span class="line">      path: &quot;/&quot;,</span><br><span class="line">      replace: true,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;登录失败,&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="管理模块"><a href="#管理模块" class="headerlink" title="管理模块"></a>管理模块</h2><h3 id="前置准备"><a href="#前置准备" class="headerlink" title="前置准备"></a>前置准备</h3><p>管理界面一般需要引入表格组件Table<a href="https://arco.design/vue/component/table">Arco Design Vue</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;a-table :columns=&quot;columns&quot; :data=&quot;data&quot; @change=&quot;handleChange&quot;&gt;</span><br><span class="line">    &lt;template #name-filter=&quot;&#123; filterValue, setFilterValue, handleFilterConfirm, handleFilterReset&#125;&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;custom-filter&quot;&gt;</span><br><span class="line">        &lt;a-space direction=&quot;vertical&quot;&gt;</span><br><span class="line">          &lt;a-input :model-value=&quot;filterValue[0]&quot; @input=&quot;(value)=&gt;setFilterValue([value])&quot; /&gt;</span><br><span class="line">          &lt;div class=&quot;custom-filter-footer&quot;&gt;</span><br><span class="line">            &lt;a-button @click=&quot;handleFilterConfirm&quot;&gt;Confirm&lt;/a-button&gt;</span><br><span class="line">            &lt;a-button @click=&quot;handleFilterReset&quot;&gt;Reset&lt;/a-button&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/a-space&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/a-table&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>然后需要根据展示内容，定义表格列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 表格列配置</span><br><span class="line">const columns = [</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;id&quot;,</span><br><span class="line">    dataIndex: &quot;id&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;名称&quot;,</span><br><span class="line">    dataIndex: &quot;appName&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>对于一些需要个性化展示的内容，比如头像、时间等需要在columns中开启插槽配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    title: &quot;图标&quot;,</span><br><span class="line">    dataIndex: &quot;appIcon&quot;,</span><br><span class="line">    slotName: &quot;appIcon&quot;,</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>对于时间的格式化，可以使用dayjs工具<br><a href="https://day.js.org/docs/zh-CN/display/format">Format · Day.js</a><br>搜索条件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 初始化搜索条件（不应该被修改）</span><br><span class="line">const initSearchParams = &#123;</span><br><span class="line">  current: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>数据加载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 当分页变化时，改变搜索条件，触发数据加载</span><br><span class="line"> * @param page</span><br><span class="line"> */</span><br><span class="line">const onPageChange = (page: number) =&gt; &#123;</span><br><span class="line">  searchParams.value = &#123;</span><br><span class="line">    ...searchParams.value,</span><br><span class="line">    current: page,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line">/**</span><br><span class="line"> * 监听 searchParams 变量，改变时触发数据的重新加载</span><br><span class="line"> */</span><br><span class="line">watchEffect(() =&gt; &#123;</span><br><span class="line">  loadData();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="添加路由-1"><a href="#添加路由-1" class="headerlink" title="添加路由"></a>添加路由</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/admin/user&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;用户管理&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">AdminUserPage</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">access</span>: <span class="title class_">AccessEnum</span>.<span class="property">ADMIN</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/admin/app&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;应用管理&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">AdminAppPage</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">access</span>: <span class="title class_">AccessEnum</span>.<span class="property">ADMIN</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/admin/question&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;题目管理&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">AdminQuestionPage</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">access</span>: <span class="title class_">AccessEnum</span>.<span class="property">ADMIN</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/admin/scoring_result&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;评分管理&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">AdminScoringResultPage</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">access</span>: <span class="title class_">AccessEnum</span>.<span class="property">ADMIN</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/admin/user_answer&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;回答管理&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">AdminUserAnswerPage</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">access</span>: <span class="title class_">AccessEnum</span>.<span class="property">ADMIN</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><h3 id="用户管理页面"><a href="#用户管理页面" class="headerlink" title="用户管理页面"></a>用户管理页面</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;a-form</span><br><span class="line">    :model=&quot;formSearchParams&quot;</span><br><span class="line">    :style=&quot;&#123; marginBottom: &#x27;10px&#x27; &#125;&quot;</span><br><span class="line">    layout=&quot;inline&quot;</span><br><span class="line">    @submit=&quot;doSearch&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;a-form-item field=&quot;userName&quot; label=&quot;用户名&quot;&gt;</span><br><span class="line">      &lt;a-input</span><br><span class="line">        allow-clear</span><br><span class="line">        v-model=&quot;formSearchParams.userName&quot;</span><br><span class="line">        placeholder=&quot;请输入用户名&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">    &lt;a-form-item field=&quot;userProfile&quot; label=&quot;用户简介&quot;&gt;</span><br><span class="line">      &lt;a-input</span><br><span class="line">        allow-clear</span><br><span class="line">        v-model=&quot;formSearchParams.userProfile&quot;</span><br><span class="line">        placeholder=&quot;请输入用户简介&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">    &lt;a-form-item&gt;</span><br><span class="line">      &lt;a-button type=&quot;primary&quot; html-type=&quot;submit&quot; style=&quot;width: 90px&quot;&gt;</span><br><span class="line">        搜索</span><br><span class="line">      &lt;/a-button&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">  &lt;/a-form&gt;</span><br><span class="line"></span><br><span class="line">  &lt;a-table</span><br><span class="line">    :columns=&quot;columns&quot;</span><br><span class="line">    :data=&quot;dataList&quot;</span><br><span class="line">    :pagination=&quot;&#123;</span><br><span class="line">      showTotal: true,</span><br><span class="line">      pageSize: searchParams.pageSize,</span><br><span class="line">      current: searchParams.current,</span><br><span class="line">      total,</span><br><span class="line">    &#125;&quot;</span><br><span class="line">    @page-change=&quot;onPageChange&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;template #userAvatar=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &lt;a-image width=&quot;64&quot; :src=&quot;record.userAvatar&quot; /&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #createTime=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123; dayjs(record.createTime).format(&quot;YYYY-MM-DD HH:mm:ss&quot;) &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #updateTime=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123; dayjs(record.updateTime).format(&quot;YYYY-MM-DD HH:mm:ss&quot;) &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #optional=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &lt;a-space&gt;</span><br><span class="line">        &lt;a-button status=&quot;danger&quot; @click=&quot;doDelete(record)&quot;&gt;删除&lt;/a-button&gt;</span><br><span class="line">      &lt;/a-space&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/a-table&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref, watchEffect &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123;</span><br><span class="line">  deleteUserUsingPost,</span><br><span class="line">  listUserByPageUsingPost,</span><br><span class="line">&#125; from &quot;@/api/userController&quot;;</span><br><span class="line">import API from &quot;@/api&quot;;</span><br><span class="line">import message from &quot;@arco-design/web-vue/es/message&quot;;</span><br><span class="line">import dayjs from &quot;dayjs&quot;;</span><br><span class="line"></span><br><span class="line">const formSearchParams = ref&lt;API.UserQueryRequest&gt;(&#123;&#125;);</span><br><span class="line"></span><br><span class="line">// 初始化搜索条件（不应该被修改）</span><br><span class="line">const initSearchParams = &#123;</span><br><span class="line">  current: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const searchParams = ref&lt;API.UserQueryRequest&gt;(&#123;</span><br><span class="line">  ...initSearchParams,</span><br><span class="line">&#125;);</span><br><span class="line">const dataList = ref&lt;API.User[]&gt;([]);</span><br><span class="line">const total = ref&lt;number&gt;(0);</span><br><span class="line">const loadData = async () =&gt; &#123;</span><br><span class="line">  const res = await listUserByPageUsingPost(searchParams.value);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    dataList.value = res.data.data?.records || [];</span><br><span class="line">    total.value = res.data.data?.total || 0;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取数据失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">/**</span><br><span class="line"> * 执行搜索</span><br><span class="line"> */</span><br><span class="line">const doSearch = () =&gt; &#123;</span><br><span class="line">  searchParams.value = &#123;</span><br><span class="line">    ...initSearchParams,</span><br><span class="line">    ...formSearchParams.value,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 当分页变化时，渲染不同的数据</span><br><span class="line"> * @param page</span><br><span class="line"> */</span><br><span class="line">const onPageChange = (page: number) =&gt; &#123;</span><br><span class="line">  searchParams.value = &#123;</span><br><span class="line">    ...searchParams.value,</span><br><span class="line">    current: page,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 删除</span><br><span class="line"> * @param record</span><br><span class="line"> */</span><br><span class="line">const doDelete = async (record: API.User) =&gt; &#123;</span><br><span class="line">  if (!record.id) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  const res = await deleteUserUsingPost(&#123;</span><br><span class="line">    id: record.id,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    loadData();</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;删除失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 监视页面变化，如果变化，则立即重新渲染页面</span><br><span class="line"> */</span><br><span class="line">watchEffect(() =&gt; &#123;</span><br><span class="line">  loadData();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 表格列配置</span><br><span class="line"> */</span><br><span class="line">const columns = [</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;id&quot;,</span><br><span class="line">    dataIndex: &quot;id&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;账号&quot;,</span><br><span class="line">    dataIndex: &quot;userAccount&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;用户名&quot;,</span><br><span class="line">    dataIndex: &quot;userName&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;用户头像&quot;,</span><br><span class="line">    dataIndex: &quot;userAvatar&quot;,</span><br><span class="line">    slotName: &quot;userAvatar&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;用户简介&quot;,</span><br><span class="line">    dataIndex: &quot;userProfile&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;权限&quot;,</span><br><span class="line">    dataIndex: &quot;userRole&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;创建时间&quot;,</span><br><span class="line">    dataIndex: &quot;createTime&quot;,</span><br><span class="line">    slotName: &quot;createTime&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;更新时间&quot;,</span><br><span class="line">    dataIndex: &quot;updateTime&quot;,</span><br><span class="line">    slotName: &quot;updateTime&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;操作&quot;,</span><br><span class="line">    slotName: &quot;optional&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="应用管理页面"><a href="#应用管理页面" class="headerlink" title="应用管理页面"></a>应用管理页面</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;a-form</span><br><span class="line">    :model=&quot;formSearchParams&quot;</span><br><span class="line">    :style=&quot;&#123; marginBottom: &#x27;20px&#x27; &#125;&quot;</span><br><span class="line">    layout=&quot;inline&quot;</span><br><span class="line">    @submit=&quot;doSearch&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;a-form-item field=&quot;appName&quot; label=&quot;应用名称&quot;&gt;</span><br><span class="line">      &lt;a-input</span><br><span class="line">        v-model=&quot;formSearchParams.appName&quot;</span><br><span class="line">        placeholder=&quot;请输入应用名称&quot;</span><br><span class="line">        allow-clear</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">    &lt;a-form-item field=&quot;appDesc&quot; label=&quot;应用描述&quot;&gt;</span><br><span class="line">      &lt;a-input</span><br><span class="line">        v-model=&quot;formSearchParams.appDesc&quot;</span><br><span class="line">        placeholder=&quot;请输入应用描述&quot;</span><br><span class="line">        allow-clear</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">    &lt;a-form-item&gt;</span><br><span class="line">      &lt;a-button type=&quot;primary&quot; html-type=&quot;submit&quot; style=&quot;width: 100px&quot;&gt;</span><br><span class="line">        搜索</span><br><span class="line">      &lt;/a-button&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">  &lt;/a-form&gt;</span><br><span class="line">  &lt;a-table</span><br><span class="line">    :columns=&quot;columns&quot;</span><br><span class="line">    :data=&quot;dataList&quot;</span><br><span class="line">    :pagination=&quot;&#123;</span><br><span class="line">      showTotal: true,</span><br><span class="line">      pageSize: searchParams.pageSize,</span><br><span class="line">      current: searchParams.current,</span><br><span class="line">      total,</span><br><span class="line">    &#125;&quot;</span><br><span class="line">    @page-change=&quot;onPageChange&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;template #appIcon=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &lt;a-image width=&quot;64&quot; :src=&quot;record.appIcon&quot; /&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #appType=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123; APP_TYPE_MAP[record.appType] &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #scoringStrategy=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123; APP_SCORING_STRATEGY_MAP[record.scoringStrategy] &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #reviewStatus=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123; REVIEW_STATUS_MAP[record.reviewStatus] &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #reviewTime=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123;</span><br><span class="line">        record.reviewTime &amp;&amp;</span><br><span class="line">        dayjs(record.reviewTime).format(&quot;YYYY-MM-DD HH:mm:ss&quot;)</span><br><span class="line">      &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #createTime=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123; dayjs(record.createTime).format(&quot;YYYY-MM-DD HH:mm:ss&quot;) &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #updateTime=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123; dayjs(record.updateTime).format(&quot;YYYY-MM-DD HH:mm:ss&quot;) &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #optional=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &lt;a-space&gt;</span><br><span class="line">        &lt;a-button</span><br><span class="line">          v-if=&quot;record.reviewStatus !== REVIEW_STATUS_ENUM.PASS&quot;</span><br><span class="line">          status=&quot;success&quot;</span><br><span class="line">          @click=&quot;doReview(record, REVIEW_STATUS_ENUM.PASS, &#x27;&#x27;)&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          通过</span><br><span class="line">        &lt;/a-button&gt;</span><br><span class="line">        &lt;a-button</span><br><span class="line">          v-if=&quot;record.reviewStatus !== REVIEW_STATUS_ENUM.REJECT&quot;</span><br><span class="line">          status=&quot;warning&quot;</span><br><span class="line">          @click=&quot;doReview(record, REVIEW_STATUS_ENUM.REJECT, &#x27;不符合上架要求&#x27;)&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          拒绝</span><br><span class="line">        &lt;/a-button&gt;</span><br><span class="line">        &lt;a-button status=&quot;danger&quot; @click=&quot;doDelete(record)&quot;&gt;删除&lt;/a-button&gt;</span><br><span class="line">      &lt;/a-space&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/a-table&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref, watchEffect &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123;</span><br><span class="line">  deleteAppUsingPost,</span><br><span class="line">  doAppReviewUsingPost,</span><br><span class="line">  listAppByPageUsingPost,</span><br><span class="line">&#125; from &quot;@/api/appController&quot;;</span><br><span class="line">import API from &quot;@/api&quot;;</span><br><span class="line">import message from &quot;@arco-design/web-vue/es/message&quot;;</span><br><span class="line">import &#123; dayjs &#125; from &quot;@arco-design/web-vue/es/_utils/date&quot;;</span><br><span class="line">import &#123;</span><br><span class="line">  APP_SCORING_STRATEGY_MAP,</span><br><span class="line">  APP_TYPE_MAP,</span><br><span class="line">  REVIEW_STATUS_ENUM,</span><br><span class="line">  REVIEW_STATUS_MAP,</span><br><span class="line">&#125; from &quot;@/constant/app&quot;;</span><br><span class="line"></span><br><span class="line">const formSearchParams = ref&lt;API.AppQueryRequest&gt;(&#123;&#125;);</span><br><span class="line"></span><br><span class="line">// 初始化搜索条件（不应该被修改）</span><br><span class="line">const initSearchParams = &#123;</span><br><span class="line">  current: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const searchParams = ref&lt;API.AppQueryRequest&gt;(&#123;</span><br><span class="line">  ...initSearchParams,</span><br><span class="line">&#125;);</span><br><span class="line">const dataList = ref&lt;API.App[]&gt;([]);</span><br><span class="line">const total = ref&lt;number&gt;(0);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 加载数据</span><br><span class="line"> */</span><br><span class="line">const loadData = async () =&gt; &#123;</span><br><span class="line">  const res = await listAppByPageUsingPost(searchParams.value);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    dataList.value = res.data.data?.records || [];</span><br><span class="line">    total.value = res.data.data?.total || 0;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取数据失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 执行搜索</span><br><span class="line"> */</span><br><span class="line">const doSearch = () =&gt; &#123;</span><br><span class="line">  searchParams.value = &#123;</span><br><span class="line">    ...initSearchParams,</span><br><span class="line">    ...formSearchParams.value,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 当分页变化时，改变搜索条件，触发数据加载</span><br><span class="line"> * @param page</span><br><span class="line"> */</span><br><span class="line">const onPageChange = (page: number) =&gt; &#123;</span><br><span class="line">  searchParams.value = &#123;</span><br><span class="line">    ...searchParams.value,</span><br><span class="line">    current: page,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 删除</span><br><span class="line"> * @param record</span><br><span class="line"> */</span><br><span class="line">const doDelete = async (record: API.App) =&gt; &#123;</span><br><span class="line">  if (!record.id) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  const res = await deleteAppUsingPost(&#123;</span><br><span class="line">    id: record.id,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    loadData();</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;删除失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 审核</span><br><span class="line"> * @param record</span><br><span class="line"> * @param reviewStatus</span><br><span class="line"> * @param reviewMessage</span><br><span class="line"> */</span><br><span class="line">const doReview = async (</span><br><span class="line">  record: API.App,</span><br><span class="line">  reviewStatus: number,</span><br><span class="line">  reviewMessage?: string</span><br><span class="line">) =&gt; &#123;</span><br><span class="line">  if (!record.id) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  const res = await doAppReviewUsingPost(&#123;</span><br><span class="line">    id: record.id,</span><br><span class="line">    reviewStatus,</span><br><span class="line">    reviewMessage,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    loadData();</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;审核失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 监听 searchParams 变量，改变时触发数据的重新加载</span><br><span class="line"> */</span><br><span class="line">watchEffect(() =&gt; &#123;</span><br><span class="line">  loadData();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 表格列配置</span><br><span class="line">const columns = [</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;id&quot;,</span><br><span class="line">    dataIndex: &quot;id&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;名称&quot;,</span><br><span class="line">    dataIndex: &quot;appName&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;描述&quot;,</span><br><span class="line">    dataIndex: &quot;appDesc&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;图标&quot;,</span><br><span class="line">    dataIndex: &quot;appIcon&quot;,</span><br><span class="line">    slotName: &quot;appIcon&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;应用类型&quot;,</span><br><span class="line">    dataIndex: &quot;appType&quot;,</span><br><span class="line">    slotName: &quot;appType&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;评分策略&quot;,</span><br><span class="line">    dataIndex: &quot;scoringStrategy&quot;,</span><br><span class="line">    slotName: &quot;scoringStrategy&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;审核状态&quot;,</span><br><span class="line">    dataIndex: &quot;reviewStatus&quot;,</span><br><span class="line">    slotName: &quot;reviewStatus&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;审核信息&quot;,</span><br><span class="line">    dataIndex: &quot;reviewMessage&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;审核时间&quot;,</span><br><span class="line">    dataIndex: &quot;reviewTime&quot;,</span><br><span class="line">    slotName: &quot;reviewTime&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;审核人 id&quot;,</span><br><span class="line">    dataIndex: &quot;reviewerId&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;用户 id&quot;,</span><br><span class="line">    dataIndex: &quot;userId&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;创建时间&quot;,</span><br><span class="line">    dataIndex: &quot;createTime&quot;,</span><br><span class="line">    slotName: &quot;createTime&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;更新时间&quot;,</span><br><span class="line">    dataIndex: &quot;updateTime&quot;,</span><br><span class="line">    slotName: &quot;updateTime&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;操作&quot;,</span><br><span class="line">    slotName: &quot;optional&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="题目管理页面"><a href="#题目管理页面" class="headerlink" title="题目管理页面"></a>题目管理页面</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;a-form</span><br><span class="line">    :model=&quot;formSearchParams&quot;</span><br><span class="line">    :style=&quot;&#123; marginBottom: &#x27;20px&#x27; &#125;&quot;</span><br><span class="line">    layout=&quot;inline&quot;</span><br><span class="line">    @submit=&quot;doSearch&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;a-form-item field=&quot;appId&quot; label=&quot;应用 id&quot;&gt;</span><br><span class="line">      &lt;a-input</span><br><span class="line">        v-model=&quot;formSearchParams.appId&quot;</span><br><span class="line">        placeholder=&quot;请输入应用 id&quot;</span><br><span class="line">        allow-clear</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">    &lt;a-form-item field=&quot;userId&quot; label=&quot;用户 id&quot;&gt;</span><br><span class="line">      &lt;a-input</span><br><span class="line">        v-model=&quot;formSearchParams.userId&quot;</span><br><span class="line">        placeholder=&quot;请输入用户 id&quot;</span><br><span class="line">        allow-clear</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">    &lt;a-form-item&gt;</span><br><span class="line">      &lt;a-button type=&quot;primary&quot; html-type=&quot;submit&quot; style=&quot;width: 100px&quot;&gt;</span><br><span class="line">        搜索</span><br><span class="line">      &lt;/a-button&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">  &lt;/a-form&gt;</span><br><span class="line">  &lt;a-table</span><br><span class="line">    :columns=&quot;columns&quot;</span><br><span class="line">    :data=&quot;dataList&quot;</span><br><span class="line">    :pagination=&quot;&#123;</span><br><span class="line">      showTotal: true,</span><br><span class="line">      pageSize: searchParams.pageSize,</span><br><span class="line">      current: searchParams.current,</span><br><span class="line">      total,</span><br><span class="line">    &#125;&quot;</span><br><span class="line">    @page-change=&quot;onPageChange&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;template #questionContent=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        v-for=&quot;question in JSON.parse(record.questionContent)&quot;</span><br><span class="line">        :key=&quot;question.title&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &#123;&#123; question &#125;&#125;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #createTime=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123; dayjs(record.createTime).format(&quot;YYYY-MM-DD HH:mm:ss&quot;) &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #updateTime=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123; dayjs(record.updateTime).format(&quot;YYYY-MM-DD HH:mm:ss&quot;) &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #optional=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &lt;a-space&gt;</span><br><span class="line">        &lt;a-button status=&quot;danger&quot; @click=&quot;doDelete(record)&quot;&gt;删除&lt;/a-button&gt;</span><br><span class="line">      &lt;/a-space&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/a-table&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref, watchEffect &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123;</span><br><span class="line">  deleteQuestionUsingPost,</span><br><span class="line">  listQuestionByPageUsingPost,</span><br><span class="line">&#125; from &quot;@/api/questionController&quot;;</span><br><span class="line">import API from &quot;@/api&quot;;</span><br><span class="line">import message from &quot;@arco-design/web-vue/es/message&quot;;</span><br><span class="line">import &#123; dayjs &#125; from &quot;@arco-design/web-vue/es/_utils/date&quot;;</span><br><span class="line"></span><br><span class="line">const formSearchParams = ref&lt;API.QuestionQueryRequest&gt;(&#123;&#125;);</span><br><span class="line"></span><br><span class="line">// 初始化搜索条件（不应该被修改）</span><br><span class="line">const initSearchParams = &#123;</span><br><span class="line">  current: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const searchParams = ref&lt;API.QuestionQueryRequest&gt;(&#123;</span><br><span class="line">  ...initSearchParams,</span><br><span class="line">&#125;);</span><br><span class="line">const dataList = ref&lt;API.Question[]&gt;([]);</span><br><span class="line">const total = ref&lt;number&gt;(0);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 加载数据</span><br><span class="line"> */</span><br><span class="line">const loadData = async () =&gt; &#123;</span><br><span class="line">  const res = await listQuestionByPageUsingPost(searchParams.value);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    dataList.value = res.data.data?.records || [];</span><br><span class="line">    total.value = res.data.data?.total || 0;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取数据失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 执行搜索</span><br><span class="line"> */</span><br><span class="line">const doSearch = () =&gt; &#123;</span><br><span class="line">  searchParams.value = &#123;</span><br><span class="line">    ...initSearchParams,</span><br><span class="line">    ...formSearchParams.value,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 当分页变化时，改变搜索条件，触发数据加载</span><br><span class="line"> * @param page</span><br><span class="line"> */</span><br><span class="line">const onPageChange = (page: number) =&gt; &#123;</span><br><span class="line">  searchParams.value = &#123;</span><br><span class="line">    ...searchParams.value,</span><br><span class="line">    current: page,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 删除</span><br><span class="line"> * @param record</span><br><span class="line"> */</span><br><span class="line">const doDelete = async (record: API.Question) =&gt; &#123;</span><br><span class="line">  if (!record.id) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  const res = await deleteQuestionUsingPost(&#123;</span><br><span class="line">    id: record.id,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    loadData();</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;删除失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 监听 searchParams 变量，改变时触发数据的重新加载</span><br><span class="line"> */</span><br><span class="line">watchEffect(() =&gt; &#123;</span><br><span class="line">  loadData();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 表格列配置</span><br><span class="line">const columns = [</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;id&quot;,</span><br><span class="line">    dataIndex: &quot;id&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;题目内容&quot;,</span><br><span class="line">    dataIndex: &quot;questionContent&quot;,</span><br><span class="line">    slotName: &quot;questionContent&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;应用 id&quot;,</span><br><span class="line">    dataIndex: &quot;appId&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;用户 id&quot;,</span><br><span class="line">    dataIndex: &quot;userId&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;创建时间&quot;,</span><br><span class="line">    dataIndex: &quot;createTime&quot;,</span><br><span class="line">    slotName: &quot;createTime&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;更新时间&quot;,</span><br><span class="line">    dataIndex: &quot;updateTime&quot;,</span><br><span class="line">    slotName: &quot;updateTime&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;操作&quot;,</span><br><span class="line">    slotName: &quot;optional&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="评分结果页面"><a href="#评分结果页面" class="headerlink" title="评分结果页面"></a>评分结果页面</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;a-form</span><br><span class="line">    :model=&quot;formSearchParams&quot;</span><br><span class="line">    :style=&quot;&#123; marginBottom: &#x27;20px&#x27; &#125;&quot;</span><br><span class="line">    layout=&quot;inline&quot;</span><br><span class="line">    @submit=&quot;doSearch&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;a-form-item field=&quot;resultName&quot; label=&quot;结果名称&quot;&gt;</span><br><span class="line">      &lt;a-input</span><br><span class="line">        v-model=&quot;formSearchParams.resultName&quot;</span><br><span class="line">        placeholder=&quot;请输入结果名称&quot;</span><br><span class="line">        allow-clear</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">    &lt;a-form-item field=&quot;resultDesc&quot; label=&quot;结果描述&quot;&gt;</span><br><span class="line">      &lt;a-input</span><br><span class="line">        v-model=&quot;formSearchParams.resultDesc&quot;</span><br><span class="line">        placeholder=&quot;请输入结果描述&quot;</span><br><span class="line">        allow-clear</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">    &lt;a-form-item field=&quot;appId&quot; label=&quot;应用 id&quot;&gt;</span><br><span class="line">      &lt;a-input</span><br><span class="line">        v-model=&quot;formSearchParams.appId&quot;</span><br><span class="line">        placeholder=&quot;请输入应用 id&quot;</span><br><span class="line">        allow-clear</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">    &lt;a-form-item field=&quot;userId&quot; label=&quot;用户 id&quot;&gt;</span><br><span class="line">      &lt;a-input</span><br><span class="line">        v-model=&quot;formSearchParams.userId&quot;</span><br><span class="line">        placeholder=&quot;请输入用户 id&quot;</span><br><span class="line">        allow-clear</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">    &lt;a-form-item&gt;</span><br><span class="line">      &lt;a-button type=&quot;primary&quot; html-type=&quot;submit&quot; style=&quot;width: 100px&quot;&gt;</span><br><span class="line">        搜索</span><br><span class="line">      &lt;/a-button&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">  &lt;/a-form&gt;</span><br><span class="line">  &lt;a-table</span><br><span class="line">    :columns=&quot;columns&quot;</span><br><span class="line">    :data=&quot;dataList&quot;</span><br><span class="line">    :pagination=&quot;&#123;</span><br><span class="line">      showTotal: true,</span><br><span class="line">      pageSize: searchParams.pageSize,</span><br><span class="line">      current: searchParams.current,</span><br><span class="line">      total,</span><br><span class="line">    &#125;&quot;</span><br><span class="line">    @page-change=&quot;onPageChange&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;template #resultPicture=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &lt;a-image width=&quot;64&quot; :src=&quot;record.resultPicture&quot; /&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #createTime=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123; dayjs(record.createTime).format(&quot;YYYY-MM-DD HH:mm:ss&quot;) &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #updateTime=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123; dayjs(record.updateTime).format(&quot;YYYY-MM-DD HH:mm:ss&quot;) &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #optional=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &lt;a-space&gt;</span><br><span class="line">        &lt;a-button status=&quot;danger&quot; @click=&quot;doDelete(record)&quot;&gt;删除&lt;/a-button&gt;</span><br><span class="line">      &lt;/a-space&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/a-table&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref, watchEffect &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123;</span><br><span class="line">  deleteScoringResultUsingPost,</span><br><span class="line">  listScoringResultByPageUsingPost,</span><br><span class="line">&#125; from &quot;@/api/scoringResultController&quot;;</span><br><span class="line">import API from &quot;@/api&quot;;</span><br><span class="line">import message from &quot;@arco-design/web-vue/es/message&quot;;</span><br><span class="line">import &#123; dayjs &#125; from &quot;@arco-design/web-vue/es/_utils/date&quot;;</span><br><span class="line"></span><br><span class="line">const formSearchParams = ref&lt;API.ScoringResultQueryRequest&gt;(&#123;&#125;);</span><br><span class="line"></span><br><span class="line">// 初始化搜索条件（不应该被修改）</span><br><span class="line">const initSearchParams = &#123;</span><br><span class="line">  current: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const searchParams = ref&lt;API.ScoringResultQueryRequest&gt;(&#123;</span><br><span class="line">  ...initSearchParams,</span><br><span class="line">&#125;);</span><br><span class="line">const dataList = ref&lt;API.ScoringResult[]&gt;([]);</span><br><span class="line">const total = ref&lt;number&gt;(0);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 加载数据</span><br><span class="line"> */</span><br><span class="line">const loadData = async () =&gt; &#123;</span><br><span class="line">  const res = await listScoringResultByPageUsingPost(searchParams.value);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    dataList.value = res.data.data?.records || [];</span><br><span class="line">    total.value = res.data.data?.total || 0;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取数据失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 执行搜索</span><br><span class="line"> */</span><br><span class="line">const doSearch = () =&gt; &#123;</span><br><span class="line">  searchParams.value = &#123;</span><br><span class="line">    ...initSearchParams,</span><br><span class="line">    ...formSearchParams.value,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 当分页变化时，改变搜索条件，触发数据加载</span><br><span class="line"> * @param page</span><br><span class="line"> */</span><br><span class="line">const onPageChange = (page: number) =&gt; &#123;</span><br><span class="line">  searchParams.value = &#123;</span><br><span class="line">    ...searchParams.value,</span><br><span class="line">    current: page,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 删除</span><br><span class="line"> * @param record</span><br><span class="line"> */</span><br><span class="line">const doDelete = async (record: API.ScoringResult) =&gt; &#123;</span><br><span class="line">  if (!record.id) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  const res = await deleteScoringResultUsingPost(&#123;</span><br><span class="line">    id: record.id,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    loadData();</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;删除失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 监听 searchParams 变量，改变时触发数据的重新加载</span><br><span class="line"> */</span><br><span class="line">watchEffect(() =&gt; &#123;</span><br><span class="line">  loadData();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 表格列配置</span><br><span class="line">const columns = [</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;id&quot;,</span><br><span class="line">    dataIndex: &quot;id&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;名称&quot;,</span><br><span class="line">    dataIndex: &quot;resultName&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;描述&quot;,</span><br><span class="line">    dataIndex: &quot;resultDesc&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;图片&quot;,</span><br><span class="line">    dataIndex: &quot;resultPicture&quot;,</span><br><span class="line">    slotName: &quot;resultPicture&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;结果属性&quot;,</span><br><span class="line">    dataIndex: &quot;resultProp&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;评分范围&quot;,</span><br><span class="line">    dataIndex: &quot;resultScoreRange&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;应用 id&quot;,</span><br><span class="line">    dataIndex: &quot;appId&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;用户 id&quot;,</span><br><span class="line">    dataIndex: &quot;userId&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;创建时间&quot;,</span><br><span class="line">    dataIndex: &quot;createTime&quot;,</span><br><span class="line">    slotName: &quot;createTime&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;更新时间&quot;,</span><br><span class="line">    dataIndex: &quot;updateTime&quot;,</span><br><span class="line">    slotName: &quot;updateTime&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;操作&quot;,</span><br><span class="line">    slotName: &quot;optional&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="回答管理页面"><a href="#回答管理页面" class="headerlink" title="回答管理页面"></a>回答管理页面</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;a-form</span><br><span class="line">    :model=&quot;formSearchParams&quot;</span><br><span class="line">    :style=&quot;&#123; marginBottom: &#x27;20px&#x27; &#125;&quot;</span><br><span class="line">    layout=&quot;inline&quot;</span><br><span class="line">    @submit=&quot;doSearch&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;a-form-item field=&quot;resultName&quot; label=&quot;结果名称&quot;&gt;</span><br><span class="line">      &lt;a-input</span><br><span class="line">        v-model=&quot;formSearchParams.resultName&quot;</span><br><span class="line">        placeholder=&quot;请输入结果名称&quot;</span><br><span class="line">        allow-clear</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">    &lt;a-form-item field=&quot;resultDesc&quot; label=&quot;结果描述&quot;&gt;</span><br><span class="line">      &lt;a-input</span><br><span class="line">        v-model=&quot;formSearchParams.resultDesc&quot;</span><br><span class="line">        placeholder=&quot;请输入结果描述&quot;</span><br><span class="line">        allow-clear</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">    &lt;a-form-item field=&quot;appId&quot; label=&quot;应用 id&quot;&gt;</span><br><span class="line">      &lt;a-input</span><br><span class="line">        v-model=&quot;formSearchParams.appId&quot;</span><br><span class="line">        placeholder=&quot;请输入应用 id&quot;</span><br><span class="line">        allow-clear</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">    &lt;a-form-item field=&quot;userId&quot; label=&quot;用户 id&quot;&gt;</span><br><span class="line">      &lt;a-input</span><br><span class="line">        v-model=&quot;formSearchParams.userId&quot;</span><br><span class="line">        placeholder=&quot;请输入用户 id&quot;</span><br><span class="line">        allow-clear</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">    &lt;a-form-item&gt;</span><br><span class="line">      &lt;a-button type=&quot;primary&quot; html-type=&quot;submit&quot; style=&quot;width: 100px&quot;&gt;</span><br><span class="line">        搜索</span><br><span class="line">      &lt;/a-button&gt;</span><br><span class="line">    &lt;/a-form-item&gt;</span><br><span class="line">  &lt;/a-form&gt;</span><br><span class="line">  &lt;a-table</span><br><span class="line">    :columns=&quot;columns&quot;</span><br><span class="line">    :data=&quot;dataList&quot;</span><br><span class="line">    :pagination=&quot;&#123;</span><br><span class="line">      showTotal: true,</span><br><span class="line">      pageSize: searchParams.pageSize,</span><br><span class="line">      current: searchParams.current,</span><br><span class="line">      total,</span><br><span class="line">    &#125;&quot;</span><br><span class="line">    @page-change=&quot;onPageChange&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;template #resultPicture=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &lt;a-image width=&quot;64&quot; :src=&quot;record.resultPicture&quot; /&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #appType=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123; APP_TYPE_MAP[record.appType] &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #scoringStrategy=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123; APP_SCORING_STRATEGY_MAP[record.scoringStrategy] &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #createTime=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123; dayjs(record.createTime).format(&quot;YYYY-MM-DD HH:mm:ss&quot;) &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #updateTime=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &#123;&#123; dayjs(record.updateTime).format(&quot;YYYY-MM-DD HH:mm:ss&quot;) &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #optional=&quot;&#123; record &#125;&quot;&gt;</span><br><span class="line">      &lt;a-space&gt;</span><br><span class="line">        &lt;a-button status=&quot;danger&quot; @click=&quot;doDelete(record)&quot;&gt;删除&lt;/a-button&gt;</span><br><span class="line">      &lt;/a-space&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/a-table&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref, watchEffect &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123;</span><br><span class="line">  deleteUserAnswerUsingPost,</span><br><span class="line">  listUserAnswerByPageUsingPost,</span><br><span class="line">&#125; from &quot;@/api/userAnswerController&quot;;</span><br><span class="line">import API from &quot;@/api&quot;;</span><br><span class="line">import message from &quot;@arco-design/web-vue/es/message&quot;;</span><br><span class="line">import &#123; dayjs &#125; from &quot;@arco-design/web-vue/es/_utils/date&quot;;</span><br><span class="line">import &#123; APP_SCORING_STRATEGY_MAP, APP_TYPE_MAP &#125; from &quot;@/constant/app&quot;;</span><br><span class="line"></span><br><span class="line">const formSearchParams = ref&lt;API.UserAnswerQueryRequest&gt;(&#123;&#125;);</span><br><span class="line"></span><br><span class="line">// 初始化搜索条件（不应该被修改）</span><br><span class="line">const initSearchParams = &#123;</span><br><span class="line">  current: 1,</span><br><span class="line">  pageSize: 10,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const searchParams = ref&lt;API.UserAnswerQueryRequest&gt;(&#123;</span><br><span class="line">  ...initSearchParams,</span><br><span class="line">&#125;);</span><br><span class="line">const dataList = ref&lt;API.UserAnswer[]&gt;([]);</span><br><span class="line">const total = ref&lt;number&gt;(0);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 加载数据</span><br><span class="line"> */</span><br><span class="line">const loadData = async () =&gt; &#123;</span><br><span class="line">  const res = await listUserAnswerByPageUsingPost(searchParams.value);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    dataList.value = res.data.data?.records || [];</span><br><span class="line">    total.value = res.data.data?.total || 0;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;获取数据失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 执行搜索</span><br><span class="line"> */</span><br><span class="line">const doSearch = () =&gt; &#123;</span><br><span class="line">  searchParams.value = &#123;</span><br><span class="line">    ...initSearchParams,</span><br><span class="line">    ...formSearchParams.value,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 当分页变化时，改变搜索条件，触发数据加载</span><br><span class="line"> * @param page</span><br><span class="line"> */</span><br><span class="line">const onPageChange = (page: number) =&gt; &#123;</span><br><span class="line">  searchParams.value = &#123;</span><br><span class="line">    ...searchParams.value,</span><br><span class="line">    current: page,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 删除</span><br><span class="line"> * @param record</span><br><span class="line"> */</span><br><span class="line">const doDelete = async (record: API.UserAnswer) =&gt; &#123;</span><br><span class="line">  if (!record.id) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  const res = await deleteUserAnswerUsingPost(&#123;</span><br><span class="line">    id: record.id,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (res.data.code === 0) &#123;</span><br><span class="line">    loadData();</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    message.error(&quot;删除失败，&quot; + res.data.message);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 监听 searchParams 变量，改变时触发数据的重新加载</span><br><span class="line"> */</span><br><span class="line">watchEffect(() =&gt; &#123;</span><br><span class="line">  loadData();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 表格列配置</span><br><span class="line">const columns = [</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;id&quot;,</span><br><span class="line">    dataIndex: &quot;id&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;选项&quot;,</span><br><span class="line">    dataIndex: &quot;choices&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;结果 id&quot;,</span><br><span class="line">    dataIndex: &quot;resultId&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;名称&quot;,</span><br><span class="line">    dataIndex: &quot;resultName&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;描述&quot;,</span><br><span class="line">    dataIndex: &quot;resultDesc&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;图片&quot;,</span><br><span class="line">    dataIndex: &quot;resultPicture&quot;,</span><br><span class="line">    slotName: &quot;resultPicture&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;得分&quot;,</span><br><span class="line">    dataIndex: &quot;resultScore&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;应用 id&quot;,</span><br><span class="line">    dataIndex: &quot;appId&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;应用类型&quot;,</span><br><span class="line">    dataIndex: &quot;appType&quot;,</span><br><span class="line">    slotName: &quot;appType&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;评分策略&quot;,</span><br><span class="line">    dataIndex: &quot;scoringStrategy&quot;,</span><br><span class="line">    slotName: &quot;scoringStrategy&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;用户 id&quot;,</span><br><span class="line">    dataIndex: &quot;userId&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;创建时间&quot;,</span><br><span class="line">    dataIndex: &quot;createTime&quot;,</span><br><span class="line">    slotName: &quot;createTime&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;更新时间&quot;,</span><br><span class="line">    dataIndex: &quot;updateTime&quot;,</span><br><span class="line">    slotName: &quot;updateTime&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: &quot;操作&quot;,</span><br><span class="line">    slotName: &quot;optional&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> AI答题应用平台 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java项目 </tag>
            
            <tag> AI答题应用平台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI答题应用平台_2后端开发</title>
      <link href="/2024/07/03/AI%E7%AD%94%E9%A2%98%E5%BA%94%E7%94%A8%E5%B9%B3%E5%8F%B0_2%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
      <url>/2024/07/03/AI%E7%AD%94%E9%A2%98%E5%BA%94%E7%94%A8%E5%B9%B3%E5%8F%B0_2%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p>后台开发的基本步骤</p><ul><li>需求分析</li><li>库表设计</li><li>后端项目初始化</li><li>后端项目基础开发-增删改查</li><li>后端核心业务开发</li></ul><h1 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h1><h2 id="用户模块"><a href="#用户模块" class="headerlink" title="用户模块"></a>用户模块</h2><ul><li>注册</li><li>登录</li><li>管理（增删改查）</li></ul><h2 id="应用模块"><a href="#应用模块" class="headerlink" title="应用模块"></a>应用模块</h2><ul><li>创建应用</li><li>修改应用</li><li>删除应用</li><li>查看应用详情</li><li>查看应用列表</li><li>查看自己创建的应用</li><li>分享应用</li><li>管理应用-增删改查（仅管理员）</li><li>管理应用-上线和下架（仅管理员）</li></ul><h2 id="题目模块"><a href="#题目模块" class="headerlink" title="题目模块"></a>题目模块</h2><ul><li>创建题目</li><li>删除题目</li><li>修改题目</li><li>管理题目-增删改查（仅管理员）</li><li>AI生成题目</li></ul><h2 id="评分模块"><a href="#评分模块" class="headerlink" title="评分模块"></a>评分模块</h2><ul><li>创建评分结果</li><li>删除评分结果</li><li>修改评分结果</li><li>计算评分结果（多种评分策略）<ul><li>自定义打分类策略</li><li>自定义测评类策略</li><li>AI分析测评类策略</li></ul></li><li>管理评分结果-增删改查（仅管理员）</li></ul><h2 id="回答模块"><a href="#回答模块" class="headerlink" title="回答模块"></a>回答模块</h2><ul><li>提交回答</li><li>查看自己提交的回答列表</li><li>查看某次回答的回答结果</li><li>管理回答-增删改查（仅管理员）</li></ul><h2 id="统计分析模块"><a href="#统计分析模块" class="headerlink" title="统计分析模块"></a>统计分析模块</h2><ul><li>应用结果分析与查看<ul><li>分析热门应用</li><li>分析某一应用下的结果比例</li></ul></li></ul><h1 id="库表设计"><a href="#库表设计" class="headerlink" title="库表设计"></a>库表设计</h1><p>本项目主要涉及5个库表，包括：<strong>用户表</strong>、<strong>应用表</strong>、<strong>题目表</strong>、<strong>用户回答表</strong>、<strong>评分结果表.</strong></p><h2 id="用户表"><a href="#用户表" class="headerlink" title="用户表"></a><strong>用户表</strong></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 用户表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> <span class="keyword">user</span></span><br><span class="line">(</span><br><span class="line">    id           <span class="type">bigint</span> auto_increment comment <span class="string">&#x27;id&#x27;</span> <span class="keyword">primary</span> key,</span><br><span class="line">    userAccount  <span class="type">varchar</span>(<span class="number">256</span>)                           <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;账号&#x27;</span>,</span><br><span class="line">    userPassword <span class="type">varchar</span>(<span class="number">512</span>)                           <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">    unionId      <span class="type">varchar</span>(<span class="number">256</span>)                           <span class="keyword">null</span> comment <span class="string">&#x27;微信开放平台id&#x27;</span>,</span><br><span class="line">    mpOpenId     <span class="type">varchar</span>(<span class="number">256</span>)                           <span class="keyword">null</span> comment <span class="string">&#x27;公众号openId&#x27;</span>,</span><br><span class="line">    userName     <span class="type">varchar</span>(<span class="number">256</span>)                           <span class="keyword">null</span> comment <span class="string">&#x27;用户昵称&#x27;</span>,</span><br><span class="line">    userAvatar   <span class="type">varchar</span>(<span class="number">1024</span>)                          <span class="keyword">null</span> comment <span class="string">&#x27;用户头像&#x27;</span>,</span><br><span class="line">    userProfile  <span class="type">varchar</span>(<span class="number">512</span>)                           <span class="keyword">null</span> comment <span class="string">&#x27;用户简介&#x27;</span>,</span><br><span class="line">    userRole     <span class="type">varchar</span>(<span class="number">256</span>) <span class="keyword">default</span> <span class="string">&#x27;user&#x27;</span>            <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;用户角色：user/admin/ban&#x27;</span>,</span><br><span class="line">    createTime   datetime     <span class="keyword">default</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">    updateTime   datetime     <span class="keyword">default</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">on</span> <span class="keyword">update</span> <span class="built_in">CURRENT_TIMESTAMP</span> comment <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">    isDelete     tinyint      <span class="keyword">default</span> <span class="number">0</span>                 <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;是否删除&#x27;</span>,</span><br><span class="line">    index idx_unionId (unionId)</span><br><span class="line">) comment <span class="string">&#x27;用户&#x27;</span> <span class="keyword">collate</span> <span class="operator">=</span> utf8mb4_unicode_ci;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="应用表"><a href="#应用表" class="headerlink" title="应用表"></a><strong>应用表</strong></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 应用表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> app</span><br><span class="line">(</span><br><span class="line">    id              <span class="type">bigint</span> auto_increment comment <span class="string">&#x27;id&#x27;</span> <span class="keyword">primary</span> key,</span><br><span class="line">    appName         <span class="type">varchar</span>(<span class="number">128</span>)                       <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;应用名&#x27;</span>,</span><br><span class="line">    appDesc         <span class="type">varchar</span>(<span class="number">2048</span>)                      <span class="keyword">null</span> comment <span class="string">&#x27;应用描述&#x27;</span>,</span><br><span class="line">    appIcon         <span class="type">varchar</span>(<span class="number">1024</span>)                      <span class="keyword">null</span> comment <span class="string">&#x27;应用图标&#x27;</span>,</span><br><span class="line">    appType         tinyint  <span class="keyword">default</span> <span class="number">0</span>                 <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;应用类型（0-得分类，1-测评类）&#x27;</span>,</span><br><span class="line">    scoringStrategy tinyint  <span class="keyword">default</span> <span class="number">0</span>                 <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;评分策略（0-自定义，1-AI）&#x27;</span>,</span><br><span class="line">    reviewStatus    <span class="type">int</span>      <span class="keyword">default</span> <span class="number">0</span>                 <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;审核状态：0-待审核, 1-通过, 2-拒绝&#x27;</span>,</span><br><span class="line">    reviewMessage   <span class="type">varchar</span>(<span class="number">512</span>)                       <span class="keyword">null</span> comment <span class="string">&#x27;审核信息&#x27;</span>,</span><br><span class="line">    reviewerId      <span class="type">bigint</span>                             <span class="keyword">null</span> comment <span class="string">&#x27;审核人 id&#x27;</span>,</span><br><span class="line">    reviewTime      datetime                           <span class="keyword">null</span> comment <span class="string">&#x27;审核时间&#x27;</span>,</span><br><span class="line">    userId          <span class="type">bigint</span>                             <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;创建用户 id&#x27;</span>,</span><br><span class="line">    createTime      datetime <span class="keyword">default</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">    updateTime      datetime <span class="keyword">default</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">on</span> <span class="keyword">update</span> <span class="built_in">CURRENT_TIMESTAMP</span> comment <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">    isDelete        tinyint  <span class="keyword">default</span> <span class="number">0</span>                 <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;是否删除&#x27;</span>,</span><br><span class="line">    index idx_appName (appName)</span><br><span class="line">) comment <span class="string">&#x27;应用&#x27;</span> <span class="keyword">collate</span> <span class="operator">=</span> utf8mb4_unicode_ci;</span><br></pre></td></tr></table></figure><p>其中appType和scoringStrategy是最重要的字段，appType主要有测评类和打分类，scoringStrategy主要是自定义策略以及AI分析。<br>其中审核四件套</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">reviewStatus    <span class="type">int</span>      <span class="keyword">default</span> <span class="number">0</span>                 <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;审核状态：0-待审核, 1-通过, 2-拒绝&#x27;</span>,</span><br><span class="line">reviewMessage   <span class="type">varchar</span>(<span class="number">512</span>)                       <span class="keyword">null</span> comment <span class="string">&#x27;审核信息&#x27;</span>,</span><br><span class="line">reviewerId      <span class="type">bigint</span>                             <span class="keyword">null</span> comment <span class="string">&#x27;审核人 id&#x27;</span>,</span><br><span class="line">reviewTime      datetime                           <span class="keyword">null</span> comment <span class="string">&#x27;审核时间&#x27;</span>,</span><br></pre></td></tr></table></figure><h2 id="题目表"><a href="#题目表" class="headerlink" title="题目表"></a>题目表</h2><p>每一个应用都对应一个题目表的记录，其中需要注意对于<code>questionContent</code>使用<strong>json形式</strong>来保存，所用到的数据类型是<strong>text</strong>，整体来更新或者修改应用的题目信息。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 题目表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> question</span><br><span class="line">(</span><br><span class="line">    id              <span class="type">bigint</span> auto_increment comment <span class="string">&#x27;id&#x27;</span> <span class="keyword">primary</span> key,</span><br><span class="line">    questionContent text                               <span class="keyword">null</span> comment <span class="string">&#x27;题目内容（json格式）&#x27;</span>,</span><br><span class="line">    appId           <span class="type">bigint</span>                             <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;应用 id&#x27;</span>,</span><br><span class="line">    userId          <span class="type">bigint</span>                             <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;创建用户 id&#x27;</span>,</span><br><span class="line">    createTime      datetime <span class="keyword">default</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">    updateTime      datetime <span class="keyword">default</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">on</span> <span class="keyword">update</span> <span class="built_in">CURRENT_TIMESTAMP</span> comment <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">    isDelete        tinyint  <span class="keyword">default</span> <span class="number">0</span>                 <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;是否删除&#x27;</span>,</span><br><span class="line">    index idx_appId (appId)</span><br><span class="line">) comment <span class="string">&#x27;题目&#x27;</span> <span class="keyword">collate</span> <span class="operator">=</span> utf8mb4_unicode_ci;</span><br></pre></td></tr></table></figure><p>对于<code>questionContent</code>字段，还需要注意区分<code>result</code>和<code>score</code>，这两个字段并不是全都赋值，它们分别用来统计两种不同应用类型的结果</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;options&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;result&quot;: &quot;I&quot;, <span class="operator">/</span><span class="operator">/</span> 如果是测评类，则用 reslut 来保存答案属性</span><br><span class="line">        &quot;score&quot;: <span class="number">1</span>,    <span class="operator">/</span><span class="operator">/</span> 如果是得分类，则用 score 来设置本题分数</span><br><span class="line">        &quot;value&quot;: &quot;A选项&quot;, <span class="operator">/</span><span class="operator">/</span>选项内容</span><br><span class="line">        &quot;key&quot;: &quot;A&quot;   <span class="operator">/</span><span class="operator">/</span>选项 key</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;result&quot;: &quot;E&quot;, <span class="operator">/</span><span class="operator">/</span> 如果是测评类，则用 reslut 来保存答案属性</span><br><span class="line">        &quot;score&quot;: <span class="number">0</span>,</span><br><span class="line">        &quot;value&quot;: &quot;B选项&quot;,</span><br><span class="line">        &quot;key&quot;: &quot;B&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;title&quot;: &quot;题目&quot;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="评分结果表"><a href="#评分结果表" class="headerlink" title="评分结果表"></a>评分结果表</h2><p>当用户答完题后，会跳转到一个结果详情页，该页面要展示用户的答题结果信息，（比如：如果是MBTI性格测试，那么会展示“ISTP”等信息）其实就是这些题目的答案列表，看用户的选项符合这些结果中的哪一个。该表就是保存这些信息的。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 评分结果表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> scoring_result</span><br><span class="line">(</span><br><span class="line">    id               <span class="type">bigint</span> auto_increment comment <span class="string">&#x27;id&#x27;</span> <span class="keyword">primary</span> key,</span><br><span class="line">    resultName       <span class="type">varchar</span>(<span class="number">128</span>)                       <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;结果名称，如物流师&#x27;</span>,</span><br><span class="line">    resultDesc       text                               <span class="keyword">null</span> comment <span class="string">&#x27;结果描述&#x27;</span>,</span><br><span class="line">    resultPicture    <span class="type">varchar</span>(<span class="number">1024</span>)                      <span class="keyword">null</span> comment <span class="string">&#x27;结果图片&#x27;</span>,</span><br><span class="line">    resultProp       <span class="type">varchar</span>(<span class="number">128</span>)                       <span class="keyword">null</span> comment <span class="string">&#x27;结果属性集合 JSON，如 [I,S,T,J]&#x27;</span>,</span><br><span class="line">    resultScoreRange <span class="type">int</span>                                <span class="keyword">null</span> comment <span class="string">&#x27;结果得分范围，如 80，表示 80及以上的分数命中此结果&#x27;</span>,</span><br><span class="line">    appId            <span class="type">bigint</span>                             <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;应用 id&#x27;</span>,</span><br><span class="line">    userId           <span class="type">bigint</span>                             <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;创建用户 id&#x27;</span>,</span><br><span class="line">    createTime       datetime <span class="keyword">default</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">    updateTime       datetime <span class="keyword">default</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">on</span> <span class="keyword">update</span> <span class="built_in">CURRENT_TIMESTAMP</span> comment <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">    isDelete         tinyint  <span class="keyword">default</span> <span class="number">0</span>                 <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;是否删除&#x27;</span>,</span><br><span class="line">    index idx_appId (appId)</span><br><span class="line">) comment <span class="string">&#x27;评分结果&#x27;</span> <span class="keyword">collate</span> <span class="operator">=</span> utf8mb4_unicode_ci;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中有两个字段需要注意：<code>resultProp</code>和<code>resultScoreRange</code>,对于测评类应用，用<code>resultProp</code>存储结果，对于得分类应用，用<code>resultScoreRange</code>来保存结果。<br><strong>测评类结果集</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span><span class="string">&quot;I&quot;</span><span class="punctuation">,</span> <span class="string">&quot;S&quot;</span><span class="punctuation">,</span> <span class="string">&quot;T&quot;</span><span class="punctuation">,</span> <span class="string">&quot;J&quot;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p><strong>得分类结果集</strong><br>默认ResultScoring字段的使用规则是“大于等于设定的分数则命中对应的result”。<br>举一个得分类的例子</p><ul><li>ResultName：知识大师</li><li>ResultDesc：知识掌握的很棒</li><li>ResultIcon：预留字段，可以填充结果图片</li><li>ResultScoringRange：9</li></ul><h2 id="用户答题记录表"><a href="#用户答题记录表" class="headerlink" title="用户答题记录表"></a>用户答题记录表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 用户答题记录表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> user_answer</span><br><span class="line">(</span><br><span class="line">    id              <span class="type">bigint</span> auto_increment <span class="keyword">primary</span> key,</span><br><span class="line">    appId           <span class="type">bigint</span>                             <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;应用 id&#x27;</span>,</span><br><span class="line">    appType         tinyint  <span class="keyword">default</span> <span class="number">0</span>                 <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;应用类型（0-得分类，1-角色测评类）&#x27;</span>,</span><br><span class="line">    scoringStrategy tinyint  <span class="keyword">default</span> <span class="number">0</span>                 <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;评分策略（0-自定义，1-AI）&#x27;</span>,</span><br><span class="line">    choices         text                               <span class="keyword">null</span> comment <span class="string">&#x27;用户答案（JSON 数组）&#x27;</span>,</span><br><span class="line">    resultId        <span class="type">bigint</span>                             <span class="keyword">null</span> comment <span class="string">&#x27;评分结果 id&#x27;</span>,</span><br><span class="line">    resultName      <span class="type">varchar</span>(<span class="number">128</span>)                       <span class="keyword">null</span> comment <span class="string">&#x27;结果名称，如物流师&#x27;</span>,</span><br><span class="line">    resultDesc      text                               <span class="keyword">null</span> comment <span class="string">&#x27;结果描述&#x27;</span>,</span><br><span class="line">    resultPicture   <span class="type">varchar</span>(<span class="number">1024</span>)                      <span class="keyword">null</span> comment <span class="string">&#x27;结果图标&#x27;</span>,</span><br><span class="line">    resultScore     <span class="type">int</span>                                <span class="keyword">null</span> comment <span class="string">&#x27;得分&#x27;</span>,</span><br><span class="line">    userId          <span class="type">bigint</span>                             <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;用户 id&#x27;</span>,</span><br><span class="line">    createTime      datetime <span class="keyword">default</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">    updateTime      datetime <span class="keyword">default</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">on</span> <span class="keyword">update</span> <span class="built_in">CURRENT_TIMESTAMP</span> comment <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">    isDelete        tinyint  <span class="keyword">default</span> <span class="number">0</span>                 <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;是否删除&#x27;</span>,</span><br><span class="line">    index idx_appId (appId),</span><br><span class="line">    index idx_userId (userId)</span><br><span class="line">) comment <span class="string">&#x27;用户答题记录&#x27;</span> <span class="keyword">collate</span> <span class="operator">=</span> utf8mb4_unicode_ci;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对于这个表，需要注意两个点</p><ol><li>对于ResultId,它可能为空，因为如果使用AI来分析用户答案的时候，是没有结果属性的，它不会从结果表中查找符合的结果。</li><li>题目中设置了一些冗余字段，比如应用表中的appID、scoringStrategy、appType以及结果表中的resultName、 resultDesc 、resultPicture 等，这些字段可以联表查询，为什么还要都添加到该表中？因为答题记录一旦设置，几乎不会修改，便于查询，不用联表，节约开发成本</li></ol><p>choices是用户提交的答案，是题目的key字段，用json来保存</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span><span class="string">&quot;A&quot;</span><span class="punctuation">,</span> <span class="string">&quot;B&quot;</span><span class="punctuation">,</span> <span class="string">&quot;C&quot;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h1 id="后端项目初始化"><a href="#后端项目初始化" class="headerlink" title="后端项目初始化"></a>后端项目初始化</h1><h2 id="下载后端项目模板"><a href="#下载后端项目模板" class="headerlink" title="下载后端项目模板"></a>下载后端项目模板</h2><p><a href="https://github.com/stufz/springboot-init">GitHub - stufz&#x2F;springboot-init: Springboot后端初始化项目</a></p><h2 id="准备依赖"><a href="#准备依赖" class="headerlink" title="准备依赖"></a>准备依赖</h2><ul><li>MySQL：8.0+</li><li>Redis：默认不开启</li><li>ElasticSearch：默认不开启</li><li>Maven：3.5+（开启IDEA后需要修改maven配置，该为自己安装的maven，否则idea默认会使用自己的maven，构建的时候可能会报错）</li></ul><h2 id="执行模板的初始化sql"><a href="#执行模板的初始化sql" class="headerlink" title="执行模板的初始化sql"></a>执行模板的初始化sql</h2><p>需要在application.yml中配置数据库相关信息，改为自己本地的端口和用户信息<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722222176711-873ebc9b-bbcc-41df-9822-72fcef7a84aa.png" alt="image.png"></p><h2 id="模板改造"><a href="#模板改造" class="headerlink" title="模板改造"></a>模板改造</h2><ul><li>修改模块名：将springboot-init换成自己fandada(ctrl+shift+r)</li><li>改包名：重构+全局替换，com.stufz.fandada</li><li>移除不必要的模块（比如：微信、ES等）</li></ul><h2 id="启动测试"><a href="#启动测试" class="headerlink" title="启动测试"></a>启动测试</h2><p><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722222970312-fbc4de14-0c55-4cac-9d8b-d0fe0f2625cb.png" alt="image.png"><br>显示以上日志，并且访问<code>http://localhost:端口号/项目上下文路径/doc.html</code>访问在线接口文档，如果可以正常显示，那么项目初始化成功。（这里的端口号和项目上下文路径都是在配置文件中进行配置）<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722223132137-2c5c51ca-f4a6-43f5-97d2-060662b329d0.png" alt="image.png"></p><h1 id="后端基础开发-增删改查"><a href="#后端基础开发-增删改查" class="headerlink" title="后端基础开发-增删改查"></a>后端基础开发-增删改查</h1><h2 id="数据访问层"><a href="#数据访问层" class="headerlink" title="数据访问层"></a>数据访问层</h2><p>对于数据访问层和服务层的基础代码，可以通过IDEA中的插件<strong>MybatisX</strong>来自动生成。<br>具体操作流程：选中创建好的表-&gt;右键选择-MybatisX-Generator<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722224181802-d47c70f7-c731-4bc9-a638-5df30e6dc105.png" alt="image.png"><br>之后点next<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722224247071-49b85e2e-7f5c-410c-92bd-1c3defbe6357.png" alt="image.png"><br>选择以上选择的选项后，下面会出现会生成哪些文件，也就是mapper层和service层基础代码。<br>生成之后需要做两个修改</p><ol><li>主键的生成策略@TableId(type &#x3D; IdType.ASSIGN_ID)</li><li>逻辑删除字段需要添加@TableLogic</li></ol><h2 id="业务逻辑代码生成"><a href="#业务逻辑代码生成" class="headerlink" title="业务逻辑代码生成"></a>业务逻辑代码生成</h2><p>这里使用万能模板中的代码生成器（CodeGenerator）来生成代码，包括：Controller、Service接口和实现类、数据模型包装类和枚举类，直接运行CodeGenerator.java即可<br><strong>注意：运行前需要修改生成参数：包括包名、数据名称、数据小写和大写英文名称</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.stufz.fandada.generate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.io.FileUtil;</span><br><span class="line"><span class="keyword">import</span> freemarker.template.Configuration;</span><br><span class="line"><span class="keyword">import</span> freemarker.template.Template;</span><br><span class="line"><span class="keyword">import</span> freemarker.template.TemplateException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.Writer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 代码生成器</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CodeGenerator</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用法：修改生成参数和生成路径，注释掉不需要的生成逻辑，然后运行即可</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> TemplateException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> TemplateException, IOException &#123;</span><br><span class="line">        <span class="comment">// 指定生成参数</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">packageName</span> <span class="operator">=</span> <span class="string">&quot;com.stufz.fandada&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">dataName</span> <span class="operator">=</span> <span class="string">&quot;评分结果&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">dataKey</span> <span class="operator">=</span> <span class="string">&quot;scoringResult&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">upperDataKey</span> <span class="operator">=</span> <span class="string">&quot;ScoringResult&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 封装生成参数</span></span><br><span class="line">        Map&lt;String, Object&gt; dataModel = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        dataModel.put(<span class="string">&quot;packageName&quot;</span>, packageName);</span><br><span class="line">        dataModel.put(<span class="string">&quot;dataName&quot;</span>, dataName);</span><br><span class="line">        dataModel.put(<span class="string">&quot;dataKey&quot;</span>, dataKey);</span><br><span class="line">        dataModel.put(<span class="string">&quot;upperDataKey&quot;</span>, upperDataKey);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成路径默认值</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">projectPath</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;user.dir&quot;</span>);</span><br><span class="line">        <span class="comment">// 参考路径，可以自己调整下面的 outputPath</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">inputPath</span> <span class="operator">=</span> projectPath + File.separator + <span class="string">&quot;src/main/resources/templates/模板名称.java.ftl&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">outputPath</span> <span class="operator">=</span> String.format(<span class="string">&quot;%s/generator/包名/%s类后缀.java&quot;</span>, projectPath, upperDataKey);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、生成 Controller</span></span><br><span class="line">        <span class="comment">// 指定生成路径</span></span><br><span class="line">        inputPath = projectPath + File.separator + <span class="string">&quot;src/main/resources/templates/TemplateController.java.ftl&quot;</span>;</span><br><span class="line">        outputPath = String.format(<span class="string">&quot;%s/generator/controller/%sController.java&quot;</span>, projectPath, upperDataKey);</span><br><span class="line">        <span class="comment">// 生成</span></span><br><span class="line">        doGenerate(inputPath, outputPath, dataModel);</span><br><span class="line">        System.out.println(<span class="string">&quot;生成 Controller 成功，文件路径：&quot;</span> + outputPath);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、生成 Service 接口和实现类</span></span><br><span class="line">        <span class="comment">// 生成 Service 接口</span></span><br><span class="line">        inputPath = projectPath + File.separator + <span class="string">&quot;src/main/resources/templates/TemplateService.java.ftl&quot;</span>;</span><br><span class="line">        outputPath = String.format(<span class="string">&quot;%s/generator/service/%sService.java&quot;</span>, projectPath, upperDataKey);</span><br><span class="line">        doGenerate(inputPath, outputPath, dataModel);</span><br><span class="line">        System.out.println(<span class="string">&quot;生成 Service 接口成功，文件路径：&quot;</span> + outputPath);</span><br><span class="line">        <span class="comment">// 生成 Service 实现类</span></span><br><span class="line">        inputPath = projectPath + File.separator + <span class="string">&quot;src/main/resources/templates/TemplateServiceImpl.java.ftl&quot;</span>;</span><br><span class="line">        outputPath = String.format(<span class="string">&quot;%s/generator/service/impl/%sServiceImpl.java&quot;</span>, projectPath, upperDataKey);</span><br><span class="line">        doGenerate(inputPath, outputPath, dataModel);</span><br><span class="line">        System.out.println(<span class="string">&quot;生成 Service 实现类成功，文件路径：&quot;</span> + outputPath);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、生成数据模型封装类（包括 DTO 和 VO）</span></span><br><span class="line">        <span class="comment">// 生成 DTO</span></span><br><span class="line">        inputPath = projectPath + File.separator + <span class="string">&quot;src/main/resources/templates/model/TemplateAddRequest.java.ftl&quot;</span>;</span><br><span class="line">        outputPath = String.format(<span class="string">&quot;%s/generator/model/dto/%sAddRequest.java&quot;</span>, projectPath, upperDataKey);</span><br><span class="line">        doGenerate(inputPath, outputPath, dataModel);</span><br><span class="line">        inputPath = projectPath + File.separator + <span class="string">&quot;src/main/resources/templates/model/TemplateQueryRequest.java.ftl&quot;</span>;</span><br><span class="line">        outputPath = String.format(<span class="string">&quot;%s/generator/model/dto/%sQueryRequest.java&quot;</span>, projectPath, upperDataKey);</span><br><span class="line">        doGenerate(inputPath, outputPath, dataModel);</span><br><span class="line">        inputPath = projectPath + File.separator + <span class="string">&quot;src/main/resources/templates/model/TemplateEditRequest.java.ftl&quot;</span>;</span><br><span class="line">        outputPath = String.format(<span class="string">&quot;%s/generator/model/dto/%sEditRequest.java&quot;</span>, projectPath, upperDataKey);</span><br><span class="line">        doGenerate(inputPath, outputPath, dataModel);</span><br><span class="line">        inputPath = projectPath + File.separator + <span class="string">&quot;src/main/resources/templates/model/TemplateUpdateRequest.java.ftl&quot;</span>;</span><br><span class="line">        outputPath = String.format(<span class="string">&quot;%s/generator/model/dto/%sUpdateRequest.java&quot;</span>, projectPath, upperDataKey);</span><br><span class="line">        doGenerate(inputPath, outputPath, dataModel);</span><br><span class="line">        System.out.println(<span class="string">&quot;生成 DTO 成功，文件路径：&quot;</span> + outputPath);</span><br><span class="line">        <span class="comment">// 生成 VO</span></span><br><span class="line">        inputPath = projectPath + File.separator + <span class="string">&quot;src/main/resources/templates/model/TemplateVO.java.ftl&quot;</span>;</span><br><span class="line">        outputPath = String.format(<span class="string">&quot;%s/generator/model/vo/%sVO.java&quot;</span>, projectPath, upperDataKey);</span><br><span class="line">        doGenerate(inputPath, outputPath, dataModel);</span><br><span class="line">        System.out.println(<span class="string">&quot;生成 VO 成功，文件路径：&quot;</span> + outputPath);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成文件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inputPath  模板文件输入路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> outputPath 输出路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> model      数据模型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> TemplateException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">doGenerate</span><span class="params">(String inputPath, String outputPath, Object model)</span> <span class="keyword">throws</span> IOException, TemplateException &#123;</span><br><span class="line">        <span class="comment">// new 出 Configuration 对象，参数为 FreeMarker 版本号</span></span><br><span class="line">        <span class="type">Configuration</span> <span class="variable">configuration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Configuration</span>(Configuration.VERSION_2_3_31);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 指定模板文件所在的路径</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">templateDir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(inputPath).getParentFile();</span><br><span class="line">        configuration.setDirectoryForTemplateLoading(templateDir);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置模板文件使用的字符集</span></span><br><span class="line">        configuration.setDefaultEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建模板对象，加载指定模板</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">templateName</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(inputPath).getName();</span><br><span class="line">        <span class="type">Template</span> <span class="variable">template</span> <span class="operator">=</span> configuration.getTemplate(templateName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 文件不存在则创建文件和父目录</span></span><br><span class="line">        <span class="keyword">if</span> (!FileUtil.exist(outputPath)) &#123;</span><br><span class="line">            FileUtil.touch(outputPath);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成</span></span><br><span class="line">        <span class="type">Writer</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileWriter</span>(outputPath);</span><br><span class="line">        template.process(model, out);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成文件后别忘了关闭哦</span></span><br><span class="line">        out.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="编写数据模型"><a href="#编写数据模型" class="headerlink" title="编写数据模型"></a>编写数据模型</h2><p>编写数据模型包装类，包括（DTO和VO），JSON结构对应的类，枚举类</p><ul><li><p>DTO一般用来作为数据传输对象，可以去除一些脱敏数据，只保留业务流程中需要的数据(比如业务的增删改查：addReuqest&#x2F;deleteRequest&#x2F;updateRequest&#x2F;queryRequest)</p></li><li><p>VO通常用来前端页面展示所需要的数据(比如：UserVO&#x2F;QuestionVO)</p></li><li><p>JSON结构对应的类（比如questionContent）需要定义一个类专门存放题目对象，在保存到数据库中时需要将对象转换为json字符串，在获取数据库中的题目信息时，也需要将json字符串转化为对象方便业务处理。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">帮我把下列 json 结构转为使用 lombok 的 java 对象：</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;I&quot;</span><span class="punctuation">,</span> <span class="comment">// 如果是测评类，则用 reslut 来保存答案属性</span></span><br><span class="line">      <span class="attr">&quot;score&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span>    <span class="comment">// 如果是得分类，则用 score 来设置本题分数</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A选项&quot;</span><span class="punctuation">,</span> <span class="comment">//选项内容</span></span><br><span class="line">      <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span>   <span class="comment">//选项 key</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;E&quot;</span><span class="punctuation">,</span> <span class="comment">// 如果是测评类，则用 reslut 来保存答案属性</span></span><br><span class="line">      <span class="attr">&quot;score&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;B选项&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;B&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;题目&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Builder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QuestionContent</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Option&gt; options;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="meta">@NoArgsConstructor</span></span><br><span class="line">    <span class="meta">@AllArgsConstructor</span></span><br><span class="line">    <span class="meta">@Builder</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Option</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> String result;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> score;</span><br><span class="line">        <span class="keyword">private</span> String value;</span><br><span class="line">        <span class="keyword">private</span> String key;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>枚举类：<strong>审核状态枚举类</strong>&amp;<strong>评分策略枚举类</strong>&amp;<strong>应用类型枚举类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.stufz.fandada.model.enums;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.ObjectUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 应用评分策略枚举</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">AppScoringStrategyEnum</span> &#123;</span><br><span class="line"></span><br><span class="line">    SCORE(<span class="string">&quot;自定义&quot;</span>, <span class="number">0</span>),</span><br><span class="line">    TEST(<span class="string">&quot;AI&quot;</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String text;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> value;</span><br><span class="line"></span><br><span class="line">    AppScoringStrategyEnum(String text, <span class="type">int</span> value) &#123;</span><br><span class="line">        <span class="built_in">this</span>.text = text;</span><br><span class="line">        <span class="built_in">this</span>.value = value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取值列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title function_">getValues</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Arrays.stream(values()).map(item -&gt; item.value).collect(Collectors.toList());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 value 获取枚举</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> AppScoringStrategyEnum <span class="title function_">getEnumByValue</span><span class="params">(Integer value)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (ObjectUtils.isEmpty(value)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (AppScoringStrategyEnum anEnum : AppScoringStrategyEnum.values()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (anEnum.value==value) &#123;</span><br><span class="line">                <span class="keyword">return</span> anEnum;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getValue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getText</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> text;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.stufz.fandada.model.enums;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.models.auth.In;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.ObjectUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 应用类型枚举</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">AppTypeEnum</span> &#123;</span><br><span class="line"></span><br><span class="line">    SCORE(<span class="string">&quot;得分类&quot;</span>, <span class="number">0</span>),</span><br><span class="line">    TEST(<span class="string">&quot;测试类&quot;</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String text;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> value;</span><br><span class="line"></span><br><span class="line">    AppTypeEnum(String text, <span class="type">int</span> value) &#123;</span><br><span class="line">        <span class="built_in">this</span>.text = text;</span><br><span class="line">        <span class="built_in">this</span>.value = value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取值列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title function_">getValues</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Arrays.stream(values()).map(item -&gt; item.value).collect(Collectors.toList());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 value 获取枚举</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> AppTypeEnum <span class="title function_">getEnumByValue</span><span class="params">(Integer value)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (ObjectUtils.isEmpty(value)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (AppTypeEnum anEnum : AppTypeEnum.values()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (anEnum.value==value) &#123;</span><br><span class="line">                <span class="keyword">return</span> anEnum;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getValue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getText</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> text;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.stufz.fandada.model.enums;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.ObjectUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 审核状态枚举</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">ReviewStatusEnum</span> &#123;</span><br><span class="line"></span><br><span class="line">    REVIEWING(<span class="string">&quot;待审核&quot;</span>, <span class="number">0</span>),</span><br><span class="line">    PASS(<span class="string">&quot;通过&quot;</span>, <span class="number">1</span>),</span><br><span class="line">    REJECT(<span class="string">&quot;拒绝&quot;</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String text;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> value;</span><br><span class="line"></span><br><span class="line">    ReviewStatusEnum(String text, <span class="type">int</span> value) &#123;</span><br><span class="line">        <span class="built_in">this</span>.text = text;</span><br><span class="line">        <span class="built_in">this</span>.value = value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 value 获取枚举</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ReviewStatusEnum <span class="title function_">getEnumByValue</span><span class="params">(Integer value)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (ObjectUtil.isEmpty(value)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (ReviewStatusEnum anEnum : ReviewStatusEnum.values()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (anEnum.value == value) &#123;</span><br><span class="line">                <span class="keyword">return</span> anEnum;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取值列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title function_">getValues</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Arrays.stream(values()).map(item -&gt; item.value).collect(Collectors.toList());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getValue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getText</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> text;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h2 id="接口开发"><a href="#接口开发" class="headerlink" title="接口开发"></a>接口开发</h2><p>Controller层</p><h2 id="服务层开发"><a href="#服务层开发" class="headerlink" title="服务层开发"></a>服务层开发</h2><p>编写Service接口和实现类，完善业务逻辑，比如数据校验等。</p><h1 id="后端核心业务流程开发"><a href="#后端核心业务流程开发" class="headerlink" title="后端核心业务流程开发"></a>后端核心业务流程开发</h1><p>核心业务流程:</p><ol><li>用户注册&#x3D;&gt;用户登录</li><li>用户创建应用&#x3D;&gt;创建题目和选项（包括选项得分）&#x3D;&gt;创建评分规则（评分方式和评分结果）</li><li>管理员审核应用，发布或下架</li><li>用户查看或检索应用列表，进入应用详情页，开始答题，并提交答案</li><li>经过评分模块评分后，用户得到评分结果</li></ol><p>需要额外开发的功能</p><ul><li>应用模块：审核应用，发布或下架</li><li>评分模块：根据回答计算评分结果（多种评分策略）<ul><li>自定义规则评分-打分类应用</li><li>自定义规则评分-测评类应用</li></ul></li><li>回答模块：提交回答后就可以调用评分模块来更新回答表</li></ul><h2 id="应用模块-审核功能"><a href="#应用模块-审核功能" class="headerlink" title="应用模块-审核功能"></a>应用模块-审核功能</h2><p>首先需要设计一个审核的请求类<code>ReviewRequest</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.stufz.fandada.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.models.auth.In;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 审核状态请求</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReviewRequest</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 应用id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 审核状态：0-待审核  1-通过  2-拒绝</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer reviewStatus;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 审核信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String reviewMessage;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后需要设计一个接口，来处理审核请求<br>审核流程图<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722235193517-c4d64337-bd58-4e0b-89fa-1002bd13718b.jpeg"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 应用审核</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> reviewRequest</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/review&quot;)</span></span><br><span class="line">    <span class="meta">@AuthCheck(mustRole = UserConstant.ADMIN_ROLE)</span></span><br><span class="line">    <span class="keyword">public</span> BaseResponse&lt;Boolean&gt; <span class="title function_">doAppReview</span><span class="params">(<span class="meta">@RequestBody</span> ReviewRequest reviewRequest, HttpServletRequest request)</span> &#123;</span><br><span class="line">        ThrowUtils.throwIf(reviewRequest == <span class="literal">null</span>, ErrorCode.PARAMS_ERROR);</span><br><span class="line">        <span class="type">Long</span> <span class="variable">id</span> <span class="operator">=</span> reviewRequest.getId();</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">reviewStatus</span> <span class="operator">=</span> reviewRequest.getReviewStatus();</span><br><span class="line">        <span class="comment">// 校验</span></span><br><span class="line">        <span class="type">ReviewStatusEnum</span> <span class="variable">reviewStatusEnum</span> <span class="operator">=</span> ReviewStatusEnum.getEnumByValue(reviewStatus);</span><br><span class="line">        <span class="keyword">if</span> (id == <span class="literal">null</span> || reviewStatusEnum == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 判断是否存在</span></span><br><span class="line">        <span class="type">App</span> <span class="variable">oldApp</span> <span class="operator">=</span> appService.getById(id);</span><br><span class="line">        ThrowUtils.throwIf(oldApp == <span class="literal">null</span>, ErrorCode.NOT_FOUND_ERROR);</span><br><span class="line">        <span class="comment">// 已是该状态</span></span><br><span class="line">        <span class="keyword">if</span> (oldApp.getReviewStatus().equals(reviewStatus)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR, <span class="string">&quot;请勿重复审核&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 更新审核状态</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">loginUser</span> <span class="operator">=</span> userService.getLoginUser(request);</span><br><span class="line">        <span class="type">App</span> <span class="variable">app</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">App</span>();</span><br><span class="line">        app.setId(id);</span><br><span class="line">        app.setReviewStatus(reviewStatus);</span><br><span class="line">        app.setReviewMessage(reviewRequest.getReviewMessage());</span><br><span class="line">        app.setReviewerId(loginUser.getId());</span><br><span class="line">        app.setReviewTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> appService.updateById(app);</span><br><span class="line">        ThrowUtils.throwIf(!result, ErrorCode.OPERATION_ERROR);</span><br><span class="line">        <span class="keyword">return</span> ResultUtils.success(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="评分模块实现"><a href="#评分模块实现" class="headerlink" title="评分模块实现"></a>评分模块实现</h2><p>需求：对于不同的应用类型以及不同的评分策略，实现不同的逻辑<br>核心实现方式：策略模式（TODO 添加策略模式详解）<br>简单来说，策略模式是一种行为设计模式，它定义了一系列算法，并将每个算法封装到独立的类中，使得它们可以相互替换。</p><h3 id="策略接口的定义"><a href="#策略接口的定义" class="headerlink" title="策略接口的定义"></a><strong>策略接口的定义</strong></h3><p><strong>参数：</strong>应用、用户的选择列表（可以通过应用获取到题目、测评结果）<br><strong>返回值：</strong>用户答案</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.stufz.fandada.scoring;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.stufz.fandada.model.entity.App;</span><br><span class="line"><span class="keyword">import</span> com.stufz.fandada.model.entity.UserAnswer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 得分策略---使用策略模式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ScoringStrategy</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行评分</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> choices 做题时的选择</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> app 题目所属的应用</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 根据得分策略返回用户答案</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    UserAnswer <span class="title function_">doScore</span><span class="params">(List&lt;String&gt; choices, App app)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="两种策略的实现"><a href="#两种策略的实现" class="headerlink" title="两种策略的实现"></a>两种策略的实现</h3><ol><li><p>自定义测评类应用得分策略</p><ol><li>根据id获取到题目和题目结果信息</li><li>统计用户的每个选择对应的属性个数，比如：有15道题，选择的结果中I&#x3D;10个，E&#x3D;5个</li><li>遍历每一种题目结果，计算哪个结果的得分更高</li><li>构造返回值，填充答案对象的属性<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ScoringStrategyConfig(appType = 1,scoringStrategy = 0)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomTestScoringStrategy</span> <span class="keyword">implements</span> <span class="title class_">ScoringStrategy</span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> QuestionService questionService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ScoringResultService scoringResultService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> UserAnswer <span class="title function_">doScore</span><span class="params">(List&lt;String&gt; choices, App app)</span> &#123;</span><br><span class="line">        <span class="type">Long</span> <span class="variable">appId</span> <span class="operator">=</span> app.getId();</span><br><span class="line">        <span class="comment">// 1. 根据 id 查询到题目和题目结果信息</span></span><br><span class="line">        <span class="type">Question</span> <span class="variable">question</span> <span class="operator">=</span> questionService.getOne(</span><br><span class="line">                Wrappers.lambdaQuery(Question.class).eq(Question::getAppId, appId)</span><br><span class="line">        );</span><br><span class="line">        List&lt;ScoringResult&gt; scoringResultList = scoringResultService.list(</span><br><span class="line">                Wrappers.lambdaQuery(ScoringResult.class)</span><br><span class="line">                        .eq(ScoringResult::getAppId, appId)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. 统计用户每个选择对应的属性个数，如 I = 10 个，E = 5 个</span></span><br><span class="line">        <span class="comment">// 初始化一个Map，用于存储每个选项的计数</span></span><br><span class="line">        Map&lt;String, Integer&gt; optionCount = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="type">QuestionVO</span> <span class="variable">questionVO</span> <span class="operator">=</span> QuestionVO.objToVo(question);</span><br><span class="line">        List&lt;QuestionContentDTO&gt; questionContent = questionVO.getQuestionContent();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历题目列表</span></span><br><span class="line">        <span class="keyword">for</span> (QuestionContentDTO questionContentDTO : questionContent) &#123;</span><br><span class="line">            <span class="comment">// 遍历答案列表</span></span><br><span class="line">            <span class="keyword">for</span> (String answer : choices) &#123;</span><br><span class="line">                <span class="comment">// 遍历题目中的选项</span></span><br><span class="line">                <span class="keyword">for</span> (QuestionContentDTO.Option option : questionContentDTO.getOptions()) &#123;</span><br><span class="line">                    <span class="comment">// 如果答案和选项的key匹配</span></span><br><span class="line">                    <span class="keyword">if</span> (option.getKey().equals(answer)) &#123;</span><br><span class="line">                        <span class="comment">// 获取选项的result属性</span></span><br><span class="line">                        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> option.getResult();</span><br><span class="line"></span><br><span class="line">                        <span class="comment">// 如果result属性不在optionCount中，初始化为0</span></span><br><span class="line">                        <span class="keyword">if</span> (!optionCount.containsKey(result)) &#123;</span><br><span class="line">                            optionCount.put(result, <span class="number">0</span>);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="comment">// 在optionCount中增加计数</span></span><br><span class="line">                        optionCount.put(result, optionCount.get(result) + <span class="number">1</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3. 遍历每种评分结果，计算哪个结果的得分更高</span></span><br><span class="line">        <span class="comment">// 初始化最高分数和最高分数对应的评分结果</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">maxScore</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">ScoringResult</span> <span class="variable">maxScoringResult</span> <span class="operator">=</span> scoringResultList.get(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历评分结果列表</span></span><br><span class="line">        <span class="keyword">for</span> (ScoringResult scoringResult : scoringResultList) &#123;</span><br><span class="line">            List&lt;String&gt; resultProp = JSONUtil.toList(scoringResult.getResultProp(), String.class);</span><br><span class="line">            <span class="comment">// 计算当前评分结果的分数，[I, E] =&gt; [10, 5] =&gt; 15</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> resultProp.stream()</span><br><span class="line">                    .mapToInt(prop -&gt; optionCount.getOrDefault(prop, <span class="number">0</span>))</span><br><span class="line">                    .sum();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 如果分数高于当前最高分数，更新最高分数和最高分数对应的评分结果</span></span><br><span class="line">            <span class="keyword">if</span> (score &gt; maxScore) &#123;</span><br><span class="line">                maxScore = score;</span><br><span class="line">                maxScoringResult = scoringResult;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4. 构造返回值，填充答案对象的属性</span></span><br><span class="line">        <span class="type">UserAnswer</span> <span class="variable">userAnswer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserAnswer</span>();</span><br><span class="line">        userAnswer.setAppId(appId);</span><br><span class="line">        userAnswer.setAppType(app.getAppType());</span><br><span class="line">        userAnswer.setScoringStrategy(app.getScoringStrategy());</span><br><span class="line">        userAnswer.setChoices(JSONUtil.toJsonStr(choices));</span><br><span class="line">        userAnswer.setResultId(maxScoringResult.getId());</span><br><span class="line">        userAnswer.setResultName(maxScoringResult.getResultName());</span><br><span class="line">        userAnswer.setResultDesc(maxScoringResult.getResultDesc());</span><br><span class="line">        userAnswer.setResultPicture(maxScoringResult.getResultPicture());</span><br><span class="line">        <span class="keyword">return</span> userAnswer;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ol></li><li><p>自定义得分类应用评分策略</p><ol><li>根据id查询到题目和题目结果信息（按分数降序排序）</li><li>统计用户的总得分</li><li>遍历得分结果，找到第一个用户分数大于得分范围的结果，作为最终结果</li><li>构造返回值，填充答案对象的属性<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ScoringStrategyConfig(appType = 0,scoringStrategy = 0)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomScoreScoringStrategy</span> <span class="keyword">implements</span> <span class="title class_">ScoringStrategy</span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> QuestionService questionService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ScoringResultService scoringResultService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> UserAnswer <span class="title function_">doScore</span><span class="params">(List&lt;String&gt; choices, App app)</span>  &#123;</span><br><span class="line">        <span class="type">Long</span> <span class="variable">appId</span> <span class="operator">=</span> app.getId();</span><br><span class="line">        <span class="comment">// 1. 根据 id 查询到题目和题目结果信息（按分数降序排序）</span></span><br><span class="line">        <span class="type">Question</span> <span class="variable">question</span> <span class="operator">=</span> questionService.getOne(</span><br><span class="line">                Wrappers.lambdaQuery(Question.class).eq(Question::getAppId, appId)</span><br><span class="line">        );</span><br><span class="line">        List&lt;ScoringResult&gt; scoringResultList = scoringResultService.list(</span><br><span class="line">                Wrappers.lambdaQuery(ScoringResult.class)</span><br><span class="line">                        .eq(ScoringResult::getAppId, appId)</span><br><span class="line">                        .orderByDesc(ScoringResult::getResultScoreRange)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. 统计用户的总得分</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">totalScore</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">QuestionVO</span> <span class="variable">questionVO</span> <span class="operator">=</span> QuestionVO.objToVo(question);</span><br><span class="line">        List&lt;QuestionContentDTO&gt; questionContent = questionVO.getQuestionContent();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历题目列表</span></span><br><span class="line">        <span class="keyword">for</span> (QuestionContentDTO questionContentDTO : questionContent) &#123;</span><br><span class="line">            <span class="comment">// 遍历答案列表</span></span><br><span class="line">            <span class="keyword">for</span> (String answer : choices) &#123;</span><br><span class="line">                <span class="comment">// 遍历题目中的选项</span></span><br><span class="line">                <span class="keyword">for</span> (QuestionContentDTO.Option option : questionContentDTO.getOptions()) &#123;</span><br><span class="line">                    <span class="comment">// 如果答案和选项的key匹配</span></span><br><span class="line">                    <span class="keyword">if</span> (option.getKey().equals(answer)) &#123;</span><br><span class="line">                        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> Optional.of(option.getScore()).orElse(<span class="number">0</span>);</span><br><span class="line">                        totalScore += score;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3. 遍历得分结果，找到第一个用户分数大于得分范围的结果，作为最终结果</span></span><br><span class="line">        <span class="type">ScoringResult</span> <span class="variable">maxScoringResult</span> <span class="operator">=</span> scoringResultList.get(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span> (ScoringResult scoringResult : scoringResultList) &#123;</span><br><span class="line">            <span class="keyword">if</span> (totalScore &gt;= scoringResult.getResultScoreRange()) &#123;</span><br><span class="line">                maxScoringResult = scoringResult;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4. 构造返回值，填充答案对象的属性</span></span><br><span class="line">        <span class="type">UserAnswer</span> <span class="variable">userAnswer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserAnswer</span>();</span><br><span class="line">        userAnswer.setAppId(appId);</span><br><span class="line">        userAnswer.setAppType(app.getAppType());</span><br><span class="line">        userAnswer.setScoringStrategy(app.getScoringStrategy());</span><br><span class="line">        userAnswer.setChoices(JSONUtil.toJsonStr(choices));</span><br><span class="line">        userAnswer.setResultId(maxScoringResult.getId());</span><br><span class="line">        userAnswer.setResultName(maxScoringResult.getResultName());</span><br><span class="line">        userAnswer.setResultDesc(maxScoringResult.getResultDesc());</span><br><span class="line">        userAnswer.setResultPicture(maxScoringResult.getResultPicture());</span><br><span class="line">        userAnswer.setResultScore(totalScore);</span><br><span class="line">        <span class="keyword">return</span> userAnswer;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol><h3 id="全局执行器"><a href="#全局执行器" class="headerlink" title="全局执行器"></a>全局执行器</h3><p>对于不同的应用和评分策略，可以定制一个<strong>全局执行器，</strong>来简化调用。<br>可以自定义一个注解，包含应用类型和评分策略，之后在具体的评分策略实现类中可以通过配置不同的注解来调用不同的评分策略。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.stufz.fandada.scoring;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(ElementType.TYPE)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ScoringStrategyConfig &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 应用类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">appType</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 评分策略</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">scoringStrategy</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过加如下注解，来标识不同的应用类型和评分策略</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ScoringStrategyConfig(appType = 0,scoringStrategy = 0)</span></span><br><span class="line"><span class="meta">@ScoringStrategyConfig(appType = 1,scoringStrategy = 0)</span></span><br></pre></td></tr></table></figure><p>之后只需要定义一个全局的执行器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.stufz.fandada.scoring;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.stufz.fandada.common.ErrorCode;</span><br><span class="line"><span class="keyword">import</span> com.stufz.fandada.exception.BusinessException;</span><br><span class="line"><span class="keyword">import</span> com.stufz.fandada.model.entity.App;</span><br><span class="line"><span class="keyword">import</span> com.stufz.fandada.model.entity.UserAnswer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 评分策略执行器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ScoringStrategyExecutor</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 策略列表</span></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;ScoringStrategy&gt; scoringStrategyList;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 评分</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> choiceList</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> app</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> UserAnswer <span class="title function_">doScore</span><span class="params">(List&lt;String&gt; choiceList, App app)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">appType</span> <span class="operator">=</span> app.getAppType();</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">appScoringStrategy</span> <span class="operator">=</span> app.getScoringStrategy();</span><br><span class="line">        <span class="keyword">if</span> (appType == <span class="literal">null</span> || appScoringStrategy == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(ErrorCode.SYSTEM_ERROR, <span class="string">&quot;应用配置有误，未找到匹配的策略&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 根据注解获取策略</span></span><br><span class="line">        <span class="keyword">for</span> (ScoringStrategy strategy : scoringStrategyList) &#123;</span><br><span class="line">            <span class="keyword">if</span> (strategy.getClass().isAnnotationPresent(ScoringStrategyConfig.class)) &#123;</span><br><span class="line">                <span class="type">ScoringStrategyConfig</span> <span class="variable">scoringStrategyConfig</span> <span class="operator">=</span> strategy.getClass().getAnnotation(ScoringStrategyConfig.class);</span><br><span class="line">                <span class="keyword">if</span> (scoringStrategyConfig.appType() == appType &amp;&amp; scoringStrategyConfig.scoringStrategy() == appScoringStrategy) &#123;</span><br><span class="line">                    <span class="keyword">return</span> strategy.doScore(choiceList, app);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(ErrorCode.SYSTEM_ERROR, <span class="string">&quot;应用配置有误，未找到匹配的策略&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>这里有几个需要注意的点</p><ol><li>将自定义的注解使用@Component注解来注释，即把该注解交给ioc容器来管理，那么使用该注解的策略实现类也可以被交给IOC容器来管理，所以在全局执行器<code>ScoringStrategyExecutor</code>中可以直接注入</li><li>通过注解来获取策略，之后将策略和应用的类型以及评分策略进行比较，找到匹配的策略进行执行，这里用到了两个注解的方法，isAnnotationPresent(xxx.class)用来判断是否存在这样xxx类型的注解，getAnnotation(xxx.class)用来获取该注解。</li></ol></blockquote><h3 id="回答模块-1"><a href="#回答模块-1" class="headerlink" title="回答模块"></a>回答模块</h3><p>回答模块就可以调用评分模块来更新回答表</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建用户答案</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userAnswerAddRequest</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/add&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> BaseResponse&lt;Long&gt; <span class="title function_">addUserAnswer</span><span class="params">(<span class="meta">@RequestBody</span> UserAnswerAddRequest userAnswerAddRequest, HttpServletRequest request)</span>  &#123;</span><br><span class="line">        ThrowUtils.throwIf(userAnswerAddRequest == <span class="literal">null</span>, ErrorCode.PARAMS_ERROR);</span><br><span class="line">        <span class="comment">// 在此处将实体类和 DTO 进行转换</span></span><br><span class="line">        <span class="type">UserAnswer</span> <span class="variable">userAnswer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserAnswer</span>();</span><br><span class="line">        BeanUtils.copyProperties(userAnswerAddRequest, userAnswer);</span><br><span class="line">        List&lt;String&gt; choices = userAnswerAddRequest.getChoices();</span><br><span class="line">        userAnswer.setChoices(JSONUtil.toJsonStr(choices));</span><br><span class="line">        <span class="comment">// 数据校验</span></span><br><span class="line">        userAnswerService.validUserAnswer(userAnswer, <span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 判断 app 是否存在</span></span><br><span class="line">        <span class="type">Long</span> <span class="variable">appId</span> <span class="operator">=</span> userAnswerAddRequest.getAppId();</span><br><span class="line">        <span class="type">App</span> <span class="variable">app</span> <span class="operator">=</span> appService.getById(appId);</span><br><span class="line">        ThrowUtils.throwIf(app == <span class="literal">null</span>, ErrorCode.NOT_FOUND_ERROR);</span><br><span class="line">        <span class="keyword">if</span> (!ReviewStatusEnum.PASS.equals(ReviewStatusEnum.getEnumByValue(app.getReviewStatus())))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR,<span class="string">&quot;应用未通过审核，不能答题&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 填充默认值</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">loginUser</span> <span class="operator">=</span> userService.getLoginUser(request);</span><br><span class="line">        userAnswer.setUserId(loginUser.getId());</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">// 写入数据库</span></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> userAnswerService.save(userAnswer);</span><br><span class="line">            ThrowUtils.throwIf(!result, ErrorCode.OPERATION_ERROR);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (DuplicateKeyException e)&#123;</span><br><span class="line">            <span class="comment">//ignore error</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 返回新写入的数据 id</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">newUserAnswerId</span> <span class="operator">=</span> userAnswer.getId();</span><br><span class="line">        <span class="comment">//调用评分模块</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">UserAnswer</span> <span class="variable">userAnswerWithResult</span> <span class="operator">=</span> scoringStrategyExecutor.doScore(choices,app);</span><br><span class="line">            userAnswerWithResult.setId(newUserAnswerId);</span><br><span class="line">            userAnswerWithResult.setAppId(<span class="literal">null</span>);</span><br><span class="line">            userAnswerService.updateById(userAnswerWithResult);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR,<span class="string">&quot;评分错误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ResultUtils.success(newUserAnswerId);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> AI答题应用平台 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java项目 </tag>
            
            <tag> AI答题应用平台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI答题应用平台_1项目总览</title>
      <link href="/2024/07/01/AI%E7%AD%94%E9%A2%98%E5%BA%94%E7%94%A8%E5%B9%B3%E5%8F%B0_1%E9%A1%B9%E7%9B%AE%E6%80%BB%E8%A7%88/"/>
      <url>/2024/07/01/AI%E7%AD%94%E9%A2%98%E5%BA%94%E7%94%A8%E5%B9%B3%E5%8F%B0_1%E9%A1%B9%E7%9B%AE%E6%80%BB%E8%A7%88/</url>
      
        <content type="html"><![CDATA[<h1 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h1><p>这是一个基于Vue3+SpringBoot+Redis+ChatGLM+RxJava+SSE的<strong>AI答题应用平台</strong>。<br>那这个平台可以做什么呢？<br>首先用户可以自己创建应用，对于应用的题目可以通过自定义设计，也可以通过AI来生成，支持用户检索、分享、在线答题并基于AI得到回答结果，管理员可以集中的管理和审核应用等信息。</p><h1 id="核心业务流程"><a href="#核心业务流程" class="headerlink" title="核心业务流程"></a>核心业务流程</h1><p><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722149179081-005eb93e-0eee-4a8a-9ab0-26c0a44600cc.jpeg"></p><h1 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h1><p><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722151289083-5879aa07-6dbc-4257-bd74-23155c2afee0.jpeg"></p><h1 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h1><p><strong>前端</strong></p><blockquote><p>Vue3+Vue-cli脚手架快速初始化项目<br>AcroDesign组件库<br>Pinia状态管理<br>Axios请求库+openApi自动生成对后端接口的请求方法<br>前端工程化：ESLint+Prettier+TypeScript 校验代码格式以及代码美化<br>QRcode生成分享二维码</p></blockquote><p><strong>后端</strong></p><blockquote><p>SpringBoot：初始化后端项目<br>存储层：MySQL+redis缓存<br>MyBatisPlus+MybatisX自动生成mapper和service层代码<br>Redission分布式锁<br>caffeine实现本地缓存<br>基于ChatGLM大模型实现AI赋能<br>RxJava响应式框架+线程池<br>Shardingshpere实现分库分表<br>SSE服务端推送<br>多种设计模式</p></blockquote><h1 id="功能模块梳理"><a href="#功能模块梳理" class="headerlink" title="功能模块梳理"></a>功能模块梳理</h1><h2 id="用户模块"><a href="#用户模块" class="headerlink" title="用户模块"></a>用户模块</h2><ul><li>注册</li><li>登录</li><li>管理（增删改查）</li></ul><h2 id="应用模块"><a href="#应用模块" class="headerlink" title="应用模块"></a>应用模块</h2><ul><li>创建应用</li><li>修改应用</li><li>删除应用</li><li>查看应用详情</li><li>查看应用列表</li><li>查看自己创建的应用</li><li>分享应用</li><li>管理应用-增删改查（仅管理员）</li><li>管理应用-上线和下架（仅管理员）</li></ul><h2 id="题目模块"><a href="#题目模块" class="headerlink" title="题目模块"></a>题目模块</h2><ul><li>创建题目</li><li>删除题目</li><li>修改题目</li><li>管理题目-增删改查（仅管理员）</li><li>AI生成题目</li></ul><h2 id="评分模块"><a href="#评分模块" class="headerlink" title="评分模块"></a>评分模块</h2><ul><li>创建评分结果</li><li>删除评分结果</li><li>修改评分结果</li><li>计算评分结果（多种评分策略）<ul><li>自定义打分类策略</li><li>自定义测评类策略</li><li>AI分析测评类策略</li></ul></li><li>管理评分结果-增删改查（仅管理员）</li></ul><h2 id="回答模块"><a href="#回答模块" class="headerlink" title="回答模块"></a>回答模块</h2><ul><li>提交回答</li><li>查看自己提交的回答列表</li><li>查看某次回答的回答结果</li><li>管理回答-增删改查（仅管理员）</li></ul><h2 id="统计分析模块"><a href="#统计分析模块" class="headerlink" title="统计分析模块"></a>统计分析模块</h2><ul><li>应用结果分析与查看<ul><li>分析热门应用</li><li>分析某一应用下的结果比例</li></ul></li></ul><h1 id="界面展示"><a href="#界面展示" class="headerlink" title="界面展示"></a>界面展示</h1><p><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722254635103-3e302ef3-34fa-44a4-a9ff-6c66a89c5816.png" alt="image.png"><br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722254838598-41202638-e943-4f3f-8c15-30076e556242.png" alt="image.png"><br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722254896659-5dfedec8-924d-4670-a6df-ae6fcad3101d.png" alt="image.png"><br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1722254867850-998d1830-2e93-4f87-84a3-ef06a4e88b8b.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> AI答题应用平台 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java项目 </tag>
            
            <tag> AI答题应用平台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL优化</title>
      <link href="/2024/06/26/SQL%E4%BC%98%E5%8C%96/"/>
      <url>/2024/06/26/SQL%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>常见的SQL优化分为以下几类<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1719398846884-6949f355-7e1b-4297-80d9-8d47c86f612b.jpeg"></p><h1 id="插入数据数据优化"><a href="#插入数据数据优化" class="headerlink" title="插入数据数据优化"></a>插入数据数据优化</h1><p>平常我们在插入数据时，可能通常是一条一条插入，这样的效率显然不高，所以可以通过一次性往数据库中插入多条记录，主要的优化点有三个</p><h2 id="直接在values后面通过逗号来分割多条数据"><a href="#直接在values后面通过逗号来分割多条数据" class="headerlink" title="直接在values后面通过逗号来分割多条数据"></a>直接在values后面通过逗号来分割多条数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>),(<span class="number">3</span>,<span class="string">&#x27;王五&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="按主键顺序插入"><a href="#按主键顺序插入" class="headerlink" title="按主键顺序插入"></a>按主键顺序插入</h2><p>因为按主键顺序插入的方式性能要高于乱序插入（具体在下面主键优化那里会说）</p><h2 id="使用load指令来插入"><a href="#使用load指令来插入" class="headerlink" title="使用load指令来插入"></a>使用load指令来插入</h2><p>如果一次性需要插入大批量数据，比如几百万条，使用insert语句插入性能较低，此时可以使用mysql数据库提供的load指令进行插入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 客户端连接服务端时，加上参数 -–local-infile</span></span><br><span class="line">mysql –<span class="operator">-</span><span class="keyword">local</span><span class="operator">-</span>infile <span class="operator">-</span>u root <span class="operator">-</span>p</span><br><span class="line"><span class="comment">-- 设置全局参数local_infile为1，开启从本地加载文件导入数据的开关</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> local_infile <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 执行load指令将准备好的数据，加载到表结构中</span></span><br><span class="line">load data <span class="keyword">local</span> infile <span class="string">&#x27;/root/sql1.log&#x27;</span> <span class="keyword">into</span> <span class="keyword">table</span> tb_user fields</span><br><span class="line">terminated <span class="keyword">by</span> <span class="string">&#x27;,&#x27;</span> lines terminated <span class="keyword">by</span> <span class="string">&#x27;\n&#x27;</span> ;</span><br></pre></td></tr></table></figure><h1 id="主键优化"><a href="#主键优化" class="headerlink" title="主键优化"></a>主键优化</h1><p>在innoDB存储引擎中，表数据都是根据主键顺序组织存放的<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1719399580077-44fe4428-d799-4163-a138-c03a88154a49.png" alt="image.png"><br>对于聚集索引，行数据，都是存储在聚集索引的叶子节点上的<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1719399852420-35ee803b-a605-4224-8231-d082a2399d65.png" alt="image.png"><br>在innoDB引擎中，数据行是记录在逻辑结构page页中，而每一页的大小都是固定的，默认16K。也就是说，一页中所存储的行是有限的，如果插入的数据行row在该页存储不下，就会存储到下一个页中，页与页之间会通过指针连接。<br>如果不是按主键顺序插入的话，而是采用乱序插入，那么当插入的主键需要在已插入的主键中间去插入，这个时候就会出现<strong>页分裂</strong>的现象，并且页分裂后还需要重新设置链表指针，保证是按主键顺序来组织的，这是比较耗费性能的操作。<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1719400871488-eb55e19b-44e4-4b95-a167-f42617268800.png" alt="image.png"><br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1719400887390-c6472641-1577-4055-8b34-89ec2436e469.png" alt="image.png"></p><h1 id="order-by优化"><a href="#order-by优化" class="headerlink" title="order by优化"></a>order by优化</h1><p>在MySQL中，排序方式主要有两种</p><ul><li>Using filesort:通过表的索引或者全表扫描，读取满足条件的数据，然后再排序缓冲池中完成排序操作，所有不是通过索引直接返回排序结果的排序都是全表扫描</li><li>Using index: 通过有序索引顺序扫描直接返回有序数据，不需要额外排序</li></ul><p>使用Using index的排序效率更高，所以在优化排序操作的时候，尽量使用Using index</p><blockquote><p>order by优化原则</p><ol><li>根据排序字段建立合适的索引，多字段排序时，也遵循最左前缀法则</li><li>尽量使用覆盖索引</li><li>多字段排序，一个升序一个降序，此时需要注意联合索引在创建时的规则</li><li>如果不可避免出现filesort,大数据量排序时，可以适当增大排序缓冲区大小</li></ol></blockquote><h1 id="group-by优化"><a href="#group-by优化" class="headerlink" title="group by优化"></a>group by优化</h1><p>其实大部分优化操作，都是对索引的合理设计，对于分组操作，也是看索引对分组操作的影响。</p><blockquote><p>group by优化原则</p><ol><li>在分组操作时，可以通过索引来提高效率</li><li>分组操作时，索引的使用也是满足最左前缀法则的</li></ol></blockquote><h1 id="limit优化"><a href="#limit优化" class="headerlink" title="limit优化"></a>limit优化</h1><p>对于limit分页操作，越往后，分页查询效率越低，因为在分页查询时，比如执行 limit 20000 10,此时需要排序前20010记录，仅仅返回20000-20010的记录，其他记录丢弃，查询排序的代价非常大。</p><blockquote><p>limit优化原则<br>可以通过创建<strong>覆盖索引</strong>的方式提升性能</p></blockquote><h1 id="count优化"><a href="#count优化" class="headerlink" title="count优化"></a>count优化</h1><p>对于InnoDB引擎，它执行count(*)的时候，需要把数据一行一行地从引擎里面读出来，然后累积计数。</p><table><thead><tr><th>count用法</th><th>含义</th></tr></thead><tbody><tr><td>count(*)</td><td>InnoDB引擎并不会把全部字段取出来，而是专门做了优化，不取值，服务层直接按行进行累加。</td></tr><tr><td>count(主键)</td><td>InnoDB 引擎会遍历整张表，把每一行的主键id 值都取出来，返回给服务层。 服务层拿到主键后，直接按行进行累加(主键不可能为null)</td></tr><tr><td>count(字段)</td><td>没有not null 约束 : InnoDB 引擎会遍历整张表把每一行的字段值都取出来，返回给服务层，服务层判断是否为null，不为null，计数累加。 有not null 约束：InnoDB 引擎会遍历整张表把每一行的字段值都取出来，返回给服务层，直接按行进行累加。</td></tr><tr><td>count(数字)</td><td>InnoDB 引擎遍历整张表，但不取值。服务层对于返回的每一行，放一个数字“1” 进去，直接按行进行累加。</td></tr></tbody></table><blockquote><p>使用count(<em>)和count(数字)并不会把值取出来，而是直接进行计算<br>效率：count(字段)&lt;count(主键)&lt;count(数字)≈count(</em>)</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker学习</title>
      <link href="/2024/06/16/Docker%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/06/16/Docker%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="1-docker基本介绍"><a href="#1-docker基本介绍" class="headerlink" title="1.docker基本介绍"></a>1.docker基本介绍</h1><h2 id="0-什么是容器？"><a href="#0-什么是容器？" class="headerlink" title="0 什么是容器？"></a>0 什么是容器？</h2><p>在之前我们可能没接触过docker,但是也大致听过docker是容器管理工具，那么什么是容器呢？在生活中，比如冰箱就是一个容器，它里面有各种隔层，可以存放不同种类的食物，各种食物之间是隔离的，在软件开发中也是类似的，不过容器中存放的是应用程序，容器技术可以把应用程序打包成一个标准化的单元，方便我们对软件的开发、交付和部署。</p><h2 id="1-1-什么是docker？"><a href="#1-1-什么是docker？" class="headerlink" title="1.1 什么是docker？"></a>1.1 什么是docker？</h2><p>Docker 是一个开源的应用容器引擎，可以轻松的为任何应用创建一个轻量级的、可移植的、自给自足的容器。通俗来讲就是它是一个大容器，里面可以放我们的应用程序，这些应用程序相互之间是独立的，可以独自运行的。</p><h2 id="1-2-为什么要引入docker"><a href="#1-2-为什么要引入docker" class="headerlink" title="1.2 为什么要引入docker?"></a>1.2 为什么要引入docker?</h2><p>docker主要有如下优点</p><ol><li><strong>提高了程序开发的效率</strong>，对于一些常用的规范的应用程序，我们可以把这样的应用程序制作为镜像，之后就可以在这个镜像的基础上，添加我们自己的业务。比如想使用mysq服务，传统的方式，是需要根据自己需要安装的平台（Windows或者linux等）来下载对应的版本，下载完之后还需要配置环境依赖和一些配置信息。但是在使用docker后，就不需要自己去下载所需的版本，而是直接去拉取别人创建好的mysql镜像，只需要简单配置，就可以直接使用。</li><li><strong>可以高效的部署以及扩展</strong>：docker容器可以运行在任何机器上，比如物理机、虚拟机，Windows，Linux等等，可以非常方便的从一个平台迁移到另一个平台。</li><li>资源利用率高：相比于虚拟机的资源占用率高，启动慢，docker容器非常的轻量级，启动非常的快，它占用的系统资源非常少，只需要满足应用程序的正常运行就够了。</li></ol><h2 id="1-3-docker常用命令"><a href="#1-3-docker常用命令" class="headerlink" title="1.3 docker常用命令"></a>1.3 docker常用命令</h2><table><thead><tr><th><strong>命令</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>docker pull</td><td>拉取镜像</td></tr><tr><td>docker push</td><td>推送镜像</td></tr><tr><td>docker images</td><td>查看本地镜像</td></tr><tr><td>docker rmi</td><td>删除本地镜像</td></tr><tr><td>docker run</td><td>创建并运行容器（不能重复创建）</td></tr><tr><td>docker start</td><td>运行指定容器</td></tr><tr><td>docker stop</td><td>停止指定容器</td></tr><tr><td>docker restart</td><td>重新运行指定容器</td></tr><tr><td>docker rm [-f 强制删除]</td><td>删除指定容器（运行中的容器需要强制删除）</td></tr><tr><td>docker ps [-a 查看所有容器]</td><td>查看容器（运行中的）</td></tr><tr><td>docker logs</td><td>查看运行容器日志</td></tr><tr><td>docker save</td><td>保存镜像到本地压缩文件</td></tr><tr><td>docker load</td><td>加载本地压缩文件到镜像</td></tr><tr><td>docker inspect</td><td>查看镜像详细信息</td></tr></tbody></table><p><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1721094593839-6e219d27-6403-4693-adb9-f89d321b2727.png" alt="image.png"></p><h1 id="2-数据卷"><a href="#2-数据卷" class="headerlink" title="2.数据卷"></a><strong>2.数据卷</strong></h1><h2 id="2-1为什么要引入数据卷？"><a href="#2-1为什么要引入数据卷？" class="headerlink" title="2.1为什么要引入数据卷？"></a>2.1为什么要引入数据卷？</h2><p>容器是一个隔离的环境，如果容器中的程序、文件、配置等信息都在容器的内部，访问非常的不方便，而且当容器停止的时候，这些数据和配置可能会丢失。所以，<strong>为了让容器中运行的程序的数据、配置等信息与容器解耦</strong>，引入数据卷的概念。</p><h2 id="2-2-什么是数据卷？"><a href="#2-2-什么是数据卷？" class="headerlink" title="2.2 什么是数据卷？"></a>2.2 什么是数据卷？</h2><p>数据卷是一个虚拟的目录，它主要是把<strong>宿主机的文件目录</strong>和<strong>容器内的文件目录</strong>做一个映射，这样就把容器内文件和宿主机文件关联起来了，既可以把容器内数据持久化到宿主机磁盘，也可以通过宿主机磁盘配置文件来修改容器中的配置信息。<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1721094628385-bf44c7ae-7cac-4d91-a359-5815d54455bc.png" alt="image.png"><br>上图中就是创建了html和conf两个数据卷，将宿主机和容器的静态文件和配置文件做了一个关联，或者说挂载，这样把静态文件放在宿主机对应的目录，就可以实现nginx代理了。</p><blockquote><p>注意：<br>一般容器目录在宿主机中是在&#x2F;var&#x2F;lib&#x2F;docker&#x2F;volumes&#x2F; 下面，但是容器中并不是在对应的目录下，通过数据卷来指向。</p></blockquote><h2 id="2-3-数据卷常用命令"><a href="#2-3-数据卷常用命令" class="headerlink" title="2.3 数据卷常用命令"></a>2.3 数据卷常用命令</h2><table><thead><tr><th><strong>命令</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>docker volume create</td><td>创建数据卷</td></tr><tr><td>docker volume rm</td><td>删除数据卷</td></tr><tr><td>docker volume ls</td><td>查看所有数据卷</td></tr><tr><td>docker volume inspect</td><td>查看某个数据卷</td></tr><tr><td>docker volume prune</td><td>清除数据卷</td></tr></tbody></table><blockquote><p>注意：容器和数据卷的挂载需要在创建容器的时候进行配置，对于创建好的容器，不能再指定数据卷，如果在创建容器的时候，没有指定数据卷，则会配置一个默认的数据卷（一般名称很长、不好记）</p></blockquote><h2 id="2-4-挂载本地目录或文件"><a href="#2-4-挂载本地目录或文件" class="headerlink" title="2.4 挂载本地目录或文件"></a>2.4 挂载本地目录或文件</h2><p>通常数据卷的目录结构比较深，操作很不方便，所以通常情况下会直接将容器目录和宿主机的指定目录做一个挂载。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 挂载本地目录</span></span><br><span class="line">-v 宿主机目录:容器目录</span><br><span class="line"><span class="comment"># 挂载本地文件</span></span><br><span class="line">-v 本地文件:容器文件</span><br></pre></td></tr></table></figure><blockquote><p>注意：如果是挂载到本地的目录或者文件时，需要以.&#x2F;或者&#x2F;开头，否则会把它当成一个数据卷，不会从指定目录挂载，而是去&#x2F;var&#x2F;lib&#x2F;docker&#x2F;volumes&#x2F; 下创建数据卷来挂载。</p></blockquote><h1 id="3-镜像"><a href="#3-镜像" class="headerlink" title="3.镜像"></a>3.镜像</h1><h2 id="3-1基本介绍"><a href="#3-1基本介绍" class="headerlink" title="3.1基本介绍"></a>3.1基本介绍</h2><p>镜像本质上就是一个文件系统，由一系列文件组成，这些文件包括程序运行所需的库函数、环境依赖、程序本身等等组成。使用镜像，我们可以快速构建自己开发所需的基础环境。<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1721098549810-83620a96-7aed-485a-b32e-cd6d026138bf.png" alt="image.png"><br>但是镜像中的文件并不是随便放的，而是有一定的层级结构，比如有基础镜像，提供应用运行所需的系统函数库，环境配置、文件等等，在基础镜像之上，还有我们自己编写的应用代码，也会有环境依赖和业务部分，也会分为不同的层，在应用程序的最上面，有镜像运行的入口，也就是程序启动的脚本和参数。</p><h2 id="3-2Dockerfile"><a href="#3-2Dockerfile" class="headerlink" title="3.2Dockerfile"></a>3.2Dockerfile</h2><p>想一下上面分层的好处，我们在使用镜像的时候，可能一些基础的镜像都是通用的，将这些通用的部分提取出来，就不需要我们再去配置这部分内容，而是直接使用（类似我们在编写代码中使用的通用工具类）<br>我们自己的项目在制作镜像的时候，就需要使用Dockerfile来指定镜像制作的步骤，其对应文档为<br><a href="https://docs.docker.com/engine/reference/builder/">https://docs.docker.com/engine/reference/builder/</a><br>比较常用的语法</p><table><thead><tr><th><strong>指令</strong></th><th><strong>说明</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td>FROM</td><td>指定基础镜像</td><td><code>FROM centos:6</code></td></tr><tr><td>ENV</td><td>设置环境变量</td><td><code>ENV key value</code></td></tr><tr><td>COPY</td><td>拷贝本地文件到容器指定目录</td><td><code>COPY ./xx.jar /tmp/app.jar</code></td></tr><tr><td>RUN</td><td>执行shell命令，一般是安装过程的命令</td><td><code>RUN yum install gcc</code></td></tr><tr><td>EXPOSE</td><td>指定容器运行时监听的端口</td><td>EXPOSE 8080</td></tr><tr><td>ENTRYPOINT</td><td>应用的启动命令</td><td>ENTRYPOINT java -jar xx.jar</td></tr></tbody></table><blockquote><p>注意：这个Dockerfile文件只需要了解各个指令是干什么的，不需要完全自己编写，需要时直接去网上复制，根据自己情况做修改就可以。</p></blockquote><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基础镜像</span></span><br><span class="line"><span class="keyword">FROM</span> openjdk:<span class="number">11.0</span>-jre-buster</span><br><span class="line"><span class="comment"># 设定时区</span></span><br><span class="line"><span class="keyword">ENV</span> TZ=Asia/Shanghai</span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">ln</span> -snf /usr/share/zoneinfo/<span class="variable">$TZ</span> /etc/localtime &amp;&amp; <span class="built_in">echo</span> <span class="variable">$TZ</span> &gt; /etc/timezone</span></span><br><span class="line"><span class="comment"># 拷贝jar包</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> docker-demo.jar /app.jar</span></span><br><span class="line"><span class="comment"># 入口</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;java&quot;</span>, <span class="string">&quot;-jar&quot;</span>, <span class="string">&quot;/app.jar&quot;</span>]</span></span><br></pre></td></tr></table></figure><h2 id="3-3镜像构建"><a href="#3-3镜像构建" class="headerlink" title="3.3镜像构建"></a>3.3镜像构建</h2><p>镜像构建流程</p><ol><li>首先需要把项目打包成jar包</li><li>编写Dockerfile文件</li><li>进入jar包所在目录，通过<code>docker build -t 镜像名 Dockerfile所在位置</code>来构建镜像<ol><li>其中镜像名后可以加:tag来添加版本信息</li><li>Dockerfile需要注意其所在位置，一般.表示当前目录</li></ol></li></ol><h1 id="4-网络"><a href="#4-网络" class="headerlink" title="4.网络"></a>4.网络</h1><p>在一个微服务项目中，可能会用到很多个中间件，当我们把这些中间件添加到docker容器后，这些组件之间默认是可以访问的（因为默认会把这些容器添加到一个默认网络中）。<br>但是有一个问题，这些容器的ip都是虚拟的，是由docker来进行分配的，可能mysql这次启动分配的ip下次就会被换成别的，这样在配置文件中写的地址就不够灵活了。<br><strong>引入docker网络</strong><br>我们就可以把这些中间件容器都添加到一个网络里，之后就可以通过容器名来相互通信了。<br>docker网络功能相关文档：<a href="https://docs.docker.com/engine/reference/commandline/network/"><strong>https://docs.docker.com/engine/reference/commandline/network/</strong></a><br><strong>常见命令</strong></p><table><thead><tr><th><strong>命令</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>docker network create</td><td>创建一个网络</td></tr><tr><td>docker network rm</td><td>删除指定网络</td></tr><tr><td>docker network ls</td><td>查看所有网络</td></tr><tr><td>docker network prune</td><td>清除未使用网络</td></tr><tr><td>docker network connect [网络名][容器名][–alias 别名(给网络中的容器起别名)]</td><td>使指定容器添加到某网络</td></tr><tr><td>docker network disconnect</td><td>使指定容器离开某网络</td></tr><tr><td>docker network inspect</td><td>查看网络详细信息</td></tr></tbody></table><h1 id="5-DockerCompose"><a href="#5-DockerCompose" class="headerlink" title="5 DockerCompose"></a><strong>5 DockerCompose</strong></h1><p>通常在实际业务中，可能会由非常多的服务，对于这些服务，我们不能一个一个的去部署，那样会很麻烦，因此，引入dockerCompose。<br>它可以对我们的相互关联的多个docker容器，做一个统一的部署。只需要编写一个dockercompose.yml文件，在里面声明各个容器信息。使用它可以简化docker部署。</p><h2 id="5-1docker-VS-dockerCompose"><a href="#5-1docker-VS-dockerCompose" class="headerlink" title="5.1docker VS dockerCompose"></a>5.1docker VS dockerCompose</h2><p>使用<code>docker run</code>来部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name mysql \</span><br><span class="line">  -p 3306:3306 \</span><br><span class="line">  -e TZ=Asia/Shanghai \</span><br><span class="line">  -e MYSQL_ROOT_PASSWORD=123 \</span><br><span class="line">  -v ./mysql/data:/var/lib/mysql \</span><br><span class="line">  -v ./mysql/conf:/etc/mysql/conf.d \</span><br><span class="line">  -v ./mysql/init:/docker-entrypoint-initdb.d \</span><br><span class="line">  --network stufz</span><br><span class="line">  mysql</span><br></pre></td></tr></table></figure><p>使用<code>docker-compose.yml</code>来定义</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.8&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3306:3306&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="number">123</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./mysql/conf:/etc/mysql/conf.d&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./mysql/data:/var/lib/mysql&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">new</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">new:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">stufz</span></span><br></pre></td></tr></table></figure><table><thead><tr><th><strong>docker run 参数</strong></th><th><strong>docker compose 指令</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>–name</td><td>container_name</td><td>容器名称</td></tr><tr><td>-p</td><td>ports</td><td>端口映射</td></tr><tr><td>-e</td><td>environment</td><td>环境变量</td></tr><tr><td>-v</td><td>volumes</td><td>数据卷配置</td></tr><tr><td>–network</td><td>networks</td><td>网络</td></tr></tbody></table><h2 id="5-2-dockerCompose常见命令"><a href="#5-2-dockerCompose常见命令" class="headerlink" title="5.2 dockerCompose常见命令"></a><strong>5.2 dockerCompose常见命令</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker compose [OPTIONS] [COMMAND]</span><br></pre></td></tr></table></figure><table><thead><tr><th><strong>类型</strong></th><th><strong>参数或指令</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>Options</td><td>-f</td><td>指定compose文件的路径和名称</td></tr><tr><td></td><td>-p</td><td>指定project名称。project就是当前compose文件中设置的多个service的集合，是逻辑概念</td></tr><tr><td>Commands</td><td>up</td><td>创建并启动所有service容器</td></tr><tr><td></td><td>down</td><td>停止并移除所有容器、网络</td></tr><tr><td></td><td>ps</td><td>列出所有启动的容器</td></tr><tr><td></td><td>logs</td><td>查看指定容器的日志</td></tr><tr><td></td><td>stop</td><td>停止容器</td></tr><tr><td></td><td>start</td><td>启动容器</td></tr><tr><td></td><td>restart</td><td>重启容器</td></tr><tr><td></td><td>top</td><td>查看运行的进程</td></tr><tr><td></td><td>exec</td><td>在指定的运行中容器中执行命令</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 容器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用的SQL语句</title>
      <link href="/2024/06/12/%E5%B8%B8%E7%94%A8%E7%9A%84SQL%E8%AF%AD%E5%8F%A5/"/>
      <url>/2024/06/12/%E5%B8%B8%E7%94%A8%E7%9A%84SQL%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<p>SQL语句根据不同的功能，主要分为四类：DDL、DML、DQL、DCL。<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/yuque_mind.jpeg"></p><h2 id="DDL（数据定义语言）"><a href="#DDL（数据定义语言）" class="headerlink" title="DDL（数据定义语言）"></a>DDL（数据定义语言）</h2><p>DDL语言主要分为两类，一类是针对<strong>数据库</strong>的操作，一类是针对<strong>数据表</strong>的操作（这里只是对表结构的一些操作，不是具体操作表中的数据）</p><h3 id="1-1数据库操作"><a href="#1-1数据库操作" class="headerlink" title="1.1数据库操作"></a>1.1数据库操作</h3><h4 id="查询所有的数据库"><a href="#查询所有的数据库" class="headerlink" title="查询所有的数据库"></a>查询所有的数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> databases;</span><br></pre></td></tr></table></figure><h4 id="查询当前数据库"><a href="#查询当前数据库" class="headerlink" title="查询当前数据库"></a>查询当前数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> database();</span><br></pre></td></tr></table></figure><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database [if <span class="keyword">not</span> <span class="keyword">exists</span>] 数据库名 [<span class="keyword">default</span> charset 字符集] [<span class="keyword">collate</span> 排序规则];</span><br></pre></td></tr></table></figure><h4 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> database [if <span class="keyword">exists</span>] 数据库名;</span><br></pre></td></tr></table></figure><h4 id="切换数据库"><a href="#切换数据库" class="headerlink" title="切换数据库"></a>切换数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use 数据库名;</span><br></pre></td></tr></table></figure><h3 id="1-2数据表操作"><a href="#1-2数据表操作" class="headerlink" title="1.2数据表操作"></a>1.2数据表操作</h3><h4 id="查询当前数据库所有表"><a href="#查询当前数据库所有表" class="headerlink" title="查询当前数据库所有表"></a>查询当前数据库所有表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> tables;</span><br></pre></td></tr></table></figure><h4 id="查看指定的表结构"><a href="#查看指定的表结构" class="headerlink" title="查看指定的表结构"></a>查看指定的表结构</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">desc</span> 表名;</span><br></pre></td></tr></table></figure><h4 id="查询指定表的建表语句"><a href="#查询指定表的建表语句" class="headerlink" title="查询指定表的建表语句"></a>查询指定表的建表语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> 表名;</span><br></pre></td></tr></table></figure><h4 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">  字段<span class="number">1</span> 字段类型<span class="number">1</span>，</span><br><span class="line">  字段<span class="number">2</span> 字段类型<span class="number">2</span>，</span><br><span class="line">  字段<span class="number">3</span> 字段类型<span class="number">3</span>，</span><br><span class="line">  ...</span><br><span class="line">  字段n 字段类型n</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h4><ul><li><p>添加字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> 字段名 字段类型;</span><br></pre></td></tr></table></figure></li><li><p>修改数据类型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 modify 字段名 新字段类型;</span><br></pre></td></tr></table></figure></li><li><p>修改字段名和字段类型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 change 旧字段名 新字段名 字段类型;</span><br></pre></td></tr></table></figure></li><li><p>删除字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> 字段名;</span><br></pre></td></tr></table></figure></li><li><p>修改表名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 rename <span class="keyword">to</span> 新表名;</span><br></pre></td></tr></table></figure></li></ul><h4 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> [if <span class="keyword">exists</span>] 表名;</span><br></pre></td></tr></table></figure><h4 id="清空表"><a href="#清空表" class="headerlink" title="清空表"></a>清空表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> 表名;</span><br></pre></td></tr></table></figure><h2 id="DML-数据操作语言-增删改"><a href="#DML-数据操作语言-增删改" class="headerlink" title="DML(数据操作语言-增删改)"></a>DML(数据操作语言-增删改)</h2><h3 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h3><p>主要有两种方式添加数据：指定字段添加、全部字段添加<br>对于<strong>指定字段</strong>添加，这种方式需要保证字段名和字段值一一对应。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名(字段名<span class="number">1</span>,字段名<span class="number">2</span>,...)<span class="keyword">values</span> (数值<span class="number">1</span>,数值<span class="number">2</span>,...)</span><br></pre></td></tr></table></figure><p>对于<strong>全部字段</strong>添加</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名(各个字段)<span class="keyword">values</span>(各个字段的值);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名 <span class="keyword">values</span>(数值<span class="number">1</span>,数值<span class="number">2</span>,数值<span class="number">3.</span>..数值n);</span><br></pre></td></tr></table></figure><blockquote><p>对于有多条数据插入，可以在values后面通过,来区分不同的数据。</p></blockquote><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名 [<span class="keyword">where</span> 条件];</span><br></pre></td></tr></table></figure><blockquote><p>delete语句是删除数据表中的记录，也就是按行来删除，不能只删除某个字段。</p></blockquote><h3 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 字段名<span class="number">1</span><span class="operator">=</span>值<span class="number">1</span>,字段名<span class="number">2</span><span class="operator">=</span>值<span class="number">2</span>,...[<span class="keyword">where</span> 条件];</span><br></pre></td></tr></table></figure><h2 id="DQL-数据查询语言-最常用"><a href="#DQL-数据查询语言-最常用" class="headerlink" title="DQL(数据查询语言-最常用)"></a>DQL(数据查询语言-最常用)</h2><p><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/yuque_mind1.jpeg"></p><blockquote><p>SQL编写顺序是：select–from–where–group by–having–order by–limit<br>但是语句执行顺序是：from–where–group by–having–select–order by–limit</p></blockquote><h3 id="查询多个字段"><a href="#查询多个字段" class="headerlink" title="查询多个字段"></a>查询多个字段</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段<span class="number">1</span>,字段<span class="number">2</span>,字段<span class="number">3.</span>..<span class="keyword">from</span> 表名; #查询指定字段</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名; #查询全部字段</span><br></pre></td></tr></table></figure><blockquote><p>1.可以使用 as来设置别名，来简化代码编写<br>2.如果希望对查找到的记录去重，可以使用<strong>distinct</strong>关键字</p></blockquote><h3 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> 表名 <span class="keyword">where</span> 字段列表;</span><br></pre></td></tr></table></figure><p>常用于进行条件判断的运算符：<strong>比较运算符</strong>和<strong>逻辑运算符</strong><br>比较运算符如下</p><blockquote><p>、&lt;、&gt;&#x3D;、&lt;&#x3D;、&lt;&gt;&#x2F;!&#x3D;、&#x3D;</p></blockquote><table><thead><tr><th>between…and…</th><th>在某个范围内（包含左右边界，并且左边界应小于右边界）</th></tr></thead><tbody><tr><td>in(…)</td><td>多选一，在in之后的列表中的值</td></tr><tr><td>like占位符</td><td>模糊匹配（_匹配单个字符、%匹配任意个字符）</td></tr><tr><td>is null</td><td>是空值</td></tr></tbody></table><p>逻辑运算符如下</p><table><thead><tr><th>and 或 &amp;&amp;</th><th>多个条件同时成立</th></tr></thead><tbody><tr><td>or 或 &#124;&#124;</td><td>多个条件任意一个成立</td></tr><tr><td>not 或 !</td><td>非，取反</td></tr></tbody></table><h3 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 聚合函数(字段列表) <span class="keyword">from</span> 表名;</span><br></pre></td></tr></table></figure><blockquote><p>注意<br>1.NULL值是不参与聚合函数运算的<br>2.聚合函数不能和where进行联合使用，不过可以和having进行联合使用</p></blockquote><table><thead><tr><th>count</th><th>统计数量</th></tr></thead><tbody><tr><td>sum</td><td>求和</td></tr><tr><td>max</td><td>求最大值</td></tr><tr><td>min</td><td>求最小值</td></tr><tr><td>avg</td><td>求平均值</td></tr></tbody></table><h3 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> 表名 [<span class="keyword">where</span> 条件] <span class="keyword">group</span> <span class="keyword">by</span> 分组字段名[<span class="keyword">having</span> 分组后的过滤条件];</span><br></pre></td></tr></table></figure><blockquote><p>where和having的区别<br>1.where是在分组前进行过滤，having是对分组后的数据进行过滤<br>2.where不能对聚合函数进行判断，having可以</p></blockquote><h3 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> 表名 <span class="keyword">order</span> <span class="keyword">by</span> 字段<span class="number">1</span> 排序方式<span class="number">1</span>,字段<span class="number">2</span> 排序方式<span class="number">2</span>;</span><br></pre></td></tr></table></figure><blockquote><p>ASC：升序<br>DESC：降序</p></blockquote><h3 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段列表 <span class="keyword">from</span> 表名 limit 起始索引,查询记录数;</span><br></pre></td></tr></table></figure><blockquote><p>起始索引从0开始，如果从第一页开始查询，起始索引可以省略。</p></blockquote><h2 id="DCL-数据控制语言"><a href="#DCL-数据控制语言" class="headerlink" title="DCL(数据控制语言)"></a>DCL(数据控制语言)</h2><p>DCL语言主要是用来管理数据库用户、以及控制数据库的访问权限的。</p><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><h4 id="查询用户"><a href="#查询用户" class="headerlink" title="查询用户"></a>查询用户</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mysql.user;</span><br></pre></td></tr></table></figure><h4 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;密码&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="修改用户密码"><a href="#修改用户密码" class="headerlink" title="修改用户密码"></a>修改用户密码</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span> identified <span class="keyword">with</span> mysql_native_password <span class="keyword">by</span> <span class="string">&#x27;新密码&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="权限控制"><a href="#权限控制" class="headerlink" title="权限控制"></a>权限控制</h3><h4 id="查询权限"><a href="#查询权限" class="headerlink" title="查询权限"></a>查询权限</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> grants <span class="keyword">for</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="授予权限"><a href="#授予权限" class="headerlink" title="授予权限"></a>授予权限</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> 权限列表 <span class="keyword">on</span> 数据库名.表名 <span class="keyword">to</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="撤销权限"><a href="#撤销权限" class="headerlink" title="撤销权限"></a>撤销权限</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">revoke</span> 权限列表 <span class="keyword">on</span> 数据库名.表名 <span class="keyword">from</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> mysql </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringIOC详解</title>
      <link href="/2024/06/07/Spring-IOC/"/>
      <url>/2024/06/07/Spring-IOC/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是组件？"><a href="#什么是组件？" class="headerlink" title="什么是组件？"></a>什么是组件？</h2><p>在了解IOC之前，首先需要知道，什么是组件，组件可以理解为Java对象，不过这些Java对象是可以复用的功能性的Java对象。在我们写web项目的时候，controller层、service层、mapper层都可以作为组件。也就是整个项目就是由各种组件搭建起来的。<br><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/1717754999330-544be2b8-af8d-4511-bb1f-67eafe178eb3.png" alt="img"></p><h2 id="为什么要引入IOC的思想？"><a href="#为什么要引入IOC的思想？" class="headerlink" title="为什么要引入IOC的思想？"></a>为什么要引入IOC的思想？</h2><p>想象一下传统的实例化对象的方式，通过在Java代码中自己手动new对象，自己保存对象，并且手动维护对象之间的依赖关系，无法专注于业务代码的开发，因此就想着能不能我不自己手动创建组件，而是交给IOC容器，让它帮我们管理组件，包括组件的实例化、组件的创建、销毁、组件之间的依赖关系、组件的生命周期等等。。。</p><h2 id="什么是IOC？"><a href="#什么是IOC？" class="headerlink" title="什么是IOC？"></a>什么是IOC？</h2><p>ioc是Inversion of Control的缩写，意思是”反转控制“，也就是说，把我们自己实例化对象，自己给对象属性赋值，管理对象的控制权，交给IOC容器去管理，我们把组件添加到容器中，之后需要什么组件，就从容器中注入到我们需要的地方，不需要自己去创建。</p><h2 id="组件交给IOC容器有什么优势？"><a href="#组件交给IOC容器有什么优势？" class="headerlink" title="组件交给IOC容器有什么优势？"></a>组件交给IOC容器有什么优势？</h2><ol><li>首先降低了组件之间的耦合性：所有的组件相互之间不再是附属关系，而是变成了合作关系，组件A需要组件B，只需要告诉容器，就可以通过依赖注入，使用B组件，实现了组件之间的低耦合。</li><li>提高代码的复用性和可维护性：因为组件的实例化和管理等工作都是交给IOC容器来管理，我们只是使用组件，所以提高代码的可重用和模块化。</li><li>提高组件的可扩展性：因为Spring框架还提供了其他的一些功能，当我们把组件交给IOC容器管理后，组件也可以使用Spring提供的其他功能。</li></ol><h2 id="怎么把组件交给IOC容器管理（IOC怎么用）？"><a href="#怎么把组件交给IOC容器管理（IOC怎么用）？" class="headerlink" title="怎么把组件交给IOC容器管理（IOC怎么用）？"></a>怎么把组件交给IOC容器管理（IOC怎么用）？</h2><blockquote><p>想要把组件交给IOC容器管理，首先需要<strong>配置元信息，</strong>这个元信息就是告诉SpringIOC容器，我想把哪些Java对象加入到ioc容器中，以及这些Java对象之间的依赖关系是怎么样的。<br>之后就是<strong>实例化容器，</strong>根据配置的元信息，实例化一个容器，用来管理bean组件<br>最后就是<strong>获取bean组件</strong></p></blockquote><p><img src="https://hexoblog-1311692551.cos.ap-nanjing.myqcloud.com/images/image-20240607203113660.png" alt="image-20240607203113660"><br>Spring提供了3种配置元信息的方式</p><ol><li>基于XML的方式（现在很少用）</li><li>基于注解的方式(常用)</li><li>基于配置类的方式（重要）<br>:::</li></ol><h3 id="1-基于XML的方式（了解）"><a href="#1-基于XML的方式（了解）" class="headerlink" title="1.基于XML的方式（了解）"></a>1.基于XML的方式（了解）</h3><p>基于XML的配置元数据的基本结构如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 此处要添加一些约束，配置文件的标签并不是随意命名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">  https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;...&quot;</span> [<span class="attr">1</span>] <span class="attr">class</span>=<span class="string">&quot;...&quot;</span> [<span class="attr">2</span>]&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- collaborators and configuration for this bean go here --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;...&quot;</span> <span class="attr">class</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- collaborators and configuration for this bean go here --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- more bean definitions go here --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>主要是通过在配置文件在添加<bean></bean>的方式来管理组件<br><strong>bean标签</strong>：告诉IOC需要创建的组件的信息，也就是交给IOC容器管理的对象<br><strong>id</strong>：它是bean的唯一标识，之后我们想要获取这个bean，就可以通过bean的id来获取<br><strong>class</strong>：组件类的全限定符，既然bean组件就是Java对象，那么对象肯定有它所属的类，使用class可以对组件进行一个类型限定。</p><hr><p>当一个组件需要使用到另一个组件的功能的时候，可以通过<strong>依赖注入</strong>的方式，来把所需的组件，注入到当前的组件中。常用的组件主要方式有2种：基于<strong>构造函数</strong>的依赖注入、基于<strong>setter方法</strong>的依赖注入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 引用类bean声明 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;x.y.UserService&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 构造函数引用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">ref</span>=<span class="string">&quot;userDao&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 被引用类bean声明 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;x.y.UserDao&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>constructor-arg标签：name属性指定参数名、index属性指定参数角标、value属性指定普通属性值、ref属性指定引用属性，通过ref，可以指向别的bean组件，实现依赖的注入。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;simpleMovieLister&quot;</span> <span class="attr">class</span>=<span class="string">&quot;examples.SimpleMovieLister&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- setter方法，注入movieFinder对象的标识id</span></span><br><span class="line"><span class="comment">       name = 属性名  ref = 引用bean的id值</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;movieFinder&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;movieFinder&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- setter方法，注入基本数据类型movieName</span></span><br><span class="line"><span class="comment">       name = 属性名 value= 基本类型值</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;movieName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;消失的她&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;movieFinder&quot;</span> <span class="attr">class</span>=<span class="string">&quot;examples.MovieFinder&quot;</span>/&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>property标签：可以给setter方法对应的属性赋值，其中name&#x3D;属性名、value&#x3D;基本数据类型、ref&#x3D;引用数据类型。</p></li></ul><h3 id="2-基于注解的方式"><a href="#2-基于注解的方式" class="headerlink" title="2.基于注解的方式"></a>2.基于注解的方式</h3><p>Spring中提供了多个注解，可以把这些注解标注在Java类上，来把它们定义为Spring Bean。</p><table><thead><tr><th>注解</th><th>说明</th></tr></thead><tbody><tr><td>@Component</td><td>这是一个通用组件，只是标识它是容器中的一个组件</td></tr><tr><td>@Controller</td><td>表示这是一个控制层组件，该组件标识的类主要负责请求的接收和响应</td></tr><tr><td>@Service</td><td>表示这是一个业务层组件，该组件标识的类主要负责处理具体的业务</td></tr><tr><td>@Repository</td><td>表示这是一个数据访问层组件，该组件标识的类主要负责与数据库的交互</td></tr></tbody></table><p>需要注意：用这些组件标识的类只是表示它们把它们交给IOC容器管理，但是真正加入IOC容器还需要经过扫描，也就是component-scan，所以<strong>注解+扫描</strong>需要配合使用。<br>扫描方式有两种：XML方式（了解）、注解方式（常用）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- context:include-filter标签：指定在原有扫描规则的基础上追加的规则 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注解方式：<code>@ComponentScan()</code><br>基于注解方式的依赖注入，主要有两个：<code>@Autowired</code>和<code>@Resource</code><br>@AutoWired工作原理</p><ol><li>首先根据所需的组件类型到IOC容器中查找<ol><li>能够找到唯一的bean：直接执行装配</li><li>完全找不到这个类型的bean：装配失败</li><li>所需类型匹配的bean不止一个<ol><li>没有@Qualifier注解：根据@AutoWired标记位置成员变量的变量名作为bean的id进行匹配<ol><li>如果匹配成功：执行装配</li><li>没有匹配成功：装配失败</li></ol></li><li>有@Qualifier注解：根据该注解指定的名称作为bean的id进行匹配<ol><li>能找到：执行装配</li><li>找不到：装配失败</li></ol></li></ol></li></ol></li></ol><p>@Resource注解：默认根据bean名称装配，如果没有指定名称，使用属性名作为名称，如果通过名称找不到的化会自动通过类型装配。</p><p>:::<br>两者有什么区别？</p><ol><li>来源：@AutoWired注解是Spring框架的，@Resource注解是JDK扩展包中的</li><li>匹配顺序：@AutoWired注解优先通过类型匹配，匹配不到再通过id匹配，@Resource注解优先通过id匹配，匹配不到再通过类型匹配</li><li>作用范围：@AutoWired注解可以用在属性、setter方法、构造方法、构造方法参数上。@Resource注解只能用在属性和setter方法上。</li></ol><p>除了这两个注入方法外，还有一个注解也比较常用，<code>@Value</code>，这个注解主要用于访问外部属性，比如访问配置文件中的属性。</p><h3 id="3-基于配置类的方式"><a href="#3-基于配置类的方式" class="headerlink" title="3.基于配置类的方式"></a>3.基于配置类的方式</h3><p>通过编写一个配置类，使用@Configuration和@Bean的方式，定义组件,这种方式通常用于定义一些第三方工具的类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.ComponentScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.PropertySource;</span><br><span class="line"></span><br><span class="line"><span class="comment">//标注当前类是配置类，替代application.xml    </span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="comment">//使用注解读取外部配置，替代 &lt;context:property-placeholder标签</span></span><br><span class="line"><span class="meta">@PropertySource(&quot;classpath:application.properties&quot;)</span></span><br><span class="line"><span class="comment">//使用@ComponentScan注解,可以配置扫描包,替代&lt;context:component-scan标签</span></span><br><span class="line"><span class="meta">@ComponentScan(basePackages = &#123;&quot;com.stufz.components&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置类的注入方式，可以在一个<code>@Bean</code>方法中，直接调用其他<code>@Bean</code>方法来获取Bean实例，也可以通过在参数中传递。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JavaConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> HappyMachine <span class="title function_">happyMachine</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">HappyMachine</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方式一</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> HappyComponent <span class="title function_">happyComponent</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">HappyComponent</span> <span class="variable">happyComponent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HappyComponent</span>();</span><br><span class="line">        <span class="comment">//直接调用方法即可! </span></span><br><span class="line">        happyComponent.setHappyMachine(happyMachine());</span><br><span class="line">        <span class="keyword">return</span> happyComponent;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//方式二</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> HappyComponent <span class="title function_">happyComponent</span><span class="params">(HappyMachine happyMachine)</span>&#123;</span><br><span class="line">        <span class="type">HappyComponent</span> <span class="variable">happyComponent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HappyComponent</span>();</span><br><span class="line">        <span class="comment">//赋值</span></span><br><span class="line">        happyComponent.setHappyMachine(happyMachine);</span><br><span class="line">        <span class="keyword">return</span> happyComponent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="组件的生命周期和作用域"><a href="#组件的生命周期和作用域" class="headerlink" title="组件的生命周期和作用域"></a>组件的生命周期和作用域</h2><h3 id="bean的生命周期"><a href="#bean的生命周期" class="headerlink" title="bean的生命周期"></a>bean的生命周期</h3><ol><li>Spring容器创建对象</li><li>执行init方法（可以使用<code>@PostConstruct</code>注解来指定初始化方法）</li><li>调用自己的业务方法</li><li>当spring容器关闭的时候执行destroy方法（可以使用<code>PreDestory</code>注解来指定销毁方法）</li></ol><h3 id="bean的作用域"><a href="#bean的作用域" class="headerlink" title="bean的作用域"></a>bean的作用域</h3><table><thead><tr><th>取值</th><th>含义</th><th>创建对象的时机</th><th>是否为默认值</th></tr></thead><tbody><tr><td>singleton</td><td>在IOC容器中，这个bean对象始终为单例</td><td>IOC容器初始化的时候</td><td>是</td></tr><tr><td>protoType</td><td>这个bean在IOC容器中有多个实例</td><td>获取bean时</td><td>否</td></tr><tr><td>request</td><td>在一个请求范围内有效</td><td>每次请求</td><td>否</td></tr><tr><td>session</td><td>在一个会话范围内有效</td><td>每次会话</td><td>否</td></tr></tbody></table><p>可以使用<code>@Scope</code>注解来指定bean的作用域。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
            <tag> ioc </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ArrayList扩容机制</title>
      <link href="/2024/06/04/ArrayList%E6%89%A9%E5%AE%B9%E6%9C%BA%E5%88%B6/"/>
      <url>/2024/06/04/ArrayList%E6%89%A9%E5%AE%B9%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="初始化方法"><a href="#初始化方法" class="headerlink" title="初始化方法"></a>初始化方法</h2><p>首先看一下ArrayList的三种初始化方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 默认初始容量大小</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEFAULT_CAPACITY</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Object[] DEFAULTCAPACITY_EMPTY_ELEMENTDATA = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 默认构造函数，使用初始容量10构造一个空列表(无参数构造)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ArrayList</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.elementData = DEFAULTCAPACITY_EMPTY_ELEMENTDATA;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 带初始容量参数的构造函数。（用户自己指定容量）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ArrayList</span><span class="params">(<span class="type">int</span> initialCapacity)</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (initialCapacity &gt; <span class="number">0</span>) &#123;<span class="comment">//初始容量大于0</span></span><br><span class="line">    <span class="comment">//创建initialCapacity大小的数组</span></span><br><span class="line">    <span class="built_in">this</span>.elementData = <span class="keyword">new</span> <span class="title class_">Object</span>[initialCapacity];</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (initialCapacity == <span class="number">0</span>) &#123;<span class="comment">//初始容量等于0</span></span><br><span class="line">    <span class="comment">//创建空数组</span></span><br><span class="line">    <span class="built_in">this</span>.elementData = EMPTY_ELEMENTDATA;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;<span class="comment">//初始容量小于0，抛出异常</span></span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;Illegal Capacity: &quot;</span> + initialCapacity);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *构造包含指定collection元素的列表，这些元素利用该集合的迭代器按顺序返回</span></span><br><span class="line"><span class="comment"> *如果指定的集合为null，throws NullPointerException。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ArrayList</span><span class="params">(Collection&lt;? extends E&gt; c)</span> &#123;</span><br><span class="line">    elementData = c.toArray();</span><br><span class="line">    <span class="keyword">if</span> ((size = elementData.length) != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// c.toArray might (incorrectly) not return Object[] (see 6260652)</span></span><br><span class="line">        <span class="keyword">if</span> (elementData.getClass() != Object[].class)</span><br><span class="line">            elementData = Arrays.copyOf(elementData, size, Object[].class);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// replace with empty array.</span></span><br><span class="line">        <span class="built_in">this</span>.elementData = EMPTY_ELEMENTDATA;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>有一个默认的容器大小为10，还有一个空数组elementData用来存放集合的元素。<br>ArrayList()一共提供了三种初始化方法</p><ol><li><p>默认无参的初始化方法：<strong>这种方法会给elementData赋一个空数组，添加元素的时候，才会真正扩容来存放元素，即向数组中添加第一个元素时，数组容器扩为10</strong></p></li><li><p>带初始容量参数的构造函数：这种方法给构造器传一个初始化参数，表示想创建容器元素的个数，之后会比较该参数是否大于0</p><ol><li>如果大于0，就会创建一个该参数大小的数组，并把它赋给elementData</li><li>如果等于0，就会赋一个空数组</li><li>如果小于0，就会报异常</li></ol></li><li><p>带collection元素的构造函数（用的少）：这种方法会给构造器传一个集合，首先会把该集合转化为数组，之后判断该数组长度是否为0</p><ol><li>如果等于0：则直接创建一个空数组，赋给elementData</li><li>如果不等于0：那么会判断该数组的类类型是否为Object[].class（因为toArray()方法不一定会返回Object[]类型的集合）</li></ol></li></ol><h2 id="使用add-方法来添加元素"><a href="#使用add-方法来添加元素" class="headerlink" title="使用add()方法来添加元素"></a>使用add()方法来添加元素</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 将指定的元素追加到此列表的末尾。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">add</span><span class="params">(E e)</span> &#123;</span><br><span class="line">    <span class="comment">// 加元素之前，先调用ensureCapacityInternal方法</span></span><br><span class="line">    ensureCapacityInternal(size + <span class="number">1</span>);  <span class="comment">// Increments modCount!!</span></span><br><span class="line">    <span class="comment">// 这里看到ArrayList添加元素的实质就相当于为数组赋值</span></span><br><span class="line">    elementData[size++] = e;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>首先会调用<code>ensureCapacityInternal</code>方法，之后给elementData数组赋值，</p><p>那么<code>ensureCapacityInternal</code>方法是干嘛的呢？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 确保内部容量达到指定的最小容量。</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">ensureCapacityInternal</span><span class="params">(<span class="type">int</span> minCapacity)</span> &#123;</span><br><span class="line">    ensureExplicitCapacity(calculateCapacity(elementData, minCapacity));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>它是确保内部容量达到了指定的最小容量，也就是说，当给该方法传入size+1时，就表示判断我容器中还能不能再添加一个元素，如果能，我就把元素添加进来。</p><p>那么<code>calculateCapacity</code>方法是干什么的？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据给定的最小容量和当前数组元素来计算所需容量。</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">calculateCapacity</span><span class="params">(Object[] elementData, <span class="type">int</span> minCapacity)</span> &#123;</span><br><span class="line">    <span class="comment">// 如果当前数组元素为空数组（初始情况），返回默认容量和最小容量中的较大值作为所需容量</span></span><br><span class="line">    <span class="keyword">if</span> (elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA) &#123;</span><br><span class="line">        <span class="keyword">return</span> Math.max(DEFAULT_CAPACITY, minCapacity);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 否则直接返回最小容量</span></span><br><span class="line">    <span class="keyword">return</span> minCapacity;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法计算添加元素所需容器大小（总的容器大小，不只是这次添加的元素个数），如果elementData为空数组，如果所需容器大小小于10，就返回10，如果大于10，就返回所需容器，如果当前数组不为空数组，就返回所需容器大小。<strong>总之，这个方法要么返回10（只在刚开始往数组中添加元素），要么返回所需容器大小。</strong><br>计算出所需容器大小后，就要判断我现在的数组大小够不够满足所需容器大小，当不满足时，就需要扩容<code>ensureExplictCapacity</code>方法就是用来判断是否需要扩容的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断是否需要扩容</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">ensureExplicitCapacity</span><span class="params">(<span class="type">int</span> minCapacity)</span> &#123;</span><br><span class="line">    modCount++;</span><br><span class="line">    <span class="comment">//判断当前数组容量是否足以存储minCapacity个元素</span></span><br><span class="line">    <span class="keyword">if</span> (minCapacity - elementData.length &gt; <span class="number">0</span>)</span><br><span class="line">        <span class="comment">//调用grow方法进行扩容</span></span><br><span class="line">        grow(minCapacity);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果所需容器大小大于当前容器容量的话，就需要调用<code>grow</code>方法来扩容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 要分配的最大数组大小</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">MAX_ARRAY_SIZE</span> <span class="operator">=</span> Integer.MAX_VALUE - <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ArrayList扩容的核心方法。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">grow</span><span class="params">(<span class="type">int</span> minCapacity)</span> &#123;</span><br><span class="line">    <span class="comment">// oldCapacity为旧容量，newCapacity为新容量</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">oldCapacity</span> <span class="operator">=</span> elementData.length;</span><br><span class="line">    <span class="comment">// 将oldCapacity 右移一位，其效果相当于oldCapacity /2，</span></span><br><span class="line">    <span class="comment">// 我们知道位运算的速度远远快于整除运算，整句运算式的结果就是将新容量更新为旧容量的1.5倍，</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">newCapacity</span> <span class="operator">=</span> oldCapacity + (oldCapacity &gt;&gt; <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 然后检查新容量是否大于最小需要容量，若还是小于最小需要容量，那么就把最小需要容量当作数组的新容量，</span></span><br><span class="line">    <span class="keyword">if</span> (newCapacity - minCapacity &lt; <span class="number">0</span>)</span><br><span class="line">        newCapacity = minCapacity;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果新容量大于 MAX_ARRAY_SIZE,进入(执行) `hugeCapacity()` 方法来比较 minCapacity 和 MAX_ARRAY_SIZE，</span></span><br><span class="line">    <span class="comment">// 如果minCapacity大于最大容量，则新容量则为`Integer.MAX_VALUE`，否则，新容量大小则为 MAX_ARRAY_SIZE 即为 `Integer.MAX_VALUE - 8`。</span></span><br><span class="line">    <span class="keyword">if</span> (newCapacity - MAX_ARRAY_SIZE &gt; <span class="number">0</span>)</span><br><span class="line">        newCapacity = hugeCapacity(minCapacity);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// minCapacity is usually close to size, so this is a win:</span></span><br><span class="line">    elementData = Arrays.copyOf(elementData, newCapacity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从这个方法中，我们可以看到，<strong>Aarraylist每次扩容之后容量都会变成原来的1.5倍左右，如果是偶数，就是1.5被，如果是奇数，丢弃小数。</strong></p><p>2个变量</p><ul><li>旧容器：原先容器大小</li><li>新容器：扩容为原先容器1.5倍大小</li></ul><p>两个判断</p><ul><li>判断新容器是否满足最小需要容器，如果不满足，把最小需要容器赋给新容器</li><li>判断新容器大小是否超出最大容器限制：如果超出，就判断最大数组长度是否满足所需数组长度，如果满足，把最大数组长度赋给新容器，否则，把整型的最大值赋给新容器。</li></ul><blockquote><p>这里有个点需要注意：定义的MAX_ARRAY_SIZE是Integer_MAX_VALUE-8</p><p>之所以要-8是因为数组需要8字节去存储它自己的大小，防止在分配较大数组时造成内存溢出。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">hugeCapacity</span><span class="params">(<span class="type">int</span> minCapacity)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (minCapacity &lt; <span class="number">0</span>) <span class="comment">// overflow</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">OutOfMemoryError</span>();</span><br><span class="line">    <span class="comment">// 对minCapacity和MAX_ARRAY_SIZE进行比较</span></span><br><span class="line">    <span class="comment">// 若minCapacity大，将Integer.MAX_VALUE作为新数组的大小</span></span><br><span class="line">    <span class="comment">// 若MAX_ARRAY_SIZE大，将MAX_ARRAY_SIZE作为新数组的大小</span></span><br><span class="line">    <span class="comment">// MAX_ARRAY_SIZE = Integer.MAX_VALUE - 8;</span></span><br><span class="line">    <span class="keyword">return</span> (minCapacity &gt; MAX_ARRAY_SIZE) ?</span><br><span class="line">        Integer.MAX_VALUE :</span><br><span class="line">        MAX_ARRAY_SIZE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>举一个例子来说明扩容机制</strong></p><ol><li><strong>当我用无参构造函数创建一个ArrayList()列表时，此时elementData数组为{},容量size为0</strong></li><li><strong>当调用add()方法，往里面添加一个元素，首先会调用ensureCapacityInternal方法来判断当前的内部容器是否满足size+1,也就是1，</strong></li><li><strong>之后就会调用ensureExplictCapacity方法来判断当前容器是否需要扩容，首先它会计算当前所需的容器大小，（计算的规则就是如果我添加元素小于10，就返回10，这个10是ArrayList定义的默认的初始容器大小）因为我需要的容器大小是1，小于10，就返回10，ensureExplictCapacity方法就会基于这个10判断，当前容器大小大不大于10，如果比10小，就调用grow方法来进行扩容</strong></li><li><strong>grow方法中会定义两个变量，一个是旧容量，一个是新容量，旧容量就是当前容器的大小，新容量是当前容器的容量加上当前容器右移一位（也就是除以2的容量），即扩容为原来的1.5倍，因为原先容量为0，所以扩容后容量还是0</strong></li><li><strong>之后就会判断这个新容量满不满足所需的容量，也就是10，如果不满足，就把所需容量赋给新容量，所以这个时候新容量就为10，</strong></li><li><strong>之后会判断这个新容器是否超出了最大数组长度，因为没有超过，所以，就调用Arrays.copyOf()方法把数据拷贝到新容器当中。</strong></li><li><strong>之后再添加第2.3.4..个元素的时候，初始容器10都满足，所以不会发生扩容，</strong></li><li><strong>当添加第11个元素的时候，这个时候所需容器大于了数组长度，所以调用grow扩容为15.</strong></li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ArrayList </tag>
            
            <tag> 集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/06/04/hello-world/"/>
      <url>/2024/06/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hello-world </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/font.css"/>
      <url>/css/font.css</url>
      
        <content type="html"><![CDATA[@font-face {    font-family: "iconfont"; /* Project id 4641720 */    src: url('//at.alicdn.com/t/c/font_4641720_p1vl16xwn7.woff2?t=1722588782914') format('woff2'),    url('//at.alicdn.com/t/c/font_4641720_p1vl16xwn7.woff?t=1722588782914') format('woff'),    url('//at.alicdn.com/t/c/font_4641720_p1vl16xwn7.ttf?t=1722588782914') format('truetype');}.iconfont {    font-family: "iconfont" !important;    font-size: 20px;    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;}.icon-bilibili:before {    content: "\eb78";}.icon-gitee:before {    content: "\e616";}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 页脚与头图透明 */#footer {  background: transparent !important;}#page-header {  background: transparent !important;}/* 白天模式遮罩透明 */#footer::before {  background: transparent !important;}#page-header::before {  background: transparent !important;}/* 夜间模式遮罩透明 */[data-theme="dark"] #footer::before {  background: transparent !important;}[data-theme="dark"] #page-header::before {  background: transparent !important;}/* 侧边栏个人信息卡片动态渐变色 */#aside-content > .card-widget.card-info {  background: linear-gradient(    -45deg,    #e8d8b9,    #eccec5,    #a3e9eb,    #bdbdf0,    #eec1ea  );  box-shadow: 0 0 5px rgb(66, 68, 68);  position: relative;  background-size: 400% 400%;  -webkit-animation: Gradient 10s ease infinite;  -moz-animation: Gradient 10s ease infinite;  animation: Gradient 10s ease infinite !important;}@-webkit-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@-moz-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}/* 黑夜模式适配 */[data-theme="dark"] #aside-content > .card-widget.card-info {  background: #191919ee;}/* 个人信息Follow me按钮 */#aside-content > .card-widget.card-info > #card-info-btn {  background-color: #3eb8be;  border-radius: 8px;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.js"/>
      <url>/js/runtime.js</url>
      
        <content type="html"><![CDATA[var now=new Date;function createtime(){now.setTime(now.getTime()+1e3);var e=new Date("08/01/2023 00:00:00"),t=Math.trunc(234e8+(now-e)/1e3*17),a=(t/1496e5).toFixed(6),o=new Date("08/09/2023 00:00:00"),n=(now-o)/1e3/60/60/24,r=Math.floor(n),i=(now-o)/1e3/60/60-24*r,s=Math.floor(i);1==String(s).length&&(s="0"+s);var d=(now-o)/1e3/60-1440*r-60*s,l=Math.floor(d);1==String(l).length&&(l="0"+l);var g=(now-o)/1e3-86400*r-3600*s-60*l,b=Math.round(g);1==String(b).length&&(b="0"+b);let c="";c=s<18&&s>=9?` <div style="font-size:13px;font-weight:bold">本站运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> </div>`<div style="font-size:13px;font-weight:bold">本站居然运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> ',document.getElementById("workboard")&&(document.getElementById("workboard").innerHTML=c)}setInterval((()=>{createtime()}),1e3);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>photos</title>
      <link href="/photos/index.html"/>
      <url>/photos/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
